{"version":3,"sources":["components/Loading.js","reducers/coin.js","components/CurrentExchangeBar.js","reducers/bot.js","components/ItemList.js","components/SettingTrade.js","components/SettingBar.js","components/NewListing.js","utills.js","components/ExchangeList.js","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/index.js","index.js"],"names":["LoadingAni","keyframes","LoadingContainer","styled","div","LoadingBar","props","size","css","Loading","isLoading","loadCoinList","createAction","loadBithumbBitkrw","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","loadBianceNewListing","loadTickers","setKey","setBtc","upbitBid","upbitAsk","setTradeError","handleActions","state","action","produce","draft","btc","payload","coinInfo","length","tickers","coinList","map","coin","name","last","BTC","bithumbBitKrw","isbitkrwLoading","upbitBitKrw","trade_price","upbitBitKrwError","error","isUsdToKrwLoading","target","data","filter","currency","pair","rate","usdToKrw","toFixed","usdToKrwError","isbitusdtLoading","binanceBitUsdt","p","binanceBitUsdtError","isUpbitNewListingLoading","filteredList","v","title","includes","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","tradeError","ExchangeContainer","section","Info","CurrentExchangeBar","dispatch","useDispatch","useSelector","convertUsdToKrw","useCallback","parseFloat","useEffect","converted","percent1","percent2","symbol","thumb","sendMessage","cancelMessage","isSending","ItemListDiv","ItemListUl","ul","ItemListLi","li","ItemSpan","span","ItemInput","input","React","memo","coins","onChangePercent","type","min","max","step","placeholder","onChange","data-name","ApiContainer","Input","SecretInput","SettingBtn","button","TradeSettingDiv","withComponent","TradeBtn","timer","useRef","coinSymbol","percent","amount","check","current","startTrade","onClickKey","e","innerHTML","value","alert","onClickTrade","onChangeCoin","onChangeAmount","blast","per","Math","abs","q","ref","onClick","SettingBarDiv","InputWrapper","SelectContainer","SelectBtn","wrapper","useState","setCoins","coinPer","setCoinPer","dataset","onSetting","Object","keys","onToggle","style","display","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","fontSize","NewListingDiv","hide","FontDiv","NewListingUl","NewListingli","selected","InfoContainer","UpbitInfoUl","UpbitInfoli","BinanceInfoUl","BinanceInfoli","NewListing","setSelected","isHide","setHide","container","onChangeSelect","id","parseInt","faPlus","faMinus","data-id","key","v4","getPercent","x","y","ExchangesWrapper","ExchangesContainer","ExchangeItem","ExchangeCoinsContainer","CoinContainer","Coin","head","up","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","sortType","setSortType","info","getExchangeTickers","a","setTimeout","bithumb","ccxt","fetchTickers","tickers3","sort","convertedX","convertedY","clearTimeout","onSort","idx","convertedBinance","percentUP","percentBit","data-type","Header","header","Title","App","Boolean","window","location","hostname","match","combineReducers","bot","loadBitKrw","watchBitKrw","loadCurrency","watchCurrency","loadBitUsdt","watchBitUsdt","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","watchCoinList","watchUpbitBid","watchUpbitAsk","setBinanceKey","watchSetBinanceKey","setUpbitKey","watchSetUpbitKey","watchSetKey","watchLoadTickers","coinSaga","dotenv","config","API_URL","process","loadBitKrwAPI","axios","get","call","result","put","takeLatest","loadCurrencyAPI","headers","throttle","loadBitUsdtAPI","loadUpbitNewListingAPI","loadBinanceNewListingAPI","upbitNewCoinAPI","post","binanceNewCoinAPI","coinListAPI","upbitBidAPI","upbitAskAPI","setBinanceKeyAPI","api","sec","setUpbitKeyAPI","setKeyAPI","uid","undefined","localStorage","setItem","getItem","removeItem","api1","sec1","api2","sec2","loadTickersAPI","all","fork","watchSendMessage","watchCancelMessage","botSaga","sendMessageAPI","cancelMessageAPI","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1f2e9490.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\n\nexport const SETTING_BTC = \"SETTING_BTC\";\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\n\nexport const TICKERS_REQUEST = \"TICKERS_REQUEST\";\nexport const TICKERS_SUCCESS = \"TICKERS_SUCCESS\";\nexport const TICKERS_FAILUER = \"TICKERS_FAILURE\";\n\nexport const COIN_LIST_REQUEST = \"COIN_LIST_REQUEST\";\nexport const COIN_LIST_SUCCESS = \"COIN_LIST_SUCCESS\";\nexport const COIN_LIST_FAILURE = \"COIN_LIST_FAILURE\";\n\nexport const UPBIT_BITCOIN_KRW_REQUEST = \"UPBIT_BITCOIN_KRW_REQUEST\";\nexport const UPBIT_BITCOIN_KRW_SUCCESS = \"UPBIT_BITCOIN_KRW_SUCCESS\";\nexport const UPBIT_BITCOIN_KRW_FAILURE = \"UPBIT_BITCOIN_KRW_FAILURE\";\n\nexport const BITHUMB_BITCOIN_KRW = \"BITHUMB_BITCOIN_KRW\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\nexport const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const UPBIT_SETTING_SUCCESS = \"UPBIT_SETTING_SUCCESS\";\nexport const UPBIT_SETTING_FAILURE = \"UPBIT_SETTING_FAILURE\";\n\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\nexport const BINANCE_SETTING_SUCCESS = \"BINANCE_SETTING_SUCCESS\";\nexport const BINANCE_SETTING_FAILURE = \"BINANCE_SETTING_FAILURE\";\n\nexport const KEY_SETTING_REQUEST = \"KEY_SETTING_REQUEST\";\nexport const KEY_SETTING_SUCCESS = \"KEY_SETTING_SUCCESS\";\nexport const KEY_SETTING_FAILURE = \"KEY_SETTING_FAILURE\";\n\nexport const UPBIT_BID_REQUEST = \"UPBIT_BID_REQUEST\";\nexport const UPBIT_BID_SUCCESS = \"UPBIT_BID_SUCCESS\";\nexport const UPBIT_BID_FAILURE = \"UPBIT_BID_FAILURE\";\n\nexport const UPBIT_ASK_REQUEST = \"UPBIT_ASK_REQUEST\";\nexport const UPBIT_ASK_SUCCESS = \"UPBIT_ASK_SUCCESS\";\nexport const UPBIT_ASK_FAILURE = \"UPBIT_ASK_FAILURE\";\n\nexport const TRADE_ERROR_REQUEST = \"TRADE_ERROR_REQUEST\";\n\nexport const loadCoinInfo = createAction(COIN_INFO_REQUEST);\nexport const loadCoinList = createAction(COIN_LIST_REQUEST);\nexport const loadBithumbBitkrw = createAction(BITHUMB_BITCOIN_KRW);\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW_REQUEST);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT_REQUEST);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const loadTickers = createAction(TICKERS_REQUEST);\n\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\n\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\nexport const setKey = createAction(KEY_SETTING_REQUEST);\n\nexport const setBtc = createAction(SETTING_BTC);\n\nexport const upbitBid = createAction(UPBIT_BID_REQUEST);\nexport const upbitAsk = createAction(UPBIT_ASK_REQUEST);\n\nexport const setTradeError = createAction(TRADE_ERROR_REQUEST);\n\nconst initialState = {\n  tickers: [],\n  isbitkrwLoading: false,\n  bithumbBitKrw: 0.0,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: false,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: false,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  btc: {},\n  coinInfo: [],\n  coinList: [\n    \"ADA\",\n    \"ADX\",\n    \"ANKR\",\n    \"ARDR\",\n    \"ARK\",\n    \"ATOM\",\n    \"BAT\",\n    \"BCH\",\n    \"BTG\",\n    \"CVC\",\n    \"CHZ\",\n    \"DCR\",\n    \"ELF\",\n    \"ENJ\",\n    \"EOS\",\n    \"ETC\",\n    \"ETH\",\n    \"GAS\",\n    \"GNT\",\n    \"GRS\",\n    \"GTO\",\n    \"HBAR\",\n    \"ICX\",\n    \"IOST\",\n    \"IOTA\",\n    \"KMD\",\n    \"KNC\",\n    \"LOOM\",\n    \"LSK\",\n    \"LTC\",\n    \"MANA\",\n    \"MBL\",\n    \"MCO\",\n    \"MTL\",\n    \"NEO\",\n    \"OMG\",\n    \"ONG\",\n    \"ONT\",\n    \"OST\",\n    \"POLY\",\n    \"POWR\",\n    \"QKC\",\n    \"QTUM\",\n    \"REP\",\n    \"SC\",\n    \"SNT\",\n    \"STEEM\",\n    \"STORJ\",\n    \"STPT\",\n    \"STRAT\",\n    \"TFUEL\",\n    \"THETA\",\n    \"TRX\",\n    \"VET\",\n    \"WAVES\",\n    \"XEM\",\n    \"XLM\",\n    \"XRP\",\n    \"ZIL\",\n    \"ZRX\",\n  ],\n  tradeError: 0,\n};\nexport default handleActions(\n  {\n    [SETTING_BTC]: (state, action) =>\n      produce(state, (draft) => {\n        draft.btc = action.payload;\n      }),\n    [COIN_INFO_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        if (draft.coinInfo.length < action.payload.coinInfo.length)\n          draft.coinInfo = action.payload.coinInfo;\n      }),\n    [TICKERS_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [TICKERS_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tickers = action.payload;\n      }),\n    [TICKERS_FAILUER]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const coinList = action.payload.map((coin) => {\n          return coin.name;\n        });\n        draft.coinList = coinList;\n      }),\n    [COIN_LIST_FAILURE]: (state, action) => produce(state, (draft) => {}),\n    [BITHUMB_BITCOIN_KRW]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          BTC: { last },\n        } = action.payload;\n        draft.bithumbBitKrw = last;\n      }),\n    [UPBIT_BITCOIN_KRW_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = true;\n      }),\n    [UPBIT_BITCOIN_KRW_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = false;\n        draft.upbitBitKrw = action.payload[0].trade_price;\n      }),\n    [UPBIT_BITCOIN_KRW_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitBitKrwError = action.payload.error;\n      }),\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const target = action.payload.data.filter(\n          (currency) => currency.pair === \"KRW_USD\"\n        )[0].rate;\n        //console.log(target);\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = target.toFixed(3);\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const { payload } = action;\n        const filteredList = payload\n          .filter((v) => v.title.includes(\"BTC\"))\n          .map((v) => {\n            if (\n              moment(v.created_at).format(\"YYYY-MM-DD\") ===\n              moment().format(\"YYYY-MM-DD\")\n            )\n              return { new: true, notice: v };\n            else return { new: false, notice: v };\n          });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [UPBIT_SETTING_SUCCESS]: (state, action) => {},\n    [UPBIT_SETTING_FAILURE]: (state, action) => {},\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [BINANCE_SETTING_SUCCESS]: (state, action) => {},\n    [BINANCE_SETTING_FAILURE]: (state, action) => {},\n    [KEY_SETTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [KEY_SETTING_SUCCESS]: (state, action) => {},\n    [KEY_SETTING_FAILURE]: (state, action) => {},\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [UPBIT_BID_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BID_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_BID_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [UPBIT_ASK_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_ASK_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_ASK_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [TRADE_ERROR_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 0;\n      }),\n  },\n  initialState\n);\n","import React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setBtc } from \"../reducers/coin\";\nconst ExchangeContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n  height: 35px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 33px;\n  }\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 1rem;\n  margin: 0;\n  padding: 4px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    word-break: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (max-width: 581px) {\n    font-size: 0.75rem;\n  }\n`;\nfunction CurrentExchangeBar() {\n  const dispatch = useDispatch();\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt, bithumbBitKrw } = useSelector(\n    (state) => state.coin\n  );\n  const convertUsdToKrw = useCallback(() => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  }, [binanceBitUsdt, usdToKrw]);\n  useEffect(() => {\n    const converted = convertUsdToKrw(),\n      percent1 = (\n        ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n          convertUsdToKrw()) *\n        100\n      ).toFixed(2),\n      percent2 = (\n        ((parseFloat(bithumbBitKrw, 10) - convertUsdToKrw()) /\n          convertUsdToKrw()) *\n        100\n      ).toFixed(2);\n    dispatch(\n      setBtc({\n        symbol: \"BTC\",\n        last: upbitBitKrw,\n        converted: parseFloat(converted, 10),\n        percent1: parseFloat(percent1, 10),\n        thumb: bithumbBitKrw,\n        percent2: parseFloat(percent2, 10),\n      })\n    );\n  }, [convertUsdToKrw, dispatch, upbitBitKrw, bithumbBitKrw]);\n  return (\n    <>\n      <ExchangeContainer>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw()} BTC/KRW`}</Info>\n        <Info>{`차이: ${(\n          ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n            convertUsdToKrw()) *\n          100\n        ).toFixed(2)}%`}</Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\nexport const CANCEL_MESSAGE_REQUEST = \"CANCEL_MESSAGE_REQUEST\";\nexport const CANCEL_MESSAGE_SUCCESS = \"CANCEL_MESSAGE_SUCCESS\";\nexport const CANCEL_MESSAGE_FAILURE = \"CANCEL_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\nexport const cancelMessage = createAction(CANCEL_MESSAGE_REQUEST);\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [CANCEL_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ItemListDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n`;\nconst ItemListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n  height: 200px;\n  padding: 0;\n  margin: 0;\n  background-color: white;\n  margin: 5px;\n  padding: 5px;\n  overflow-y: scroll;\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  /* Hide scrollbar for IE and Edge */\n  & {\n    -ms-overflow-style: none;\n  }\n`;\nconst ItemListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid #e3e3e3;\n  border-left: 0;\n  border-right: 0;\n  width: 100%;\n`;\nconst ItemSpan = styled.span`\n  font-size: 0.8rem;\n`;\nconst ItemInput = styled.input`\n  background-color: white;\n  border: 2px solid #e3e3e3;\n  width: 30%;\n  padding: 5px;\n`;\nfunction ItemList({ coins, onChangePercent }) {\n  return (\n    <ItemListDiv>\n      <ItemListUl>\n        <ItemListLi>\n          <ItemSpan>BTC</ItemSpan>\n          <ItemInput\n            type=\"number\"\n            min={0}\n            max={100}\n            step={0.1}\n            placeholder=\"N%\"\n            onChange={onChangePercent}\n            data-name={\"BTC\"}\n          />\n        </ItemListLi>\n        {coins &&\n          coins.map((coin) => {\n            return (\n              <ItemListLi>\n                <ItemSpan>{coin.symbol}</ItemSpan>\n                <ItemInput\n                  type=\"number\"\n                  min={0}\n                  max={100}\n                  step={0.1}\n                  placeholder=\"N%\"\n                  onChange={onChangePercent}\n                  data-name={coin.symbol}\n                />\n              </ItemListLi>\n            );\n          })}\n      </ItemListUl>\n    </ItemListDiv>\n  );\n}\nexport default React.memo(ItemList);\n","import React, { useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { upbitBid, upbitAsk, setTradeError, setKey } from \"../reducers/coin\";\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n  width: 100%;\n`;\nconst TradeSettingDiv = ApiContainer.withComponent(\"div\");\nconst TradeBtn = styled(SettingBtn.withComponent(\"button\"))`\n  border-radius: 10px;\n  width: 50%;\n`;\nfunction SettingTrade({ coinInfo }) {\n  const dispatch = useDispatch();\n  const timer = useRef(false);\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  const coinSymbol = useRef(\"\");\n  const percent = useRef(\"\");\n  const amount = useRef(0);\n  const check = useRef(null);\n  const {\n    upbitBitKrw,\n    tradeError,\n    upbitApi: api1,\n    upbitSec: sec1,\n    binanceApi: api2,\n    binanceSec: sec2,\n  } = useSelector((state) => state.coin);\n\n  useEffect(() => {\n    if (timer.current) {\n      if (tradeError === 0) {\n        startTrade();\n      } else {\n        timer.current = false;\n      }\n    }\n  });\n  const onClickKey = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          upbitApi.current.value === \"\" ||\n          upbitSec.current.value === \"\" ||\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API와 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setKey({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n            type: \"set\",\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setKey({\n            upbitApi: \"\",\n            upbitSec: \"\",\n            binanceApi: \"\",\n            binanceSec: \"\",\n            type: \"cancel\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const onClickTrade = useCallback((e) => {\n    setTradeError();\n    if (timer.current) {\n      timer.current = false;\n    } else {\n      if (\n        binanceApi.current.value === \"\" ||\n        binanceSec.current.value === \"\" ||\n        upbitApi.current.value === \"\" ||\n        upbitSec.current.value === \"\"\n      ) {\n        alert(\"API 와 Secret이 필요합니다\");\n      } else if (coinSymbol.current === \"\" || percent.current === \"\") {\n        alert(\"코인 & 차이(%) 설정이 필요합니다\");\n      } else {\n        timer.current = true;\n      }\n    }\n  }, []);\n  const onChangeCoin = useCallback((e) => {\n    const { target } = e;\n    coinSymbol.current = target.value;\n    //console.log(coinSymbol.current);\n  }, []);\n  const onChangePercent = useCallback((e) => {\n    const { target } = e;\n    percent.current = target.value;\n  }, []);\n  const onChangeAmount = useCallback((e) => {\n    const { target } = e;\n    amount.current = target.value;\n  }, []);\n  const startTrade = useCallback(() => {\n    const coin = coinInfo.filter((coin) => coin.symbol === coinSymbol.current);\n    const converted = (coin[0].blast * upbitBitKrw).toFixed(2);\n    const p = parseFloat(percent.current, 10);\n    const per = parseFloat(\n      (((coin[0].last - converted) / converted) * 100).toFixed(2),\n      10\n    );\n    if (Math.abs(per) >= p) {\n      if (per > 0) {\n        //console.log(\"업비트 매도, 바이낸스 매수\"); //ask  bid\n        dispatch(\n          upbitAsk({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      } else {\n        //console.log(\"업비트 매수, 바이낸스 매도\"); //bid ask\n        dispatch(\n          upbitBid({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      }\n      check.current = per;\n    }\n  }, [coinInfo, upbitBitKrw, dispatch]);\n  return (\n    <>\n      <ApiContainer>\n        <Input ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n        <SecretInput\n          ref={upbitSec}\n          type=\"password\"\n          placeholder=\"업비트 secret\"\n        />\n      </ApiContainer>\n      <ApiContainer>\n        <Input ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n        <SecretInput\n          ref={binanceSec}\n          type=\"password\"\n          placeholder=\"바이낸스 secret\"\n        />\n      </ApiContainer>\n      <SettingBtn onClick={onClickKey}>확인</SettingBtn>\n      <TradeSettingDiv>\n        <Input type=\"text\" placeholder=\"코인\" onChange={onChangeCoin} />\n        <Input\n          type=\"number\"\n          placeholder=\"차이%\"\n          min={0}\n          max={100}\n          step={0.1}\n          onChange={onChangePercent}\n        />\n        <Input\n          type=\"number\"\n          placeholder=\"코인 양\"\n          min={0}\n          step={0.1}\n          onChange={onChangeAmount}\n        />\n        <TradeBtn onClick={onClickTrade}>\n          {timer.current ? \"설정 취소\" : \"자전 설정\"}\n        </TradeBtn>\n      </TradeSettingDiv>\n    </>\n  );\n}\n\nexport default React.memo(SettingTrade);\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendMessage, cancelMessage } from \"../reducers/bot\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ItemList from \"./ItemList\";\nimport SettingTrade from \"./SettingTrade\";\nconst SettingBarDiv = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -1px 1px 3px 0px #696969;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n  width: 100%;\n`;\n\nfunction SettingBar({ coinInfo, upbitBitKrw }) {\n  const dispatch = useDispatch();\n  const wrapper = useRef();\n  const [coins, setCoins] = useState([]);\n  const [coinPer, setCoinPer] = useState({});\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  useEffect(() => {\n    if (coins.length === 0) {\n      setCoins(coinInfo);\n    }\n  }, [coinInfo, upbitBitKrw, coins]);\n  const onChangePercent = useCallback(\n    (e) => {\n      const {\n        target: { value, dataset },\n      } = e;\n      setCoinPer({\n        ...coinPer,\n        [dataset.name]: value,\n      });\n    },\n    [coinPer]\n  );\n\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      const percentsLength = Object.keys(coinPer).length;\n      if (percentsLength > 0) {\n        if (target.innerHTML === \"설정\") {\n          target.innerHTML = \"취소\";\n          dispatch(sendMessage({ coinPer }));\n        } else {\n          target.innerHTML = \"설정\";\n          dispatch(cancelMessage());\n        }\n      } else {\n        alert(\"최소 한개의 % 설정이 필요합니다\");\n      }\n    },\n    [coinPer, dispatch]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1.0rem\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <SettingTrade coinInfo={coinInfo} />\n        <ItemList coins={coins} onChangePercent={onChangePercent} />\n        <SelectContainer>\n          <SelectBtn onClick={onSetting}>설정</SelectBtn>\n        </SelectContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useCallback, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst NewListingDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: ${(props) => (props.hide ? \"auto\" : \"35vh\")};\n  background: #c4cfd8;\n  margin-top: 5px;\n  position: fixed;\n  right: 10px;\n  bottom: 0;\n  border-radius: 4px;\n  border: 3px solid #d4d2d270;\n  box-shadow: 2px 2px 6px 1px;\n  overflow: scroll;\n  @media (min-width: 1025px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"270px\")};\n  }\n  @media (max-width: 1024px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"250px\")};\n  }\n  @media (max-width: 768px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"200px\")};\n    opacity: ${(props) => (props.hide ? \"0.2\" : \"1.0\")};\n  }\n`;\nconst FontDiv = styled.div`\n  display: flex;\n  align-self: flex-end;\n  margin: 5px;\n  svg {\n    cursor: pointer;\n  }\n`;\nconst NewListingUl = styled.ul`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  padding: 0;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  border-bottom: 3px solid #ffffff;\n  cursor: pointer;\n`;\nconst NewListingli = styled.li`\n  list-style: none;\n  flex: 1;\n  padding: 5px;\n  color: ${(props) => (props.selected ? \"black\" : \"#ffffff\")};\n  font-weight: ${(props) => (props.selected ? \"400\" : \"200\")};\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  word-break: keep-all;\n`;\nconst InfoContainer = styled.div`\n  border-top: 1px solid #0404043b;\n`;\nconst UpbitInfoUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 2px;\n`;\nconst UpbitInfoli = styled.li`\n  list-style: none;\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nconst BinanceInfoUl = UpbitInfoUl.withComponent(\"ul\");\nconst BinanceInfoli = styled(UpbitInfoli.withComponent(\"li\"))`\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nfunction NewListing() {\n  const { upbitNewListing, binanceNewListing } = useSelector(\n    (state) => state.coin\n  );\n  const [selected, setSelected] = useState(0);\n  const [isHide, setHide] = useState(false);\n  const container = useRef();\n  const onChangeSelect = useCallback((e) => {\n    const {\n      target: {\n        dataset: { id },\n      },\n    } = e;\n    setSelected(parseInt(id, 10));\n  }, []);\n  const onToggle = useCallback(() => {\n    if (container.current.style.display === \"flex\") {\n      container.current.style.display = \"none\";\n      setHide(true);\n    } else {\n      container.current.style.display = \"flex\";\n      setHide(false);\n    }\n  }, []);\n  //console.log(binanceNewListing);\n  return (\n    <NewListingDiv hide={isHide === true}>\n      <FontDiv>\n        {isHide ? (\n          <FontAwesomeIcon icon={faPlus} onClick={onToggle} />\n        ) : (\n          <FontAwesomeIcon icon={faMinus} onClick={onToggle} />\n        )}\n      </FontDiv>\n      <NewListingUl hide={isHide === true}>\n        <NewListingli\n          data-id={0}\n          onClick={onChangeSelect}\n          selected={selected === 0}\n        >\n          업비트 상장\n        </NewListingli>\n        <NewListingli\n          data-id={1}\n          onClick={onChangeSelect}\n          selected={selected === 1}\n        >\n          바이낸스 상장\n        </NewListingli>\n      </NewListingUl>\n      <InfoContainer style={{ display: \"flex\" }} ref={container}>\n        {selected === 0 ? (\n          <UpbitInfoUl>\n            {upbitNewListing &&\n              upbitNewListing.map((notice) => {\n                return (\n                  <UpbitInfoli key={v4()}>{notice.notice.title}</UpbitInfoli>\n                );\n              })}\n          </UpbitInfoUl>\n        ) : (\n          <BinanceInfoUl>\n            {binanceNewListing &&\n              binanceNewListing.map((notice) => {\n                return <BinanceInfoli key={v4()}>{notice.title}</BinanceInfoli>;\n              })}\n          </BinanceInfoUl>\n        )}\n      </InfoContainer>\n    </NewListingDiv>\n  );\n}\nexport default NewListing;\n","export const getPercent = (x, y) => {\n  return ((x - y) / y) * 100;\n};\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ccxt from \"ccxt\";\nimport Loading from \"./Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUsdToKrw,\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadUpbitNewListing,\n  loadBianceNewListing,\n  loadBithumbBitkrw,\n  loadTickers,\n} from \"../reducers/coin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport NewListing from \"./NewListing\";\nimport { getPercent } from \"../utills\";\nconst ExchangesWrapper = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst ExchangesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 5px;\n  border: 1px solid;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  font-size: 0.4rem;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    padding: 0px;\n  }\n`;\nconst ExchangeItem = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"black\" : \"black\")};\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  @media (min-width: 1025px) {\n    width: 60%;\n    margin: 0 auto;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst Coin = styled.div`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.85rem;\n  color: black;\n  margin-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n  }\n  &:nth-child(2),\n  &:nth-child(5) {\n    color: ${(props) => (props.head === true ? \"black\" : \"#27ae60\")};\n    font-weight: ${(props) => (props.head === true ? \"800\" : \"600\")};\n  }\n  &:nth-child(3) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    font-weight: ${(props) =>\n      props.head === true ? \"800\" : props.up === true ? \"600\" : \"600\"};\n    p {\n      font-size: 0.85rem;\n      margin-bottom: 0;\n      margin-top: 0;\n      @media (max-width: 768px) {\n        font-size: 0.7rem;\n      }\n      @media (max-width: 425px) {\n        align-self: flex-start;\n      }\n    }\n  }\n  &:nth-child(4),\n  &:nth-child(6) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#ff2e18\"\n        : \"#0012ff\"};\n    border-radius: 10px;\n    background-color: ${(props) =>\n      props.head === true\n        ? \"white\"\n        : props.up === true\n        ? \"#ff747363\"\n        : \"#007fff47\"};\n    border-radius: 10px;\n  }\n`;\nfunction ExchangeList() {\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [sortType, setSortType] = useState(-1);\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw, tickers } = useSelector((state) => state.coin);\n  const info = useRef([]);\n  const timer = useRef(null);\n  const getExchangeTickers = useCallback(async () => {\n    if (timer.current) {\n      timer.current = setTimeout(getExchangeTickers, 1000);\n    }\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    const bithumb = new ccxt.bithumb();\n    const tickers3 = await bithumb.fetchTickers();\n    let info = [...tickers];\n    info = info.sort((x, y) => {\n      const convertedX = x.blast * upbitBitKrw,\n        convertedY = y.blast * upbitBitKrw;\n      if (sortType === -1) return x.symbol > y.symbol ? 1 : -1;\n      else if (sortType === 1) return x.symbol < y.symbol ? 1 : -1;\n      else if (sortType === -2) return x.last > y.last ? 1 : -1;\n      else if (sortType === 2) return x.last < y.last ? 1 : -1;\n      else if (sortType === -3) return x.blast > y.blast ? 1 : -1;\n      else if (sortType === 3) return x.blast < y.blast ? 1 : -1;\n      else if (sortType === -4)\n        return (x.last - convertedX) / x.last > (y.last - convertedY) / y.last\n          ? 1\n          : -1;\n      else if (sortType === 4)\n        return (x.last - convertedX) / x.last < (y.last - convertedY) / y.last\n          ? 1\n          : -1;\n    });\n    dispatch(loadTickers());\n    dispatch(loadUpbitBitKrw());\n    dispatch(\n      loadBithumbBitkrw({\n        BTC: tickers3[\"BTC/KRW\"],\n      })\n    );\n    dispatch(loadUsdToKrw());\n    dispatch(loadBinanceBitUsdt());\n    dispatch(loadUpbitNewListing());\n    dispatch(loadBianceNewListing());\n    if (loading === true) setLoading(false);\n    if (isFirstLoading === false) setIsFirstLoading(true);\n    setUpbitCoinInfo(info);\n  }, [loading, isFirstLoading, dispatch, sortType, upbitBitKrw, tickers]);\n\n  useEffect(() => {\n    timer.current = setTimeout(getExchangeTickers, 1000);\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, [getExchangeTickers, sortType, upbitBitKrw, coinList, info]);\n  const onSort = useCallback(\n    (coinInfo) => (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType === 1) {\n          coinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          setSortType(-1);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType === 2) {\n          coinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          setSortType(-2);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType === 3) {\n          coinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          setSortType(-3);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType === 4) {\n          coinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return getPercent(x.last, convertedX) >\n              getPercent(y.last, convertedY)\n              ? 1\n              : -1;\n          });\n          setSortType(-4);\n        } else {\n          coinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return getPercent(x.last, convertedX) <\n              getPercent(y.last, convertedY)\n              ? 1\n              : -1;\n          });\n          setSortType(4);\n        }\n      }\n    },\n    [sortType, upbitBitKrw]\n  );\n  return (\n    <main>\n      <ExchangesContainer>\n        <ExchangeItem>Upbit</ExchangeItem>\n        <ExchangeItem>Binance</ExchangeItem>\n        <ExchangeItem>Bithumb</ExchangeItem>\n      </ExchangesContainer>\n      <SettingBar coinInfo={upbitCoinInfo} upbitBitKrw={upbitBitKrw} />\n      <CurrentExchangeBar />\n      <ExchangesWrapper>\n        <ExchangeCoinsContainer>\n          {\n            <CoinContainer>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={1}>\n                코인\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={2}>\n                업비트(₩)\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={3}>\n                바이낸스(BTC)\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={4}>\n                차이(%)\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={5}>\n                빗썸(₩)\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={6}>\n                차이(%)\n              </Coin>\n            </CoinContainer>\n          }\n          {upbitCoinInfo.map((v, idx) => {\n            const convertedBinance = parseFloat(\n              (v.blast * upbitBitKrw).toFixed(2),\n              10\n            );\n            const percentUP = getPercent(v.last, convertedBinance).toFixed(2);\n            const percentBit = getPercent(v.thumb, convertedBinance).toFixed(2);\n            return (\n              <CoinContainer key={v4()}>\n                <Coin>{v.symbol}</Coin>\n                <Coin\n                  head={percentUP === \"-100.00\"}\n                  data-type={percentUP === \"-100.00\" ? \"unlist\" : \"list\"}\n                >\n                  {v.last}₩\n                </Coin>\n                <Coin up={percentUP > 0}>\n                  {v.blast && v.blast.toFixed(8)}\n                  <p>{convertedBinance}₩</p>\n                </Coin>\n                <Coin head={percentUP === \"-100.00\"} up={percentUP > 0}>\n                  {percentUP !== \"Infinity\"\n                    ? percentUP === \"-100.00\"\n                      ? \"미 상장\"\n                      : `${percentUP}%`\n                    : \"로딩중\"}\n                </Coin>\n                <Coin\n                  head={percentBit === \"-100.00\"}\n                  data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                >\n                  {v.thumb}₩\n                </Coin>\n                <Coin\n                  head={percentBit === \"-100.00\"}\n                  up={percentBit > 0}\n                  data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                >\n                  {percentBit !== \"Infinity\"\n                    ? percentBit === \"-100.00\"\n                      ? \"미 상장\"\n                      : `${percentBit}%`\n                    : \"로딩중\"}\n                </Coin>\n              </CoinContainer>\n            );\n          })}\n        </ExchangeCoinsContainer>\n        <NewListing />\n      </ExchangesWrapper>\n      <Loading isLoading={loading} />\n    </main>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ExchangeList from \"./components/ExchangeList\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCoinList } from \"./reducers/coin\";\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-bottom: 0;\n  margin-top: 0;\n  height: 20px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n  }\n`;\nconst Title = styled.p`\n  font-family: 800;\n`;\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCoinList());\n  }, [dispatch]);\n  return (\n    <>\n      <Header>\n        <Title>CoinAT</Title>\n      </Header>\n      <ExchangeList />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nexport default combineReducers({\n  coin,\n  bot,\n});\n","import { v4 } from \"uuid\";\nimport { all, takeLatest, fork, put, call, throttle } from \"redux-saga/effects\";\nimport {\n  UPBIT_BITCOIN_KRW_SUCCESS,\n  UPBIT_BITCOIN_KRW_FAILURE,\n  UPBIT_BITCOIN_KRW_REQUEST,\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  BINANCE_BITCOIN_USDT_REQUEST,\n  BINANCE_BITCOIN_USDT_FAILURE,\n  BINANCE_BITCOIN_USDT_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n  COIN_LIST_FAILURE,\n  COIN_LIST_SUCCESS,\n  COIN_LIST_REQUEST,\n  UPBIT_BID_REQUEST,\n  UPBIT_ASK_REQUEST,\n  UPBIT_BID_FAILURE,\n  UPBIT_BID_SUCCESS,\n  UPBIT_ASK_SUCCESS,\n  UPBIT_ASK_FAILURE,\n  BINANCE_SETTING,\n  BINANCE_SETTING_SUCCESS,\n  BINANCE_SETTING_FAILURE,\n  UPBIT_SETTING,\n  UPBIT_SETTING_SUCCESS,\n  UPBIT_SETTING_FAILURE,\n  KEY_SETTING_REQUEST,\n  KEY_SETTING_SUCCESS,\n  KEY_SETTING_FAILURE,\n  TICKERS_REQUEST,\n  TICKERS_SUCCESS,\n  TICKERS_FAILUER,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction loadBitKrwAPI() {\n  return axios.get(\"https://api.upbit.com/v1/ticker?markets=KRW-BTC\");\n}\nfunction* loadBitKrw(action) {\n  try {\n    const result = yield call(loadBitKrwAPI, action.payload);\n    yield put({\n      type: UPBIT_BITCOIN_KRW_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BITCOIN_KRW_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitKrw() {\n  yield takeLatest(UPBIT_BITCOIN_KRW_REQUEST, loadBitKrw);\n}\n\nfunction loadCurrencyAPI() {\n  return axios.get(`${API_URL}coin/currency`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n  //https://www.freeforexapi.com/api/live?pairs=USDKRW\n  //return axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\");\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield throttle(1000, CURRENCY_REQUEST, loadCurrency);\n}\n\nfunction loadBitUsdtAPI() {\n  return axios.get(\n    \"https://www.binance.com/api/v1/aggTrades?limit=1&symbol=BTCUSDT\"\n  );\n}\nfunction* loadBitUsdt() {\n  try {\n    const result = yield call(loadBitUsdtAPI);\n    yield put({\n      type: BINANCE_BITCOIN_USDT_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_BITCOIN_USDT_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitUsdt() {\n  yield takeLatest(BINANCE_BITCOIN_USDT_REQUEST, loadBitUsdt);\n}\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice/upbit`);\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice/binance`);\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data);\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data);\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nfunction coinListAPI() {\n  return axios.get(`${API_URL}coin`);\n}\nfunction* coinList() {\n  try {\n    const result = yield call(coinListAPI);\n    yield put({\n      type: COIN_LIST_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: COIN_LIST_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCoinList() {\n  yield takeLatest(COIN_LIST_REQUEST, coinList);\n}\n\nfunction upbitBidAPI(data) {\n  return axios.post(`${API_URL}trade/bid`, data);\n}\nfunction* upbitBid(action) {\n  try {\n    //console.log(action.payload);\n    const result = yield call(upbitBidAPI, action.payload);\n    yield put({\n      type: UPBIT_BID_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BID_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitBid() {\n  yield throttle(1200, UPBIT_BID_REQUEST, upbitBid);\n}\n\nfunction upbitAskAPI(data) {\n  return axios.post(`${API_URL}trade/ask`, data);\n}\nfunction* upbitAsk(action) {\n  try {\n    const result = yield call(upbitAskAPI, action.payload);\n    yield put({\n      type: UPBIT_ASK_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_ASK_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitAsk() {\n  yield throttle(1200, UPBIT_ASK_REQUEST, upbitAsk);\n}\n\nfunction setBinanceKeyAPI(data) {\n  return axios.post(`${API_URL}trade/binance_key`, {\n    api: data.binanceApi,\n    sec: data.binanceSec,\n  });\n}\nfunction* setBinanceKey(action) {\n  try {\n    yield call(setBinanceKeyAPI, action.payload);\n    yield put({\n      type: BINANCE_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetBinanceKey() {\n  yield takeLatest(BINANCE_SETTING, setBinanceKey);\n}\n\nfunction setUpbitKeyAPI(data) {\n  return axios.post(`${API_URL}trade/upbit_key`, {\n    api: data.upbitApi,\n    sec: data.upbitSec,\n  });\n}\nfunction* setUpbitKey(action) {\n  try {\n    yield call(setUpbitKeyAPI, action.payload);\n    yield put({\n      type: UPBIT_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetUpbitKey() {\n  yield takeLatest(UPBIT_SETTING, setUpbitKey);\n}\n\nfunction setKeyAPI(data) {\n  let uid = undefined;\n  if (data.type !== \"cancel\") {\n    uid = v4();\n    localStorage.setItem(\"uid\", uid);\n  } else {\n    uid = localStorage.getItem(\"uid\");\n    localStorage.removeItem(\"uid\");\n  }\n  return axios.post(`${API_URL}trade/key`, {\n    api1: data.upbitApi,\n    sec1: data.upbitSec,\n    api2: data.binanceApi,\n    sec2: data.binanceSec,\n    type: data.type,\n    uid,\n  });\n}\nfunction* setKey(action) {\n  try {\n    yield call(setKeyAPI, action.payload);\n    yield put({\n      type: KEY_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: KEY_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetKey() {\n  yield takeLatest(KEY_SETTING_REQUEST, setKey);\n}\n\nfunction loadTickersAPI() {\n  return axios.get(`${API_URL}coin/tickers`);\n}\nfunction* loadTickers() {\n  try {\n    const result = yield call(loadTickersAPI);\n    yield put({\n      type: TICKERS_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: TICKERS_FAILUER,\n      error: e,\n    });\n  }\n}\nfunction* watchLoadTickers() {\n  yield throttle(1000, TICKERS_REQUEST, loadTickers);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchBitKrw),\n    fork(watchCurrency),\n    fork(watchBitUsdt),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n    fork(watchCoinList),\n    fork(watchUpbitBid),\n    fork(watchUpbitAsk),\n    fork(watchSetBinanceKey),\n    fork(watchSetUpbitKey),\n    fork(watchSetKey),\n    fork(watchLoadTickers),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_FAILURE,\n  CANCEL_MESSAGE_REQUEST,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot`, data);\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\n\nfunction cancelMessageAPI(data) {\n  return axios.post(`${API_URL}bot/cancel`, data);\n}\nfunction* cancelMessage(action) {\n  try {\n    yield call(cancelMessageAPI, action.payload);\n    yield put({\n      type: CANCEL_MESSAGE_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CANCEL_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCancelMessage() {\n  yield takeLatest(CANCEL_MESSAGE_REQUEST, cancelMessage);\n}\n\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage), fork(watchCancelMessage)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n//import logger from \"redux-logger\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}