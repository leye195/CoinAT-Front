{"version":3,"sources":["components/Loading.js","reducers/coin.js","components/CurrentExchangeBar.js","reducers/bot.js","components/ItemList.js","components/SettingTrade.js","components/SettingBar.js","components/NewListing.js","components/ExchangeList.js","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/index.js","index.js"],"names":["LoadingAni","keyframes","LoadingContainer","styled","div","LoadingBar","props","size","css","Loading","isLoading","loadCoinList","createAction","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","checkBinanceCoin","setUpbit","setBinance","setBtc","upbitBid","upbitAsk","setTradeError","handleActions","state","action","produce","draft","btc","payload","coinInfo","length","coinList","map","coin","name","isbitkrwLoading","upbitBitKrw","trade_price","upbitBitKrwError","error","isUsdToKrwLoading","target","rates","rate","usdToKrw","toFixed","usdToKrwError","isbitusdtLoading","binanceBitUsdt","p","binanceBitUsdtError","isUpbitNewListingLoading","filteredList","filter","v","title","includes","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","tradeError","ExchangeContainer","section","Info","CurrentExchangeBar","dispatch","useDispatch","useSelector","convertUsdToKrw","useCallback","parseFloat","useEffect","converted","percent","symbol","last","sendMessage","cancelMessage","isSending","ItemListDiv","ItemListUl","ul","ItemListLi","li","ItemSpan","span","ItemInput","input","React","memo","coins","onChangePercent","type","min","max","step","placeholder","onChange","data-name","ApiContainer","Input","SecretInput","SettingBtn","button","TradeSettingDiv","withComponent","TradeBtn","timer","useRef","coinSymbol","amount","check","current","startTrade","onClickUpbit","e","innerHTML","value","alert","onClickBinance","onClickTrade","onChangeCoin","onChangeAmount","blast","per","Math","abs","q","ref","onClick","SettingBarDiv","InputWrapper","SelectContainer","SelectBtn","wrapper","useState","setCoins","coinPer","setCoinPer","checkPer","startBot","coinlist","krw","Object","keys","forEach","indexOf","upbit","binance","dataset","onSetting","onToggle","style","display","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","fontSize","NewListingDiv","hide","FontDiv","NewListingUl","NewListingli","selected","InfoContainer","UpbitInfoUl","UpbitInfoli","BinanceInfoUl","BinanceInfoli","NewListing","setSelected","isHide","setHide","container","onChangeSelect","id","parseInt","checkTodaysNotice","binanceNewNotices","notices","faPlus","faMinus","data-id","key","v4","ExchangesWrapper","ExchangesContainer","ExchangeItem","ExchangeCoinsContainer","CoinContainer","Coin","head","up","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","sortType","setSortType","info","wsUpbit","wsBinance","getExchangeTickers","a","setTimeout","ccxt","fetchTickers","tickers1","tickers2","slice","low","high","sort","x","y","convertedX","convertedY","upbitWS","WebSocket","binaryType","onopen","console","log","data","ticket","codes","send","JSON","stringify","onmessage","enc","TextDecoder","arr","Uint8Array","parse","decode","code","high_price","low_price","ask_bid","targetCoin","item","cleanedList","concat","onclose","close","binanceWS","streams","i","toLowerCase","s","c","clearTimeout","onSort","idx","convertedBinance","Header","header","Title","App","Boolean","window","location","hostname","match","combineReducers","bot","loadBitKrw","watchBitKrw","loadCurrency","watchCurrency","loadBitUsdt","watchBitUsdt","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","watchCoinList","watchUpbitBid","watchUpbitAsk","setBinanceKey","watchSetBinanceKey","setUpbitKey","watchSetUpbitKey","coinSaga","dotenv","config","API_URL","process","loadBitKrwAPI","axios","get","call","result","put","takeLatest","loadCurrencyAPI","headers","throttle","loadBitUsdtAPI","loadUpbitNewListingAPI","loadBinanceNewListingAPI","upbitNewCoinAPI","post","binanceNewCoinAPI","coinListAPI","upbitBidAPI","upbitAskAPI","setBinanceKeyAPI","api","sec","setUpbitKeyAPI","all","fork","watchSendMessage","watchCancelMessage","botSaga","sendMessageAPI","cancelMessageAPI","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.17581eec.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\n\nexport const SETTING_BTC = \"SETTING_BTC\";\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\n\nexport const COIN_LIST_REQUEST = \"COIN_LIST_REQUEST\";\nexport const COIN_LIST_SUCCESS = \"COIN_LIST_SUCCESS\";\nexport const COIN_LIST_FAILURE = \"COIN_LIST_FAILURE\";\n\nexport const UPBIT_BITCOIN_KRW_REQUEST = \"UPBIT_BITCOIN_KRW_REQUEST\";\nexport const UPBIT_BITCOIN_KRW_SUCCESS = \"UPBIT_BITCOIN_KRW_SUCCESS\";\nexport const UPBIT_BITCOIN_KRW_FAILURE = \"UPBIT_BITCOIN_KRW_FAILURE\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\nexport const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const UPBIT_SETTING_SUCCESS = \"UPBIT_SETTING_SUCCESS\";\nexport const UPBIT_SETTING_FAILURE = \"UPBIT_SETTING_FAILURE\";\n\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\nexport const BINANCE_SETTING_SUCCESS = \"BINANCE_SETTING_SUCCESS\";\nexport const BINANCE_SETTING_FAILURE = \"BINANCE_SETTING_FAILURE\";\n\nexport const UPBIT_BID_REQUEST = \"UPBIT_BID_REQUEST\";\nexport const UPBIT_BID_SUCCESS = \"UPBIT_BID_SUCCESS\";\nexport const UPBIT_BID_FAILURE = \"UPBIT_BID_FAILURE\";\n\nexport const UPBIT_ASK_REQUEST = \"UPBIT_ASK_REQUEST\";\nexport const UPBIT_ASK_SUCCESS = \"UPBIT_ASK_SUCCESS\";\nexport const UPBIT_ASK_FAILURE = \"UPBIT_ASK_FAILURE\";\n\nexport const TRADE_ERROR_REQUEST = \"TRADE_ERROR_REQUEST\";\n\nexport const loadCoinInfo = createAction(COIN_INFO_REQUEST);\nexport const loadCoinList = createAction(COIN_LIST_REQUEST);\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW_REQUEST);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT_REQUEST);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\nexport const setBtc = createAction(SETTING_BTC);\n\nexport const upbitBid = createAction(UPBIT_BID_REQUEST);\nexport const upbitAsk = createAction(UPBIT_ASK_REQUEST);\n\nexport const setTradeError = createAction(TRADE_ERROR_REQUEST);\n\nconst initialState = {\n  isbitkrwLoading: false,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: false,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: false,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  btc: {},\n  coinInfo: [],\n  coinList: [\n    \"ADA\",\n    \"ADX\",\n    \"ANKR\",\n    \"ARDR\",\n    \"ARK\",\n    \"ATOM\",\n    \"BAT\",\n    \"BCH\",\n    \"BTG\",\n    \"CVC\",\n    \"CHZ\",\n    \"DCR\",\n    \"ELF\",\n    \"ENJ\",\n    \"EOS\",\n    \"ETC\",\n    \"ETH\",\n    \"GAS\",\n    \"GNT\",\n    \"GRS\",\n    \"GTO\",\n    \"HBAR\",\n    \"ICX\",\n    \"IOST\",\n    \"IOTA\",\n    \"KMD\",\n    \"KNC\",\n    \"LOOM\",\n    \"LSK\",\n    \"LTC\",\n    \"MANA\",\n    \"MBL\",\n    \"MCO\",\n    \"MTL\",\n    \"NEO\",\n    \"OMG\",\n    \"ONG\",\n    \"ONT\",\n    \"OST\",\n    \"POLY\",\n    \"POWR\",\n    \"QKC\",\n    \"QTUM\",\n    \"REP\",\n    \"SC\",\n    \"SNT\",\n    \"STEEM\",\n    \"STORJ\",\n    \"STPT\",\n    \"STRAT\",\n    \"TFUEL\",\n    \"THETA\",\n    \"TRX\",\n    \"VET\",\n    \"WAVES\",\n    \"XEM\",\n    \"XLM\",\n    \"XRP\",\n    \"ZIL\",\n    \"ZRX\",\n  ],\n  tradeError: 0,\n};\nexport default handleActions(\n  {\n    [SETTING_BTC]: (state, action) =>\n      produce(state, (draft) => {\n        draft.btc = action.payload;\n      }),\n    [COIN_INFO_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        if (draft.coinInfo.length < action.payload.coinInfo.length)\n          draft.coinInfo = action.payload.coinInfo;\n      }),\n    [COIN_LIST_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const coinList = action.payload.map((coin) => {\n          return coin.name;\n        });\n        draft.coinList = coinList;\n      }),\n    [COIN_LIST_FAILURE]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BITCOIN_KRW_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = true;\n      }),\n    [UPBIT_BITCOIN_KRW_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = false;\n        draft.upbitBitKrw = action.payload[0].trade_price;\n      }),\n    [UPBIT_BITCOIN_KRW_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitBitKrwError = action.payload.error;\n      }),\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const target = action.payload.rates[\"USDKRW\"].rate;\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = target.toFixed(3);\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const { payload } = action;\n        const filteredList = payload\n          .filter((v) => v.title.includes(\"BTC\"))\n          .map((v) => {\n            if (\n              moment(v.created_at).format(\"YYYY-MM-DD\") ===\n              moment().format(\"YYYY-MM-DD\")\n            )\n              return { new: true, notice: v };\n            else return { new: false, notice: v };\n          });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [UPBIT_SETTING_SUCCESS]: (state, action) => {},\n    [UPBIT_SETTING_FAILURE]: (state, action) => {},\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [BINANCE_SETTING_SUCCESS]: (state, action) => {},\n    [BINANCE_SETTING_FAILURE]: (state, action) => {},\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [UPBIT_BID_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BID_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_BID_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [UPBIT_ASK_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_ASK_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_ASK_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [TRADE_ERROR_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 0;\n      }),\n  },\n  initialState\n);\n","import React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setBtc } from \"../reducers/coin\";\nconst ExchangeContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n  height: 35px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 33px;\n  }\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 1rem;\n  margin: 0;\n  padding: 4px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    word-break: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (max-width: 581px) {\n    font-size: 0.75rem;\n  }\n`;\nfunction CurrentExchangeBar() {\n  const dispatch = useDispatch();\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt } = useSelector(\n    (state) => state.coin\n  );\n  const convertUsdToKrw = useCallback(() => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  }, [binanceBitUsdt, usdToKrw]);\n  useEffect(() => {\n    const converted = convertUsdToKrw(),\n      percent = (\n        ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n          convertUsdToKrw()) *\n        100\n      ).toFixed(2);\n    dispatch(\n      setBtc({\n        symbol: \"BTC\",\n        last: upbitBitKrw,\n        converted: parseFloat(converted, 10),\n        percent: parseFloat(percent, 10),\n      })\n    );\n  }, [convertUsdToKrw, dispatch, upbitBitKrw]);\n  return (\n    <>\n      <ExchangeContainer>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw()} BTC/KRW`}</Info>\n        <Info>{`차이: ${(\n          ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n            convertUsdToKrw()) *\n          100\n        ).toFixed(2)}%`}</Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\nexport const CANCEL_MESSAGE_REQUEST = \"CANCEL_MESSAGE_REQUEST\";\nexport const CANCEL_MESSAGE_SUCCESS = \"CANCEL_MESSAGE_SUCCESS\";\nexport const CANCEL_MESSAGE_FAILURE = \"CANCEL_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\nexport const cancelMessage = createAction(CANCEL_MESSAGE_REQUEST);\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [CANCEL_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import React, { useRef, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\n\nconst ItemListDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n`;\nconst ItemListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n  height: 200px;\n  padding: 0;\n  margin: 0;\n  background-color: white;\n  margin: 5px;\n  padding: 5px;\n  overflow-y: scroll;\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  /* Hide scrollbar for IE and Edge */\n  & {\n    -ms-overflow-style: none;\n  }\n`;\nconst ItemListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid #e3e3e3;\n  border-left: 0;\n  border-right: 0;\n  width: 100%;\n`;\nconst ItemSpan = styled.span`\n  font-size: 0.8rem;\n`;\nconst ItemInput = styled.input`\n  background-color: white;\n  border: 2px solid #e3e3e3;\n  width: 30%;\n  padding: 5px;\n`;\nfunction ItemList({ coins, onChangePercent }) {\n  return (\n    <ItemListDiv>\n      <ItemListUl>\n        <ItemListLi>\n          <ItemSpan>BTC</ItemSpan>\n          <ItemInput\n            type=\"number\"\n            min={0}\n            max={100}\n            step={0.1}\n            placeholder=\"N%\"\n            onChange={onChangePercent}\n            data-name={\"BTC\"}\n          />\n        </ItemListLi>\n        {coins &&\n          coins.map((coin) => {\n            return (\n              <ItemListLi>\n                <ItemSpan>{coin.symbol}</ItemSpan>\n                <ItemInput\n                  type=\"number\"\n                  min={0}\n                  max={100}\n                  step={0.1}\n                  placeholder=\"N%\"\n                  onChange={onChangePercent}\n                  data-name={coin.symbol}\n                />\n              </ItemListLi>\n            );\n          })}\n      </ItemListUl>\n    </ItemListDiv>\n  );\n}\nexport default React.memo(ItemList);\n","import React, { useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setUpbit,\n  setBinance,\n  upbitBid,\n  upbitAsk,\n  setTradeError,\n} from \"../reducers/coin\";\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n  width: 100%;\n`;\nconst TradeSettingDiv = ApiContainer.withComponent(\"div\");\nconst TradeBtn = styled(SettingBtn.withComponent(\"button\"))`\n  border-radius: 10px;\n  width: 50%;\n`;\nfunction SettingTrade({ coinInfo }) {\n  const dispatch = useDispatch();\n  const timer = useRef(false);\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  const coinSymbol = useRef(\"\");\n  const percent = useRef(\"\");\n  const amount = useRef(0);\n  const check = useRef(null);\n  const {\n    upbitBitKrw,\n    tradeError,\n    upbitApi: api1,\n    upbitSec: sec1,\n    binanceApi: api2,\n    binanceSec: sec2,\n  } = useSelector((state) => state.coin);\n\n  useEffect(() => {\n    if (timer.current) {\n      if (tradeError === 0) {\n        startTrade();\n      } else {\n        timer.current = false;\n      }\n    }\n  });\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const onClickUpbit = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (upbitApi.current.value === \"\" || upbitSec.current.value === \"\") {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setUpbit({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        dispatch(\n          setUpbit({\n            upbitApi: \"\",\n            upbitSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  const onClickBinance = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API 혹은 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setBinance({\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setBinance({\n            binanceApi: \"\",\n            binanceSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  const onClickTrade = useCallback((e) => {\n    setTradeError();\n    if (timer.current) {\n      timer.current = false;\n    } else {\n      if (\n        binanceApi.current.value === \"\" ||\n        binanceSec.current.value === \"\" ||\n        upbitApi.current.value === \"\" ||\n        upbitSec.current.value === \"\"\n      ) {\n        alert(\"API 와 Secret이 필요합니다\");\n      } else if (coinSymbol.current === \"\" || percent.current === \"\") {\n        alert(\"코인 & 차이(%) 설정이 필요합니다\");\n      } else {\n        timer.current = true;\n      }\n    }\n  }, []);\n  const onChangeCoin = useCallback((e) => {\n    const { target } = e;\n    coinSymbol.current = target.value;\n    //console.log(coinSymbol.current);\n  }, []);\n  const onChangePercent = useCallback((e) => {\n    const { target } = e;\n    percent.current = target.value;\n  }, []);\n  const onChangeAmount = useCallback((e) => {\n    const { target } = e;\n    amount.current = target.value;\n  }, []);\n  const startTrade = useCallback(() => {\n    const coin = coinInfo.filter((coin) => coin.symbol === coinSymbol.current);\n    const converted = (coin[0].blast * upbitBitKrw).toFixed(2);\n    const p = parseFloat(percent.current, 10);\n    const per = parseFloat(\n      (((coin[0].last - converted) / converted) * 100).toFixed(2),\n      10\n    );\n    if (Math.abs(per) >= p) {\n      if (per > 0) {\n        //console.log(\"업비트 매도, 바이낸스 매수\"); //ask  bid\n        dispatch(\n          upbitAsk({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      } else {\n        //console.log(\"업비트 매수, 바이낸스 매도\"); //bid ask\n        dispatch(\n          upbitBid({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      }\n      check.current = per;\n    }\n  }, [coinInfo, upbitBitKrw, dispatch]);\n  return (\n    <>\n      <ApiContainer>\n        <Input ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n        <SecretInput\n          ref={upbitSec}\n          type=\"password\"\n          placeholder=\"업비트 secret\"\n        />\n        <SettingBtn onClick={onClickUpbit}>확인</SettingBtn>\n      </ApiContainer>\n      <ApiContainer>\n        <Input ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n        <SecretInput\n          ref={binanceSec}\n          type=\"password\"\n          placeholder=\"바이낸스 secret\"\n        />\n        <SettingBtn onClick={onClickBinance}>확인</SettingBtn>\n      </ApiContainer>\n      <TradeSettingDiv>\n        <Input type=\"text\" placeholder=\"코인\" onChange={onChangeCoin} />\n        <Input\n          type=\"number\"\n          placeholder=\"차이%\"\n          min={0}\n          max={100}\n          step={0.1}\n          onChange={onChangePercent}\n        />\n        <Input\n          type=\"number\"\n          placeholder=\"코인 양\"\n          min={0}\n          step={0.1}\n          onChange={onChangeAmount}\n        />\n        <TradeBtn onClick={onClickTrade}>\n          {timer.current ? \"설정 취소\" : \"자전 설정\"}\n        </TradeBtn>\n      </TradeSettingDiv>\n    </>\n  );\n}\n\nexport default React.memo(SettingTrade);\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendMessage, cancelMessage } from \"../reducers/bot\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ItemList from \"./ItemList\";\nimport SettingTrade from \"./SettingTrade\";\nconst SettingBarDiv = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -1px 1px 3px 0px #696969;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n  width: 100%;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nfunction SettingBar({ coinInfo, upbitBitKrw }) {\n  const dispatch = useDispatch();\n  const timer = useRef();\n  const wrapper = useRef();\n  const [coins, setCoins] = useState([]);\n  const [coinPer, setCoinPer] = useState({});\n  const checkPer = useRef({});\n  const { btc } = useSelector((state) => state.coin);\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const startBot = useCallback(\n    (coinlist, krw) => {\n      const coinPerLength = Object.keys(coinPer).length;\n      if (coinPerLength > 0) {\n        [{ symbol: \"BTC\" }, ...coinlist].forEach((coin) => {\n          if (\n            Object.keys(coinPer).indexOf(coin.symbol) !== -1 &&\n            coinPer[coin.symbol] !== \"\"\n          ) {\n            if (coin.symbol !== \"BTC\") {\n              const converted = (coin.blast * krw).toFixed(2);\n              const p = parseFloat(coinPer[coin.symbol], 10);\n              const per = parseFloat(\n                (((coin.last - converted) / converted) * 100).toFixed(2),\n                10\n              );\n              if (Math.abs(per) > p) {\n                if (Object.keys(checkPer.current).indexOf(coin.symbol) === -1) {\n                  checkPer.current = {\n                    ...checkPer.current,\n                    [coin.symbol]: per,\n                  };\n                  dispatch(\n                    sendMessage({\n                      coinInfo: {\n                        symbol: coin.symbol,\n                        upbit: coin.last,\n                        binance: converted,\n                        percent: per,\n                      },\n                    })\n                  );\n                } else {\n                  if (checkPer.current[coin.symbol] !== per) {\n                    checkPer.current = {\n                      ...checkPer.current,\n                      [coin.symbol]: per,\n                    };\n                    dispatch(\n                      sendMessage({\n                        coinInfo: {\n                          symbol: coin.symbol,\n                          upbit: coin.last,\n                          binance: converted,\n                          percent: per,\n                        },\n                      })\n                    );\n                  }\n                }\n              }\n            } else {\n              const p = parseFloat(coinPer[coin.symbol], 10);\n              if (Math.abs(btc.percent) > p) {\n                if (Object.keys(checkPer.current).indexOf(coin.symbol) === -1) {\n                  checkPer.current = {\n                    ...checkPer.current,\n                    [coin.symbol]: btc.percent,\n                  };\n                  dispatch(\n                    sendMessage({\n                      coinInfo: {\n                        symbol: coin.symbol,\n                        upbit: btc.last,\n                        binance: btc.converted,\n                        percent: btc.percent,\n                      },\n                    })\n                  );\n                } else {\n                  if (checkPer.current[coin.symbol] !== btc.percent) {\n                    checkPer.current = {\n                      ...checkPer.current,\n                      [coin.symbol]: btc.percent,\n                    };\n                    dispatch(\n                      sendMessage({\n                        coinInfo: {\n                          symbol: coin.symbol,\n                          upbit: btc.last,\n                          binance: btc.converted,\n                          percent: btc.percent,\n                        },\n                      })\n                    );\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    },\n    [coinPer, dispatch, btc]\n  );\n  useEffect(() => {\n    if (timer.current) {\n      startBot(coinInfo, upbitBitKrw);\n    }\n    if (coins.length === 0) {\n      setCoins(coinInfo);\n    }\n  }, [coinInfo, upbitBitKrw, startBot, coins]);\n  const onChangePercent = useCallback(\n    (e) => {\n      const {\n        target: { value, dataset },\n      } = e;\n      setCoinPer({\n        ...coinPer,\n        [dataset.name]: value,\n      });\n    },\n    [coinPer]\n  );\n\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      const percentsLength = Object.keys(coinPer).length;\n      if (percentsLength > 0) {\n        if (target.innerHTML === \"설정\") {\n          target.innerHTML = \"취소\";\n          timer.current = true;\n        } else {\n          target.innerHTML = \"설정\";\n          timer.current = false;\n          dispatch(cancelMessage());\n        }\n      } else {\n        alert(\"최소 한개의 % 설정이 필요합니다\");\n      }\n    },\n    [coinPer, dispatch]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1.0rem\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <SettingTrade coinInfo={coinInfo} />\n        <ItemList coins={coins} onChangePercent={onChangePercent} />\n        <SelectContainer>\n          <SelectBtn onClick={onSetting}>설정</SelectBtn>\n        </SelectContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { checkUpbitCoin, checkBinanceCoin } from \"../reducers/coin\";\nconst NewListingDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: ${(props) => (props.hide ? \"auto\" : \"35vh\")};\n  background: #c4cfd8;\n  margin-top: 5px;\n  position: fixed;\n  right: 10px;\n  bottom: 0;\n  border-radius: 4px;\n  border: 3px solid #d4d2d270;\n  box-shadow: 2px 2px 6px 1px;\n  overflow: scroll;\n  @media (min-width: 1025px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"270px\")};\n  }\n  @media (max-width: 1024px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"250px\")};\n  }\n  @media (max-width: 768px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"200px\")};\n    opacity: ${(props) => (props.hide ? \"0.2\" : \"1.0\")};\n  }\n`;\nconst FontDiv = styled.div`\n  display: flex;\n  align-self: flex-end;\n  margin: 5px;\n  svg {\n    cursor: pointer;\n  }\n`;\nconst NewListingUl = styled.ul`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  padding: 0;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  border-bottom: 3px solid #ffffff;\n  cursor: pointer;\n`;\nconst NewListingli = styled.li`\n  list-style: none;\n  flex: 1;\n  padding: 5px;\n  color: ${(props) => (props.selected ? \"black\" : \"#ffffff\")};\n  font-weight: ${(props) => (props.selected ? \"400\" : \"200\")};\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  word-break: keep-all;\n`;\nconst InfoContainer = styled.div`\n  border-top: 1px solid #0404043b;\n`;\nconst UpbitInfoUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 2px;\n`;\nconst UpbitInfoli = styled.li`\n  list-style: none;\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nconst BinanceInfoUl = UpbitInfoUl.withComponent(\"ul\");\nconst BinanceInfoli = styled(UpbitInfoli.withComponent(\"li\"))`\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nfunction NewListing() {\n  const dispatch = useDispatch();\n  const { upbitNewListing, binanceNewListing } = useSelector(\n    (state) => state.coin\n  );\n  const [selected, setSelected] = useState(0);\n  const [isHide, setHide] = useState(false);\n  const container = useRef();\n  const onChangeSelect = useCallback((e) => {\n    const {\n      target: {\n        dataset: { id },\n      },\n    } = e;\n    setSelected(parseInt(id, 10));\n  }, []);\n  const onToggle = useCallback(() => {\n    if (container.current.style.display === \"flex\") {\n      container.current.style.display = \"none\";\n      setHide(true);\n    } else {\n      container.current.style.display = \"flex\";\n      setHide(false);\n    }\n  }, []);\n\n  const checkTodaysNotice = useCallback(() => {\n    const binanceNewNotices = binanceNewListing.filter((v) => v.new === true);\n    if (binanceNewNotices.length > 0) {\n      dispatch(\n        checkBinanceCoin({\n          notices: binanceNewNotices,\n        })\n      );\n    }\n  }, [binanceNewListing, dispatch]);\n  useEffect(() => {\n    checkTodaysNotice();\n  }, [checkTodaysNotice]);\n  return (\n    <NewListingDiv hide={isHide === true}>\n      <FontDiv>\n        {isHide ? (\n          <FontAwesomeIcon icon={faPlus} onClick={onToggle} />\n        ) : (\n          <FontAwesomeIcon icon={faMinus} onClick={onToggle} />\n        )}\n      </FontDiv>\n      <NewListingUl hide={isHide === true}>\n        <NewListingli\n          data-id={0}\n          onClick={onChangeSelect}\n          selected={selected === 0}\n        >\n          업비트 상장\n        </NewListingli>\n        <NewListingli\n          data-id={1}\n          onClick={onChangeSelect}\n          selected={selected === 1}\n        >\n          바이낸스 상장\n        </NewListingli>\n      </NewListingUl>\n      <InfoContainer style={{ display: \"flex\" }} ref={container}>\n        {selected === 0 ? (\n          <UpbitInfoUl>\n            {upbitNewListing &&\n              upbitNewListing.map((notice) => {\n                return (\n                  <UpbitInfoli key={v4()}>{notice.notice.title}</UpbitInfoli>\n                );\n              })}\n          </UpbitInfoUl>\n        ) : (\n          <BinanceInfoUl>\n            {binanceNewListing &&\n              binanceNewListing.map((notice) => {\n                return (\n                  <BinanceInfoli key={v4()}>\n                    {notice.notice.title}\n                  </BinanceInfoli>\n                );\n              })}\n          </BinanceInfoUl>\n        )}\n      </InfoContainer>\n    </NewListingDiv>\n  );\n}\nexport default NewListing;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ccxt from \"ccxt\";\nimport Loading from \"./Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUsdToKrw,\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadUpbitNewListing,\n  loadBianceNewListing,\n} from \"../reducers/coin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport NewListing from \"./NewListing\";\n//const exchangeList = [\"Upbit\", \"Binance\"];\nconst ExchangesWrapper = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst ExchangesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 5px;\n  border: 1px solid;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  font-size: 0.4rem;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    padding: 0px;\n  }\n`;\nconst ExchangeItem = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"black\" : \"black\")};\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  @media (min-width: 1025px) {\n    width: 60%;\n    margin: 0 auto;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst Coin = styled.div`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.85rem;\n  color: black;\n  margin-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n  }\n  &:first-child {\n  }\n  &:nth-child(2) {\n    color: ${(props) => (props.head === true ? \"black\" : \"#27ae60\")};\n    font-weight: ${(props) => (props.head === true ? \"800\" : \"600\")};\n  }\n  &:nth-child(4) {\n  }\n  &:nth-child(5) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    font-weight: ${(props) =>\n      props.head === true ? \"800\" : props.up === true ? \"600\" : \"600\"};\n    p {\n      font-size: 0.85rem;\n      margin-bottom: 0;\n      margin-top: 0;\n      @media (max-width: 768px) {\n        font-size: 0.7rem;\n      }\n      @media (max-width: 425px) {\n        align-self: flex-start;\n      }\n    }\n  }\n  &:nth-child(6) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#ff2e18\"\n        : \"#0012ff\"};\n    border-radius: 10px;\n    background-color: ${(props) =>\n      props.head === true\n        ? \"white\"\n        : props.up === true\n        ? \"#ff747363\"\n        : \"#007fff47\"};\n    border-radius: 10px;\n  }\n`;\nfunction ExchangeList() {\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [sortType, setSortType] = useState(-1);\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw } = useSelector((state) => state.coin);\n  const info = useRef([]);\n  const timer = useRef(null);\n  const wsUpbit = useRef(null);\n  const wsBinance = useRef(null);\n  const getExchangeTickers = useCallback(async () => {\n    if (timer.current) {\n      timer.current = setTimeout(getExchangeTickers, 2000);\n    }\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    const upbit = new ccxt.upbit();\n    const binance = new ccxt.binance();\n    let tickers1 = await upbit.fetchTickers(coinList.map((v) => `${v}/KRW`)),\n      tickers2 = await binance.fetchTickers(coinList.map((v) => `${v}/BTC`));\n    tickers1 = Object.keys(tickers1)\n      .map((v) => {\n        return {\n          symbol: tickers1[v].symbol.slice(0, tickers1[v].symbol.indexOf(\"/\")),\n          last: tickers1[v].last,\n          low: tickers1[v].low,\n          high: tickers1[v].high,\n          blast:\n            tickers2[\n              `${tickers1[v].symbol.slice(\n                0,\n                tickers1[v].symbol.indexOf(\"/\")\n              )}/BTC`\n            ].last,\n        };\n      })\n      .sort((x, y) => {\n        const convertedX = x.blast * upbitBitKrw,\n          convertedY = y.blast * upbitBitKrw;\n        if (sortType === -1) return x.symbol > y.symbol ? 1 : -1;\n        else if (sortType === 1) return x.symbol < y.symbol ? 1 : -1;\n        else if (sortType === -2) return x.last > y.last ? 1 : -1;\n        else if (sortType === 2) return x.last < y.last ? 1 : -1;\n        else if (sortType === -3) return x.blast > y.blast ? 1 : -1;\n        else if (sortType === 3) return x.blast < y.blast ? 1 : -1;\n        else if (sortType === -4)\n          return (x.last - convertedX) / x.last > (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n        else if (sortType === 4)\n          return (x.last - convertedX) / x.last < (y.last - convertedY) / y.last\n            ? 1\n            : -1;\n      });\n    dispatch(loadUpbitBitKrw());\n    dispatch(loadUsdToKrw());\n    dispatch(loadBinanceBitUsdt());\n    dispatch(loadUpbitNewListing());\n    //dispatch(loadBianceNewListing());\n    if (loading === true) setLoading(false);\n    if (isFirstLoading === false) setIsFirstLoading(true);\n    setUpbitCoinInfo(tickers1);\n  }, [loading, isFirstLoading, dispatch, coinList, upbitBitKrw, sortType]);\n  const upbitWS = useCallback(() => {\n    if (wsUpbit.current === null) {\n      wsUpbit.current = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n      wsUpbit.current.binaryType = \"arraybuffer\";\n      wsUpbit.current.onopen = () => {\n        console.log(\"connected\");\n        const data = [\n          { ticket: \"test\" },\n          { type: \"ticker\", codes: coinList.map((coin) => `KRW-${coin}`) },\n        ];\n        wsUpbit.current.send(JSON.stringify(data));\n      };\n      wsUpbit.current.onmessage = (e) => {\n        const enc = new TextDecoder(\"utf-8\");\n        const arr = new Uint8Array(e.data);\n        const {\n          code,\n          high_price,\n          low_price,\n          trade_price,\n          ask_bid,\n        } = JSON.parse(enc.decode(arr));\n        const symbol = code.slice(code.indexOf(\"-\") + 1, code.length);\n        const targetCoin = info.current.filter(\n          (item) => item.symbol === symbol\n        );\n        const cleanedList = info.current.filter(\n          (item) => item.symbol !== symbol\n        );\n        if (targetCoin.length > 0) {\n          info.current = cleanedList.concat([\n            {\n              symbol,\n              last: trade_price,\n              high: high_price,\n              low: low_price,\n              blast: targetCoin[0].blast,\n              ask_bid,\n            },\n          ]);\n          //console.log(info.current);\n        } else {\n          info.current = cleanedList.concat([\n            {\n              symbol,\n              last: trade_price,\n              high: high_price,\n              low: low_price,\n              ask_bid,\n              blast: 0.0,\n            },\n          ]);\n        }\n      };\n      wsUpbit.current.onclose = () => {\n        wsUpbit.current.close();\n      };\n    }\n  }, [coinList]);\n  const binanceWS = useCallback(() => {\n    if (wsBinance.current === null) {\n      let streams = \"\";\n      for (let i = 0; i < coinList.length; i++) {\n        if (i < coinList.length - 1) {\n          streams += `${coinList[i].toLowerCase()}btc@ticker/`;\n        } else streams += `${coinList[i].toLowerCase()}btc@ticker`;\n      }\n      wsBinance.current = new WebSocket(\n        `wss://stream.binance.com:9443/stream?streams=${streams}` //ethbtc@ticker\" //\"\n      );\n      wsBinance.current.onopen = () => {\n        console.log(\"b connected\");\n      };\n      wsBinance.current.onmessage = (e) => {\n        const {\n          data: { s, c },\n        } = JSON.parse(e.data);\n        const symbol = s.slice(0, s.length - 3);\n        for (let i = 0; i < info.current.length; i++) {\n          if (info.current[i].symbol === symbol) {\n            const percent =\n              (info.current[i].last - info.current[i].blast * upbitBitKrw) /\n              info.current[i].last;\n            info.current[i] = {\n              ...info.current[i],\n              blast: parseFloat(c, 10),\n              percent,\n            };\n            break;\n          }\n        }\n        info.current.sort((x, y) => {\n          const convertedX = x.blast * upbitBitKrw,\n            convertedY = y.blast * upbitBitKrw;\n          if (sortType === -1) return x.symbol > y.symbol ? 1 : -1;\n          else if (sortType === 1) return x.symbol < y.symbol ? 1 : -1;\n          else if (sortType === -2) return x.last > y.last ? 1 : -1;\n          else if (sortType === 2) return x.last < y.last ? 1 : -1;\n          else if (sortType === -3) return x.blast > y.blast ? 1 : -1;\n          else if (sortType === 3) return x.blast < y.blast ? 1 : -1;\n          else if (sortType === -4)\n            return ((x.last - convertedX) / convertedX) * 100 >\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          else if (sortType === 4)\n            return ((x.last - convertedX) / convertedX) * 100 <\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n        });\n      };\n      wsBinance.current.onclose = () => {\n        wsBinance.current.close();\n      };\n    }\n  }, [coinList, sortType, upbitBitKrw]);\n  useEffect(() => {\n    timer.current = setTimeout(getExchangeTickers, 2000);\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, [\n    getExchangeTickers,\n    sortType,\n    upbitBitKrw,\n    coinList,\n    info,\n    upbitWS,\n    binanceWS,\n  ]);\n  const onSort = useCallback(\n    (coinInfo) => (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType === 1) {\n          coinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          //sortType.current = -1;\n          setSortType(-1);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          //sortType.current = 1;\n          setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType === 2) {\n          coinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          //sortType.current = -2;\n          setSortType(-2);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          //console.log();\n          //sortType.current = 2;\n          setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType === 3) {\n          coinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          //sortType.current = -3;\n          setSortType(-3);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          //sortType.current = 3;\n          setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType === 4) {\n          coinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 >\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          //sortType.current = -4;\n          setSortType(-4);\n        } else {\n          coinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 <\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(4);\n          //sortType.current = 4;\n        }\n      }\n    },\n    [sortType, upbitBitKrw]\n  );\n  return (\n    <main>\n      <ExchangesContainer>\n        <ExchangeItem>Upbit</ExchangeItem>\n        <ExchangeItem>Binance</ExchangeItem>\n      </ExchangesContainer>\n      <SettingBar coinInfo={upbitCoinInfo} upbitBitKrw={upbitBitKrw} />\n      <CurrentExchangeBar />\n      <ExchangesWrapper>\n        <ExchangeCoinsContainer>\n          {\n            <CoinContainer>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={1}>\n                코인\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={2}>\n                현재 가(₩)\n              </Coin>\n              <Coin head={true}>최저 가 </Coin>\n              <Coin head={true}>최고 가</Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={3}>\n                바이낸스(BTC)\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={4}>\n                차이(%)\n              </Coin>\n            </CoinContainer>\n          }\n          {upbitCoinInfo.map((v, idx) => {\n            const convertedBinance = parseFloat(\n              (v.blast * upbitBitKrw).toFixed(2),\n              10\n            );\n            const percent = (\n              ((v.last - convertedBinance) / convertedBinance) *\n              100\n            ).toFixed(2);\n            //console.log(percent);\n            return (\n              <CoinContainer key={v4()}>\n                <Coin>{v.symbol}</Coin>\n                <Coin>{v.last}₩</Coin>\n                <Coin>{v.low}₩ </Coin>\n                <Coin>{v.high}₩</Coin>\n                <Coin up={percent > 0}>\n                  {v.blast && v.blast.toFixed(8)}\n                  <p>{convertedBinance}₩</p>\n                </Coin>\n                <Coin up={percent > 0}>\n                  {percent !== \"Infinity\" ? `${percent}%` : \"로딩중\"}\n                </Coin>\n              </CoinContainer>\n            );\n          })}\n        </ExchangeCoinsContainer>\n        <NewListing />\n      </ExchangesWrapper>\n      <Loading isLoading={loading} />\n    </main>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ExchangeList from \"./components/ExchangeList\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCoinList } from \"./reducers/coin\";\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-bottom: 0;\n  margin-top: 0;\n  height: 20px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n  }\n`;\nconst Title = styled.p`\n  font-family: 800;\n`;\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCoinList());\n  }, [dispatch]);\n  return (\n    <>\n      <Header>\n        <Title>CoinAT</Title>\n      </Header>\n      <ExchangeList />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nexport default combineReducers({\n  coin,\n  bot,\n});\n","import { all, takeLatest, fork, put, call, throttle } from \"redux-saga/effects\";\nimport {\n  UPBIT_BITCOIN_KRW_SUCCESS,\n  UPBIT_BITCOIN_KRW_FAILURE,\n  UPBIT_BITCOIN_KRW_REQUEST,\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  BINANCE_BITCOIN_USDT_REQUEST,\n  BINANCE_BITCOIN_USDT_FAILURE,\n  BINANCE_BITCOIN_USDT_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n  COIN_LIST_FAILURE,\n  COIN_LIST_SUCCESS,\n  COIN_LIST_REQUEST,\n  UPBIT_BID_REQUEST,\n  BINANCE_ASK_REQUEST,\n  UPBIT_ASK_REQUEST,\n  BINANCE_BID_REQUEST,\n  UPBIT_BID_FAILURE,\n  UPBIT_BID_SUCCESS,\n  BINANCE_BID_FAILURE,\n  BINANCE_BID_SUCCESS,\n  UPBIT_ASK_SUCCESS,\n  UPBIT_ASK_FAILURE,\n  BINANCE_ASK_SUCCESS,\n  BINANCE_ASK_FAILURE,\n  BINANCE_SETTING,\n  BINANCE_SETTING_SUCCESS,\n  BINANCE_SETTING_FAILURE,\n  UPBIT_SETTING,\n  UPBIT_SETTING_SUCCESS,\n  UPBIT_SETTING_FAILURE,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction loadBitKrwAPI() {\n  return axios.get(\"https://api.upbit.com/v1/ticker?markets=KRW-BTC\");\n}\nfunction* loadBitKrw(action) {\n  try {\n    const result = yield call(loadBitKrwAPI, action.payload);\n    yield put({\n      type: UPBIT_BITCOIN_KRW_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BITCOIN_KRW_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitKrw() {\n  yield takeLatest(UPBIT_BITCOIN_KRW_REQUEST, loadBitKrw);\n}\n\nfunction loadCurrencyAPI() {\n  return axios.get(`${API_URL}coin/currency`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n  //https://www.freeforexapi.com/api/live?pairs=USDKRW\n  //return axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\");\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield throttle(1000, CURRENCY_REQUEST, loadCurrency);\n}\n\nfunction loadBitUsdtAPI() {\n  return axios.get(\n    \"https://www.binance.com/api/v1/aggTrades?limit=1&symbol=BTCUSDT\"\n  );\n}\nfunction* loadBitUsdt() {\n  try {\n    const result = yield call(loadBitUsdtAPI);\n    yield put({\n      type: BINANCE_BITCOIN_USDT_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_BITCOIN_USDT_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitUsdt() {\n  yield takeLatest(BINANCE_BITCOIN_USDT_REQUEST, loadBitUsdt);\n}\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice/upbit`);\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice/binance`);\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data);\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data);\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nfunction coinListAPI() {\n  return axios.get(`${API_URL}coin`);\n}\nfunction* coinList() {\n  try {\n    const result = yield call(coinListAPI);\n    yield put({\n      type: COIN_LIST_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: COIN_LIST_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCoinList() {\n  yield takeLatest(COIN_LIST_REQUEST, coinList);\n}\n\nfunction upbitBidAPI(data) {\n  return axios.post(`${API_URL}trade/bid`, data);\n}\nfunction* upbitBid(action) {\n  try {\n    //console.log(action.payload);\n    const result = yield call(upbitBidAPI, action.payload);\n    yield put({\n      type: UPBIT_BID_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BID_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitBid() {\n  yield throttle(1200, UPBIT_BID_REQUEST, upbitBid);\n}\n\nfunction upbitAskAPI(data) {\n  return axios.post(`${API_URL}trade/ask`, data);\n}\nfunction* upbitAsk(action) {\n  try {\n    const result = yield call(upbitAskAPI, action.payload);\n    yield put({\n      type: UPBIT_ASK_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_ASK_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitAsk() {\n  yield throttle(1200, UPBIT_ASK_REQUEST, upbitAsk);\n}\n\nfunction setBinanceKeyAPI(data) {\n  return axios.post(`${API_URL}trade/binance_key`, {\n    api: data.binanceApi,\n    sec: data.binanceSec,\n  });\n}\nfunction* setBinanceKey(action) {\n  try {\n    yield call(setBinanceKeyAPI, action.payload);\n    yield put({\n      type: BINANCE_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetBinanceKey() {\n  yield takeLatest(BINANCE_SETTING, setBinanceKey);\n}\n\nfunction setUpbitKeyAPI(data) {\n  return axios.post(`${API_URL}trade/upbit_key`, {\n    api: data.upbitApi,\n    sec: data.upbitSec,\n  });\n}\nfunction* setUpbitKey(action) {\n  try {\n    yield call(setUpbitKeyAPI, action.payload);\n    yield put({\n      type: UPBIT_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetUpbitKey() {\n  yield takeLatest(UPBIT_SETTING, setUpbitKey);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchBitKrw),\n    fork(watchCurrency),\n    fork(watchBitUsdt),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n    fork(watchCoinList),\n    fork(watchUpbitBid),\n    fork(watchUpbitAsk),\n    fork(watchSetBinanceKey),\n    fork(watchSetUpbitKey),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_FAILURE,\n  CANCEL_MESSAGE_REQUEST,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot`, data);\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\n\nfunction cancelMessageAPI(data) {\n  return axios.post(`${API_URL}bot/cancel`, data);\n}\nfunction* cancelMessage(action) {\n  try {\n    yield call(cancelMessageAPI, action.payload);\n    yield put({\n      type: CANCEL_MESSAGE_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CANCEL_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCancelMessage() {\n  yield takeLatest(CANCEL_MESSAGE_REQUEST, cancelMessage);\n}\n\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage), fork(watchCancelMessage)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n//import logger from \"redux-logger\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}