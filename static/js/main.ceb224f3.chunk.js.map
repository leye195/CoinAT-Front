{"version":3,"sources":["components/Loading.js","reducers/coin.js","components/CurrentExchangeBar.js","reducers/bot.js","components/ItemList.js","components/SettingTrade.js","components/SettingBar.js","components/NewListing.js","components/ExchangeList.js","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/index.js","index.js"],"names":["LoadingAni","keyframes","LoadingContainer","styled","div","LoadingBar","props","size","css","Loading","isLoading","loadCoinList","createAction","loadBithumbBitkrw","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","loadTickers","checkBinanceCoin","setUpbit","setBinance","setKey","setBtc","upbitBid","upbitAsk","setTradeError","handleActions","state","action","produce","draft","btc","payload","coinInfo","length","tickers","coinList","map","coin","name","last","BTC","bithumbBitKrw","isbitkrwLoading","upbitBitKrw","trade_price","upbitBitKrwError","error","isUsdToKrwLoading","target","rates","rate","usdToKrw","toFixed","usdToKrwError","isbitusdtLoading","binanceBitUsdt","p","binanceBitUsdtError","isUpbitNewListingLoading","filteredList","filter","v","title","includes","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","tradeError","ExchangeContainer","section","Info","CurrentExchangeBar","dispatch","useDispatch","useSelector","convertUsdToKrw","useCallback","parseFloat","useEffect","converted","percent1","percent2","symbol","thumb","sendMessage","cancelMessage","isSending","ItemListDiv","ItemListUl","ul","ItemListLi","li","ItemSpan","span","ItemInput","input","React","memo","coins","onChangePercent","type","min","max","step","placeholder","onChange","data-name","ApiContainer","Input","SecretInput","SettingBtn","button","TradeSettingDiv","withComponent","TradeBtn","timer","useRef","coinSymbol","percent","amount","check","current","startTrade","onClickKey","e","innerHTML","value","alert","onClickTrade","onChangeCoin","onChangeAmount","blast","per","Math","abs","q","ref","onClick","SettingBarDiv","InputWrapper","SelectContainer","SelectBtn","wrapper","useState","setCoins","coinPer","setCoinPer","checkPer","startBot","coinlist","krw","Object","keys","forEach","indexOf","per1","per2","upbit","binance","percentUp","bithumb","percentBit","dataset","onSetting","onToggle","style","display","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","fontSize","NewListingDiv","hide","FontDiv","NewListingUl","NewListingli","selected","InfoContainer","UpbitInfoUl","UpbitInfoli","BinanceInfoUl","BinanceInfoli","NewListing","setSelected","isHide","setHide","container","onChangeSelect","id","parseInt","checkTodaysNotice","binanceNewNotices","notices","faPlus","faMinus","data-id","key","v4","ExchangesWrapper","ExchangesContainer","ExchangeItem","ExchangeCoinsContainer","CoinContainer","Coin","head","up","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","sortType","setSortType","info","getExchangeTickers","a","setTimeout","ccxt","fetchTickers","tickers3","sort","x","y","convertedX","convertedY","clearTimeout","onSort","idx","convertedBinance","percentUP","data-type","Header","header","Title","App","Boolean","window","location","hostname","match","combineReducers","bot","loadBitKrw","watchBitKrw","loadCurrency","watchCurrency","loadBitUsdt","watchBitUsdt","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","watchCoinList","watchUpbitBid","watchUpbitAsk","setBinanceKey","watchSetBinanceKey","setUpbitKey","watchSetUpbitKey","watchSetKey","watchLoadTickers","coinSaga","dotenv","config","API_URL","process","loadBitKrwAPI","axios","get","call","result","put","data","takeLatest","loadCurrencyAPI","headers","throttle","loadBitUsdtAPI","loadUpbitNewListingAPI","loadBinanceNewListingAPI","upbitNewCoinAPI","post","binanceNewCoinAPI","coinListAPI","upbitBidAPI","upbitAskAPI","setBinanceKeyAPI","api","sec","setUpbitKeyAPI","setKeyAPI","uid","undefined","localStorage","setItem","getItem","removeItem","api1","sec1","api2","sec2","loadTickersAPI","all","fork","watchSendMessage","watchCancelMessage","botSaga","sendMessageAPI","cancelMessageAPI","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ceb224f3.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\n\nexport const SETTING_BTC = \"SETTING_BTC\";\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\n\nexport const TICKERS_REQUEST = \"TICKERS_REQUEST\";\nexport const TICKERS_SUCCESS = \"TICKERS_SUCCESS\";\nexport const TICKERS_FAILUER = \"TICKERS_FAILURE\";\n\nexport const COIN_LIST_REQUEST = \"COIN_LIST_REQUEST\";\nexport const COIN_LIST_SUCCESS = \"COIN_LIST_SUCCESS\";\nexport const COIN_LIST_FAILURE = \"COIN_LIST_FAILURE\";\n\nexport const UPBIT_BITCOIN_KRW_REQUEST = \"UPBIT_BITCOIN_KRW_REQUEST\";\nexport const UPBIT_BITCOIN_KRW_SUCCESS = \"UPBIT_BITCOIN_KRW_SUCCESS\";\nexport const UPBIT_BITCOIN_KRW_FAILURE = \"UPBIT_BITCOIN_KRW_FAILURE\";\n\nexport const BITHUMB_BITCOIN_KRW = \"BITHUMB_BITCOIN_KRW\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\nexport const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const UPBIT_SETTING_SUCCESS = \"UPBIT_SETTING_SUCCESS\";\nexport const UPBIT_SETTING_FAILURE = \"UPBIT_SETTING_FAILURE\";\n\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\nexport const BINANCE_SETTING_SUCCESS = \"BINANCE_SETTING_SUCCESS\";\nexport const BINANCE_SETTING_FAILURE = \"BINANCE_SETTING_FAILURE\";\n\nexport const KEY_SETTING_REQUEST = \"KEY_SETTING_REQUEST\";\nexport const KEY_SETTING_SUCCESS = \"KEY_SETTING_SUCCESS\";\nexport const KEY_SETTING_FAILURE = \"KEY_SETTING_FAILURE\";\n\nexport const UPBIT_BID_REQUEST = \"UPBIT_BID_REQUEST\";\nexport const UPBIT_BID_SUCCESS = \"UPBIT_BID_SUCCESS\";\nexport const UPBIT_BID_FAILURE = \"UPBIT_BID_FAILURE\";\n\nexport const UPBIT_ASK_REQUEST = \"UPBIT_ASK_REQUEST\";\nexport const UPBIT_ASK_SUCCESS = \"UPBIT_ASK_SUCCESS\";\nexport const UPBIT_ASK_FAILURE = \"UPBIT_ASK_FAILURE\";\n\nexport const TRADE_ERROR_REQUEST = \"TRADE_ERROR_REQUEST\";\n\nexport const loadCoinInfo = createAction(COIN_INFO_REQUEST);\nexport const loadCoinList = createAction(COIN_LIST_REQUEST);\nexport const loadBithumbBitkrw = createAction(BITHUMB_BITCOIN_KRW);\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW_REQUEST);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT_REQUEST);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const loadTickers = createAction(TICKERS_REQUEST);\n\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\n\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\nexport const setKey = createAction(KEY_SETTING_REQUEST);\n\nexport const setBtc = createAction(SETTING_BTC);\n\nexport const upbitBid = createAction(UPBIT_BID_REQUEST);\nexport const upbitAsk = createAction(UPBIT_ASK_REQUEST);\n\nexport const setTradeError = createAction(TRADE_ERROR_REQUEST);\n\nconst initialState = {\n  tickers: [],\n  isbitkrwLoading: false,\n  bithumbBitKrw: 0.0,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: false,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: false,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  btc: {},\n  coinInfo: [],\n  coinList: [\n    \"ADA\",\n    \"ADX\",\n    \"ANKR\",\n    \"ARDR\",\n    \"ARK\",\n    \"ATOM\",\n    \"BAT\",\n    \"BCH\",\n    \"BTG\",\n    \"CVC\",\n    \"CHZ\",\n    \"DCR\",\n    \"ELF\",\n    \"ENJ\",\n    \"EOS\",\n    \"ETC\",\n    \"ETH\",\n    \"GAS\",\n    \"GNT\",\n    \"GRS\",\n    \"GTO\",\n    \"HBAR\",\n    \"ICX\",\n    \"IOST\",\n    \"IOTA\",\n    \"KMD\",\n    \"KNC\",\n    \"LOOM\",\n    \"LSK\",\n    \"LTC\",\n    \"MANA\",\n    \"MBL\",\n    \"MCO\",\n    \"MTL\",\n    \"NEO\",\n    \"OMG\",\n    \"ONG\",\n    \"ONT\",\n    \"OST\",\n    \"POLY\",\n    \"POWR\",\n    \"QKC\",\n    \"QTUM\",\n    \"REP\",\n    \"SC\",\n    \"SNT\",\n    \"STEEM\",\n    \"STORJ\",\n    \"STPT\",\n    \"STRAT\",\n    \"TFUEL\",\n    \"THETA\",\n    \"TRX\",\n    \"VET\",\n    \"WAVES\",\n    \"XEM\",\n    \"XLM\",\n    \"XRP\",\n    \"ZIL\",\n    \"ZRX\",\n  ],\n  tradeError: 0,\n};\nexport default handleActions(\n  {\n    [SETTING_BTC]: (state, action) =>\n      produce(state, (draft) => {\n        draft.btc = action.payload;\n      }),\n    [COIN_INFO_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        if (draft.coinInfo.length < action.payload.coinInfo.length)\n          draft.coinInfo = action.payload.coinInfo;\n      }),\n    [TICKERS_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [TICKERS_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tickers = action.payload;\n      }),\n    [TICKERS_FAILUER]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const coinList = action.payload.map((coin) => {\n          return coin.name;\n        });\n        draft.coinList = coinList;\n      }),\n    [COIN_LIST_FAILURE]: (state, action) => produce(state, (draft) => {}),\n    [BITHUMB_BITCOIN_KRW]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          BTC: { last },\n        } = action.payload;\n        draft.bithumbBitKrw = last;\n      }),\n    [UPBIT_BITCOIN_KRW_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = true;\n      }),\n    [UPBIT_BITCOIN_KRW_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitkrwLoading = false;\n        draft.upbitBitKrw = action.payload[0].trade_price;\n      }),\n    [UPBIT_BITCOIN_KRW_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitBitKrwError = action.payload.error;\n      }),\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const target = action.payload.rates[\"USDKRW\"].rate;\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = target.toFixed(3);\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const { payload } = action;\n        const filteredList = payload\n          .filter((v) => v.title.includes(\"BTC\"))\n          .map((v) => {\n            if (\n              moment(v.created_at).format(\"YYYY-MM-DD\") ===\n              moment().format(\"YYYY-MM-DD\")\n            )\n              return { new: true, notice: v };\n            else return { new: false, notice: v };\n          });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [UPBIT_SETTING_SUCCESS]: (state, action) => {},\n    [UPBIT_SETTING_FAILURE]: (state, action) => {},\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [BINANCE_SETTING_SUCCESS]: (state, action) => {},\n    [BINANCE_SETTING_FAILURE]: (state, action) => {},\n    [KEY_SETTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [KEY_SETTING_SUCCESS]: (state, action) => {},\n    [KEY_SETTING_FAILURE]: (state, action) => {},\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [UPBIT_BID_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BID_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_BID_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [UPBIT_ASK_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_ASK_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_ASK_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [TRADE_ERROR_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 0;\n      }),\n  },\n  initialState\n);\n","import React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setBtc } from \"../reducers/coin\";\nconst ExchangeContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n  height: 35px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 33px;\n  }\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 1rem;\n  margin: 0;\n  padding: 4px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    word-break: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (max-width: 581px) {\n    font-size: 0.75rem;\n  }\n`;\nfunction CurrentExchangeBar() {\n  const dispatch = useDispatch();\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt, bithumbBitKrw } = useSelector(\n    (state) => state.coin\n  );\n  const convertUsdToKrw = useCallback(() => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  }, [binanceBitUsdt, usdToKrw]);\n  useEffect(() => {\n    const converted = convertUsdToKrw(),\n      percent1 = (\n        ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n          convertUsdToKrw()) *\n        100\n      ).toFixed(2),\n      percent2 = (\n        ((parseFloat(bithumbBitKrw, 10) - convertUsdToKrw()) /\n          convertUsdToKrw()) *\n        100\n      ).toFixed(2);\n    dispatch(\n      setBtc({\n        symbol: \"BTC\",\n        last: upbitBitKrw,\n        converted: parseFloat(converted, 10),\n        percent1: parseFloat(percent1, 10),\n        thumb: bithumbBitKrw,\n        percent2: parseFloat(percent2, 10),\n      })\n    );\n  }, [convertUsdToKrw, dispatch, upbitBitKrw, bithumbBitKrw]);\n  return (\n    <>\n      <ExchangeContainer>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw()} BTC/KRW`}</Info>\n        <Info>{`차이: ${(\n          ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw()) /\n            convertUsdToKrw()) *\n          100\n        ).toFixed(2)}%`}</Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\nexport const CANCEL_MESSAGE_REQUEST = \"CANCEL_MESSAGE_REQUEST\";\nexport const CANCEL_MESSAGE_SUCCESS = \"CANCEL_MESSAGE_SUCCESS\";\nexport const CANCEL_MESSAGE_FAILURE = \"CANCEL_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\nexport const cancelMessage = createAction(CANCEL_MESSAGE_REQUEST);\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [CANCEL_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import React, { useRef, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\n\nconst ItemListDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n`;\nconst ItemListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n  height: 200px;\n  padding: 0;\n  margin: 0;\n  background-color: white;\n  margin: 5px;\n  padding: 5px;\n  overflow-y: scroll;\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  /* Hide scrollbar for IE and Edge */\n  & {\n    -ms-overflow-style: none;\n  }\n`;\nconst ItemListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid #e3e3e3;\n  border-left: 0;\n  border-right: 0;\n  width: 100%;\n`;\nconst ItemSpan = styled.span`\n  font-size: 0.8rem;\n`;\nconst ItemInput = styled.input`\n  background-color: white;\n  border: 2px solid #e3e3e3;\n  width: 30%;\n  padding: 5px;\n`;\nfunction ItemList({ coins, onChangePercent }) {\n  return (\n    <ItemListDiv>\n      <ItemListUl>\n        <ItemListLi>\n          <ItemSpan>BTC</ItemSpan>\n          <ItemInput\n            type=\"number\"\n            min={0}\n            max={100}\n            step={0.1}\n            placeholder=\"N%\"\n            onChange={onChangePercent}\n            data-name={\"BTC\"}\n          />\n        </ItemListLi>\n        {coins &&\n          coins.map((coin) => {\n            return (\n              <ItemListLi>\n                <ItemSpan>{coin.symbol}</ItemSpan>\n                <ItemInput\n                  type=\"number\"\n                  min={0}\n                  max={100}\n                  step={0.1}\n                  placeholder=\"N%\"\n                  onChange={onChangePercent}\n                  data-name={coin.symbol}\n                />\n              </ItemListLi>\n            );\n          })}\n      </ItemListUl>\n    </ItemListDiv>\n  );\n}\nexport default React.memo(ItemList);\n","import React, { useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setUpbit,\n  setBinance,\n  upbitBid,\n  upbitAsk,\n  setTradeError,\n  setKey,\n} from \"../reducers/coin\";\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n  width: 100%;\n`;\nconst TradeSettingDiv = ApiContainer.withComponent(\"div\");\nconst TradeBtn = styled(SettingBtn.withComponent(\"button\"))`\n  border-radius: 10px;\n  width: 50%;\n`;\nfunction SettingTrade({ coinInfo }) {\n  const dispatch = useDispatch();\n  const timer = useRef(false);\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  const coinSymbol = useRef(\"\");\n  const percent = useRef(\"\");\n  const amount = useRef(0);\n  const check = useRef(null);\n  const {\n    upbitBitKrw,\n    tradeError,\n    upbitApi: api1,\n    upbitSec: sec1,\n    binanceApi: api2,\n    binanceSec: sec2,\n  } = useSelector((state) => state.coin);\n\n  useEffect(() => {\n    if (timer.current) {\n      if (tradeError === 0) {\n        startTrade();\n      } else {\n        timer.current = false;\n      }\n    }\n  });\n  const onClickKey = useCallback((e) => {\n    const { target } = e;\n    if (target.innerHTML === \"확인\") {\n      if (\n        upbitApi.current.value === \"\" ||\n        upbitSec.current.value === \"\" ||\n        binanceApi.current.value === \"\" ||\n        binanceSec.current.value === \"\"\n      ) {\n        alert(\"API와 Secret키를 입력해주세요\");\n        return;\n      }\n      dispatch(\n        setKey({\n          upbitApi: upbitApi.current.value,\n          upbitSec: upbitSec.current.value,\n          binanceApi: binanceApi.current.value,\n          binanceSec: binanceSec.current.value,\n          type: \"set\",\n        })\n      );\n      target.innerHTML = \"취소\";\n    } else {\n      upbitApi.current.value = \"\";\n      upbitSec.current.value = \"\";\n      binanceApi.current.value = \"\";\n      binanceSec.current.value = \"\";\n      dispatch(\n        setKey({\n          upbitApi: \"\",\n          upbitSec: \"\",\n          binanceApi: \"\",\n          binanceSec: \"\",\n          type: \"cancel\",\n        })\n      );\n      target.innerHTML = \"확인\";\n    }\n  }, []);\n  const onClickUpbit = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (upbitApi.current.value === \"\" || upbitSec.current.value === \"\") {\n          alert(\"API와 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setUpbit({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        dispatch(\n          setUpbit({\n            upbitApi: \"\",\n            upbitSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  const onClickBinance = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API와 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setBinance({\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setBinance({\n            binanceApi: \"\",\n            binanceSec: \"\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const onClickTrade = useCallback((e) => {\n    setTradeError();\n    if (timer.current) {\n      timer.current = false;\n    } else {\n      if (\n        binanceApi.current.value === \"\" ||\n        binanceSec.current.value === \"\" ||\n        upbitApi.current.value === \"\" ||\n        upbitSec.current.value === \"\"\n      ) {\n        alert(\"API 와 Secret이 필요합니다\");\n      } else if (coinSymbol.current === \"\" || percent.current === \"\") {\n        alert(\"코인 & 차이(%) 설정이 필요합니다\");\n      } else {\n        timer.current = true;\n      }\n    }\n  }, []);\n  const onChangeCoin = useCallback((e) => {\n    const { target } = e;\n    coinSymbol.current = target.value;\n    //console.log(coinSymbol.current);\n  }, []);\n  const onChangePercent = useCallback((e) => {\n    const { target } = e;\n    percent.current = target.value;\n  }, []);\n  const onChangeAmount = useCallback((e) => {\n    const { target } = e;\n    amount.current = target.value;\n  }, []);\n  const startTrade = useCallback(() => {\n    const coin = coinInfo.filter((coin) => coin.symbol === coinSymbol.current);\n    const converted = (coin[0].blast * upbitBitKrw).toFixed(2);\n    const p = parseFloat(percent.current, 10);\n    const per = parseFloat(\n      (((coin[0].last - converted) / converted) * 100).toFixed(2),\n      10\n    );\n    if (Math.abs(per) >= p) {\n      if (per > 0) {\n        //console.log(\"업비트 매도, 바이낸스 매수\"); //ask  bid\n        dispatch(\n          upbitAsk({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      } else {\n        //console.log(\"업비트 매수, 바이낸스 매도\"); //bid ask\n        dispatch(\n          upbitBid({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      }\n      check.current = per;\n    }\n  }, [coinInfo, upbitBitKrw, dispatch]);\n  return (\n    <>\n      <ApiContainer>\n        <Input ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n        <SecretInput\n          ref={upbitSec}\n          type=\"password\"\n          placeholder=\"업비트 secret\"\n        />\n      </ApiContainer>\n      <ApiContainer>\n        <Input ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n        <SecretInput\n          ref={binanceSec}\n          type=\"password\"\n          placeholder=\"바이낸스 secret\"\n        />\n      </ApiContainer>\n      <SettingBtn onClick={onClickKey}>확인</SettingBtn>\n      <TradeSettingDiv>\n        <Input type=\"text\" placeholder=\"코인\" onChange={onChangeCoin} />\n        <Input\n          type=\"number\"\n          placeholder=\"차이%\"\n          min={0}\n          max={100}\n          step={0.1}\n          onChange={onChangePercent}\n        />\n        <Input\n          type=\"number\"\n          placeholder=\"코인 양\"\n          min={0}\n          step={0.1}\n          onChange={onChangeAmount}\n        />\n        <TradeBtn onClick={onClickTrade}>\n          {timer.current ? \"설정 취소\" : \"자전 설정\"}\n        </TradeBtn>\n      </TradeSettingDiv>\n    </>\n  );\n}\n\nexport default React.memo(SettingTrade);\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendMessage, cancelMessage } from \"../reducers/bot\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ItemList from \"./ItemList\";\nimport SettingTrade from \"./SettingTrade\";\nconst SettingBarDiv = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -1px 1px 3px 0px #696969;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n  width: 100%;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nfunction SettingBar({ coinInfo, upbitBitKrw }) {\n  const dispatch = useDispatch();\n  const timer = useRef();\n  const wrapper = useRef();\n  const [coins, setCoins] = useState([]);\n  const [coinPer, setCoinPer] = useState({});\n  const checkPer = useRef({});\n  const { btc } = useSelector((state) => state.coin);\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const startBot = useCallback(\n    (coinlist, krw) => {\n      const coinPerLength = Object.keys(coinPer).length;\n      if (coinPerLength > 0) {\n        [{ symbol: \"BTC\" }, ...coinlist].forEach((coin) => {\n          if (\n            Object.keys(coinPer).indexOf(coin.symbol) !== -1 &&\n            coinPer[coin.symbol] !== \"\"\n          ) {\n            if (coin.symbol !== \"BTC\") {\n              const converted = (coin.blast * krw).toFixed(2);\n              const p = parseFloat(coinPer[coin.symbol], 10);\n              const per1 = parseFloat(\n                  (((coin.last - converted) / converted) * 100).toFixed(2),\n                  10\n                ),\n                per2 = parseFloat(\n                  (((coin.thumb - converted) / converted) * 100).toFixed(2),\n                  10\n                );\n              //console.log(per2);\n              if (\n                (per1 !== -100 && Math.abs(per1) > p) ||\n                (per2 !== -100 && Math.abs(per2) > p)\n              ) {\n                if (Object.keys(checkPer.current).indexOf(coin.symbol) === -1) {\n                  checkPer.current = {\n                    ...checkPer.current,\n                    [coin.symbol]: { per1, per2 },\n                  };\n                  dispatch(\n                    sendMessage({\n                      coinInfo: {\n                        symbol: coin.symbol,\n                        upbit: coin.last,\n                        binance: converted,\n                        percentUp: per1,\n                        bithumb: coin.thumb,\n                        percentBit: per2,\n                      },\n                    })\n                  );\n                } else {\n                  if (\n                    checkPer.current[coin.symbol].per1 !== per1 ||\n                    checkPer.current[coin.symbol].per2 !== per2\n                  ) {\n                    checkPer.current = {\n                      ...checkPer.current,\n                      [coin.symbol]: { per1, per2 },\n                    };\n                    dispatch(\n                      sendMessage({\n                        coinInfo: {\n                          symbol: coin.symbol,\n                          upbit: coin.last,\n                          binance: converted,\n                          percentUp: per1,\n                          bithumb: coin.thumb,\n                          percentBit: per2,\n                        },\n                      })\n                    );\n                  }\n                }\n              }\n            } else {\n              const p = parseFloat(coinPer[coin.symbol], 10);\n              if (Math.abs(btc.percent1) > p || Math.abs(btc.percent2) > p) {\n                if (Object.keys(checkPer.current).indexOf(coin.symbol) === -1) {\n                  checkPer.current = {\n                    ...checkPer.current,\n                    [coin.symbol]: { per1: btc.percent1, per2: btc.percent2 },\n                  };\n                  dispatch(\n                    sendMessage({\n                      coinInfo: {\n                        symbol: coin.symbol,\n                        upbit: btc.last,\n                        binance: btc.converted,\n                        percentUp: btc.percent1,\n                        bithumb: btc.thumb,\n                        percentBit: btc.percent2,\n                      },\n                    })\n                  );\n                } else {\n                  if (\n                    checkPer.current[coin.symbol].per1 !== btc.percent1 ||\n                    checkPer.current[coin.symbol].per2 !== btc.percent2\n                  ) {\n                    checkPer.current = {\n                      ...checkPer.current,\n                      [coin.symbol]: { per1: btc.percent1, per2: btc.percent2 },\n                    };\n                    dispatch(\n                      sendMessage({\n                        coinInfo: {\n                          symbol: coin.symbol,\n                          upbit: btc.last,\n                          binance: btc.converted,\n                          percentUp: btc.percent1,\n                          bithumb: btc.thumb,\n                          percentBit: btc.percent2,\n                        },\n                      })\n                    );\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    },\n    [coinPer, dispatch, btc]\n  );\n  useEffect(() => {\n    //console.log(coinInfo);\n    if (timer.current) {\n      startBot(coinInfo, upbitBitKrw);\n    }\n    if (coins.length === 0) {\n      setCoins(coinInfo);\n    }\n  }, [coinInfo, upbitBitKrw, startBot, coins]);\n  const onChangePercent = useCallback(\n    (e) => {\n      const {\n        target: { value, dataset },\n      } = e;\n      setCoinPer({\n        ...coinPer,\n        [dataset.name]: value,\n      });\n    },\n    [coinPer]\n  );\n\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      const percentsLength = Object.keys(coinPer).length;\n      if (percentsLength > 0) {\n        if (target.innerHTML === \"설정\") {\n          target.innerHTML = \"취소\";\n          timer.current = true;\n        } else {\n          target.innerHTML = \"설정\";\n          timer.current = false;\n          dispatch(cancelMessage());\n        }\n      } else {\n        alert(\"최소 한개의 % 설정이 필요합니다\");\n      }\n    },\n    [coinPer, dispatch]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1.0rem\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <SettingTrade coinInfo={coinInfo} />\n        <ItemList coins={coins} onChangePercent={onChangePercent} />\n        <SelectContainer>\n          <SelectBtn onClick={onSetting}>설정</SelectBtn>\n        </SelectContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { checkUpbitCoin, checkBinanceCoin } from \"../reducers/coin\";\nconst NewListingDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: ${(props) => (props.hide ? \"auto\" : \"35vh\")};\n  background: #c4cfd8;\n  margin-top: 5px;\n  position: fixed;\n  right: 10px;\n  bottom: 0;\n  border-radius: 4px;\n  border: 3px solid #d4d2d270;\n  box-shadow: 2px 2px 6px 1px;\n  overflow: scroll;\n  @media (min-width: 1025px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"270px\")};\n  }\n  @media (max-width: 1024px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"250px\")};\n  }\n  @media (max-width: 768px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"200px\")};\n    opacity: ${(props) => (props.hide ? \"0.2\" : \"1.0\")};\n  }\n`;\nconst FontDiv = styled.div`\n  display: flex;\n  align-self: flex-end;\n  margin: 5px;\n  svg {\n    cursor: pointer;\n  }\n`;\nconst NewListingUl = styled.ul`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  padding: 0;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  border-bottom: 3px solid #ffffff;\n  cursor: pointer;\n`;\nconst NewListingli = styled.li`\n  list-style: none;\n  flex: 1;\n  padding: 5px;\n  color: ${(props) => (props.selected ? \"black\" : \"#ffffff\")};\n  font-weight: ${(props) => (props.selected ? \"400\" : \"200\")};\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  word-break: keep-all;\n`;\nconst InfoContainer = styled.div`\n  border-top: 1px solid #0404043b;\n`;\nconst UpbitInfoUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 2px;\n`;\nconst UpbitInfoli = styled.li`\n  list-style: none;\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nconst BinanceInfoUl = UpbitInfoUl.withComponent(\"ul\");\nconst BinanceInfoli = styled(UpbitInfoli.withComponent(\"li\"))`\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nfunction NewListing() {\n  const dispatch = useDispatch();\n  const { upbitNewListing, binanceNewListing } = useSelector(\n    (state) => state.coin\n  );\n  const [selected, setSelected] = useState(0);\n  const [isHide, setHide] = useState(false);\n  const container = useRef();\n  const onChangeSelect = useCallback((e) => {\n    const {\n      target: {\n        dataset: { id },\n      },\n    } = e;\n    setSelected(parseInt(id, 10));\n  }, []);\n  const onToggle = useCallback(() => {\n    if (container.current.style.display === \"flex\") {\n      container.current.style.display = \"none\";\n      setHide(true);\n    } else {\n      container.current.style.display = \"flex\";\n      setHide(false);\n    }\n  }, []);\n\n  const checkTodaysNotice = useCallback(() => {\n    const binanceNewNotices = binanceNewListing.filter((v) => v.new === true);\n    if (binanceNewNotices.length > 0) {\n      dispatch(\n        checkBinanceCoin({\n          notices: binanceNewNotices,\n        })\n      );\n    }\n  }, [binanceNewListing, dispatch]);\n  useEffect(() => {\n    checkTodaysNotice();\n  }, [checkTodaysNotice]);\n  return (\n    <NewListingDiv hide={isHide === true}>\n      <FontDiv>\n        {isHide ? (\n          <FontAwesomeIcon icon={faPlus} onClick={onToggle} />\n        ) : (\n          <FontAwesomeIcon icon={faMinus} onClick={onToggle} />\n        )}\n      </FontDiv>\n      <NewListingUl hide={isHide === true}>\n        <NewListingli\n          data-id={0}\n          onClick={onChangeSelect}\n          selected={selected === 0}\n        >\n          업비트 상장\n        </NewListingli>\n        <NewListingli\n          data-id={1}\n          onClick={onChangeSelect}\n          selected={selected === 1}\n        >\n          바이낸스 상장\n        </NewListingli>\n      </NewListingUl>\n      <InfoContainer style={{ display: \"flex\" }} ref={container}>\n        {selected === 0 ? (\n          <UpbitInfoUl>\n            {upbitNewListing &&\n              upbitNewListing.map((notice) => {\n                return (\n                  <UpbitInfoli key={v4()}>{notice.notice.title}</UpbitInfoli>\n                );\n              })}\n          </UpbitInfoUl>\n        ) : (\n          <BinanceInfoUl>\n            {binanceNewListing &&\n              binanceNewListing.map((notice) => {\n                return (\n                  <BinanceInfoli key={v4()}>\n                    {notice.notice.title}\n                  </BinanceInfoli>\n                );\n              })}\n          </BinanceInfoUl>\n        )}\n      </InfoContainer>\n    </NewListingDiv>\n  );\n}\nexport default NewListing;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ccxt from \"ccxt\";\nimport Loading from \"./Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUsdToKrw,\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadUpbitNewListing,\n  loadBianceNewListing,\n  loadBithumbBitkrw,\n  loadTickers,\n} from \"../reducers/coin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport NewListing from \"./NewListing\";\n//const exchangeList = [\"Upbit\", \"Binance\"];\nconst ExchangesWrapper = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst ExchangesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 5px;\n  border: 1px solid;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  font-size: 0.4rem;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    padding: 0px;\n  }\n`;\nconst ExchangeItem = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"black\" : \"black\")};\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  @media (min-width: 1025px) {\n    width: 60%;\n    margin: 0 auto;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst Coin = styled.div`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.85rem;\n  color: black;\n  margin-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n  }\n  &:nth-child(2),\n  &:nth-child(5) {\n    color: ${(props) => (props.head === true ? \"black\" : \"#27ae60\")};\n    font-weight: ${(props) => (props.head === true ? \"800\" : \"600\")};\n  }\n  &:nth-child(3) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    font-weight: ${(props) =>\n      props.head === true ? \"800\" : props.up === true ? \"600\" : \"600\"};\n    p {\n      font-size: 0.85rem;\n      margin-bottom: 0;\n      margin-top: 0;\n      @media (max-width: 768px) {\n        font-size: 0.7rem;\n      }\n      @media (max-width: 425px) {\n        align-self: flex-start;\n      }\n    }\n  }\n  &:nth-child(4),\n  &:nth-child(6) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#ff2e18\"\n        : \"#0012ff\"};\n    border-radius: 10px;\n    background-color: ${(props) =>\n      props.head === true\n        ? \"white\"\n        : props.up === true\n        ? \"#ff747363\"\n        : \"#007fff47\"};\n    border-radius: 10px;\n  }\n`;\nfunction ExchangeList() {\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [sortType, setSortType] = useState(-1);\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw, tickers } = useSelector((state) => state.coin);\n  const info = useRef([]);\n  const timer = useRef(null);\n  const getExchangeTickers = useCallback(async () => {\n    if (timer.current) {\n      timer.current = setTimeout(getExchangeTickers, 2000);\n    }\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    const bithumb = new ccxt.bithumb();\n    const tickers3 = await bithumb.fetchTickers();\n    let info = [...tickers];\n    info = info.sort((x, y) => {\n      const convertedX = x.blast * upbitBitKrw,\n        convertedY = y.blast * upbitBitKrw;\n      if (sortType === -1) return x.symbol > y.symbol ? 1 : -1;\n      else if (sortType === 1) return x.symbol < y.symbol ? 1 : -1;\n      else if (sortType === -2) return x.last > y.last ? 1 : -1;\n      else if (sortType === 2) return x.last < y.last ? 1 : -1;\n      else if (sortType === -3) return x.blast > y.blast ? 1 : -1;\n      else if (sortType === 3) return x.blast < y.blast ? 1 : -1;\n      else if (sortType === -4)\n        return (x.last - convertedX) / x.last > (y.last - convertedY) / y.last\n          ? 1\n          : -1;\n      else if (sortType === 4)\n        return (x.last - convertedX) / x.last < (y.last - convertedY) / y.last\n          ? 1\n          : -1;\n    });\n    dispatch(loadTickers());\n    dispatch(loadUpbitBitKrw());\n    dispatch(\n      loadBithumbBitkrw({\n        BTC: tickers3[\"BTC/KRW\"],\n      })\n    );\n    dispatch(loadUsdToKrw());\n    dispatch(loadBinanceBitUsdt());\n    dispatch(loadUpbitNewListing());\n    if (loading === true) setLoading(false);\n    if (isFirstLoading === false) setIsFirstLoading(true);\n    setUpbitCoinInfo(info);\n  }, [loading, isFirstLoading, dispatch, sortType, upbitBitKrw, tickers]);\n\n  useEffect(() => {\n    timer.current = setTimeout(getExchangeTickers, 1000);\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, [getExchangeTickers, sortType, upbitBitKrw, coinList, info]);\n  const onSort = useCallback(\n    (coinInfo) => (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType === 1) {\n          coinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          setSortType(-1);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType === 2) {\n          coinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          setSortType(-2);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType === 3) {\n          coinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          setSortType(-3);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType === 4) {\n          coinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 >\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(-4);\n        } else {\n          coinInfo.sort((x, y) => {\n            const convertedX = x.blast * upbitBitKrw,\n              convertedY = y.blast * upbitBitKrw;\n            return ((x.last - convertedX) / convertedX) * 100 <\n              ((y.last - convertedY) / convertedY) * 100\n              ? 1\n              : -1;\n          });\n          setSortType(4);\n        }\n      }\n    },\n    [sortType, upbitBitKrw]\n  );\n  return (\n    <main>\n      <ExchangesContainer>\n        <ExchangeItem>Upbit</ExchangeItem>\n        <ExchangeItem>Binance</ExchangeItem>\n        <ExchangeItem>Bithumb</ExchangeItem>\n      </ExchangesContainer>\n      <SettingBar coinInfo={upbitCoinInfo} upbitBitKrw={upbitBitKrw} />\n      <CurrentExchangeBar />\n      <ExchangesWrapper>\n        <ExchangeCoinsContainer>\n          {\n            <CoinContainer>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={1}>\n                코인\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={2}>\n                업비트(₩)\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={3}>\n                바이낸스(BTC)\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={4}>\n                차이(%)\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={5}>\n                빗썸(₩)\n              </Coin>\n              <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={6}>\n                차이(%)\n              </Coin>\n            </CoinContainer>\n          }\n          {upbitCoinInfo.map((v, idx) => {\n            const convertedBinance = parseFloat(\n              (v.blast * upbitBitKrw).toFixed(2),\n              10\n            );\n            const percentUP = (\n              ((v.last - convertedBinance) / convertedBinance) *\n              100\n            ).toFixed(2);\n            const percentBit = (\n              ((v.thumb - convertedBinance) / convertedBinance) *\n              100\n            ).toFixed(2);\n            return (\n              <CoinContainer key={v4()}>\n                <Coin>{v.symbol}</Coin>\n                <Coin\n                  head={percentUP === \"-100.00\"}\n                  data-type={percentUP === \"-100.00\" ? \"unlist\" : \"list\"}\n                >\n                  {v.last}₩\n                </Coin>\n                <Coin up={percentUP > 0}>\n                  {v.blast && v.blast.toFixed(8)}\n                  <p>{convertedBinance}₩</p>\n                </Coin>\n                <Coin head={percentUP === \"-100.00\"} up={percentUP > 0}>\n                  {percentUP !== \"Infinity\"\n                    ? percentUP === \"-100.00\"\n                      ? \"미 상장\"\n                      : `${percentUP}%`\n                    : \"로딩중\"}\n                </Coin>\n                <Coin\n                  head={percentBit === \"-100.00\"}\n                  data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                >\n                  {v.thumb}₩\n                </Coin>\n                <Coin\n                  head={percentBit === \"-100.00\"}\n                  up={percentBit > 0}\n                  data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                >\n                  {percentBit !== \"Infinity\"\n                    ? percentBit === \"-100.00\"\n                      ? \"미 상장\"\n                      : `${percentBit}%`\n                    : \"로딩중\"}\n                </Coin>\n              </CoinContainer>\n            );\n          })}\n        </ExchangeCoinsContainer>\n        <NewListing />\n      </ExchangesWrapper>\n      <Loading isLoading={loading} />\n    </main>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ExchangeList from \"./components/ExchangeList\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCoinList } from \"./reducers/coin\";\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-bottom: 0;\n  margin-top: 0;\n  height: 20px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n  }\n`;\nconst Title = styled.p`\n  font-family: 800;\n`;\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCoinList());\n  }, [dispatch]);\n  return (\n    <>\n      <Header>\n        <Title>CoinAT</Title>\n      </Header>\n      <ExchangeList />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nexport default combineReducers({\n  coin,\n  bot,\n});\n","import { v4 } from \"uuid\";\nimport { all, takeLatest, fork, put, call, throttle } from \"redux-saga/effects\";\nimport {\n  UPBIT_BITCOIN_KRW_SUCCESS,\n  UPBIT_BITCOIN_KRW_FAILURE,\n  UPBIT_BITCOIN_KRW_REQUEST,\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  BINANCE_BITCOIN_USDT_REQUEST,\n  BINANCE_BITCOIN_USDT_FAILURE,\n  BINANCE_BITCOIN_USDT_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n  COIN_LIST_FAILURE,\n  COIN_LIST_SUCCESS,\n  COIN_LIST_REQUEST,\n  UPBIT_BID_REQUEST,\n  UPBIT_ASK_REQUEST,\n  UPBIT_BID_FAILURE,\n  UPBIT_BID_SUCCESS,\n  UPBIT_ASK_SUCCESS,\n  UPBIT_ASK_FAILURE,\n  BINANCE_SETTING,\n  BINANCE_SETTING_SUCCESS,\n  BINANCE_SETTING_FAILURE,\n  UPBIT_SETTING,\n  UPBIT_SETTING_SUCCESS,\n  UPBIT_SETTING_FAILURE,\n  KEY_SETTING_REQUEST,\n  KEY_SETTING_SUCCESS,\n  KEY_SETTING_FAILURE,\n  TICKERS_REQUEST,\n  TICKERS_SUCCESS,\n  TICKERS_FAILUER,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction loadBitKrwAPI() {\n  return axios.get(\"https://api.upbit.com/v1/ticker?markets=KRW-BTC\");\n}\nfunction* loadBitKrw(action) {\n  try {\n    const result = yield call(loadBitKrwAPI, action.payload);\n    yield put({\n      type: UPBIT_BITCOIN_KRW_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BITCOIN_KRW_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitKrw() {\n  yield takeLatest(UPBIT_BITCOIN_KRW_REQUEST, loadBitKrw);\n}\n\nfunction loadCurrencyAPI() {\n  return axios.get(`${API_URL}coin/currency`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n  //https://www.freeforexapi.com/api/live?pairs=USDKRW\n  //return axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\");\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield throttle(1000, CURRENCY_REQUEST, loadCurrency);\n}\n\nfunction loadBitUsdtAPI() {\n  return axios.get(\n    \"https://www.binance.com/api/v1/aggTrades?limit=1&symbol=BTCUSDT\"\n  );\n}\nfunction* loadBitUsdt() {\n  try {\n    const result = yield call(loadBitUsdtAPI);\n    yield put({\n      type: BINANCE_BITCOIN_USDT_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_BITCOIN_USDT_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitUsdt() {\n  yield takeLatest(BINANCE_BITCOIN_USDT_REQUEST, loadBitUsdt);\n}\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice/upbit`);\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice/binance`);\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data);\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data);\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nfunction coinListAPI() {\n  return axios.get(`${API_URL}coin`);\n}\nfunction* coinList() {\n  try {\n    const result = yield call(coinListAPI);\n    yield put({\n      type: COIN_LIST_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: COIN_LIST_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCoinList() {\n  yield takeLatest(COIN_LIST_REQUEST, coinList);\n}\n\nfunction upbitBidAPI(data) {\n  return axios.post(`${API_URL}trade/bid`, data);\n}\nfunction* upbitBid(action) {\n  try {\n    //console.log(action.payload);\n    const result = yield call(upbitBidAPI, action.payload);\n    yield put({\n      type: UPBIT_BID_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BID_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitBid() {\n  yield throttle(1200, UPBIT_BID_REQUEST, upbitBid);\n}\n\nfunction upbitAskAPI(data) {\n  return axios.post(`${API_URL}trade/ask`, data);\n}\nfunction* upbitAsk(action) {\n  try {\n    const result = yield call(upbitAskAPI, action.payload);\n    yield put({\n      type: UPBIT_ASK_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_ASK_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitAsk() {\n  yield throttle(1200, UPBIT_ASK_REQUEST, upbitAsk);\n}\n\nfunction setBinanceKeyAPI(data) {\n  return axios.post(`${API_URL}trade/binance_key`, {\n    api: data.binanceApi,\n    sec: data.binanceSec,\n  });\n}\nfunction* setBinanceKey(action) {\n  try {\n    yield call(setBinanceKeyAPI, action.payload);\n    yield put({\n      type: BINANCE_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetBinanceKey() {\n  yield takeLatest(BINANCE_SETTING, setBinanceKey);\n}\n\nfunction setUpbitKeyAPI(data) {\n  return axios.post(`${API_URL}trade/upbit_key`, {\n    api: data.upbitApi,\n    sec: data.upbitSec,\n  });\n}\nfunction* setUpbitKey(action) {\n  try {\n    yield call(setUpbitKeyAPI, action.payload);\n    yield put({\n      type: UPBIT_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetUpbitKey() {\n  yield takeLatest(UPBIT_SETTING, setUpbitKey);\n}\n\nfunction setKeyAPI(data) {\n  let uid = undefined;\n  if (data.type !== \"cancel\") {\n    uid = v4();\n    localStorage.setItem(\"uid\", uid);\n  } else {\n    uid = localStorage.getItem(\"uid\");\n    localStorage.removeItem(\"uid\");\n  }\n  return axios.post(`${API_URL}trade/key`, {\n    api1: data.upbitApi,\n    sec1: data.upbitSec,\n    api2: data.binanceApi,\n    sec2: data.binanceSec,\n    type: data.type,\n    uid,\n  });\n}\nfunction* setKey(action) {\n  try {\n    yield call(setKeyAPI, action.payload);\n    yield put({\n      type: KEY_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: KEY_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetKey() {\n  yield takeLatest(KEY_SETTING_REQUEST, setKey);\n}\n\nfunction loadTickersAPI() {\n  return axios.get(`${API_URL}coin/tickers`);\n}\nfunction* loadTickers() {\n  try {\n    const result = yield call(loadTickersAPI);\n    yield put({\n      type: TICKERS_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: TICKERS_FAILUER,\n      error: e,\n    });\n  }\n}\nfunction* watchLoadTickers() {\n  yield throttle(1000, TICKERS_REQUEST, loadTickers);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchBitKrw),\n    fork(watchCurrency),\n    fork(watchBitUsdt),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n    fork(watchCoinList),\n    fork(watchUpbitBid),\n    fork(watchUpbitAsk),\n    fork(watchSetBinanceKey),\n    fork(watchSetUpbitKey),\n    fork(watchSetKey),\n    fork(watchLoadTickers),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_FAILURE,\n  CANCEL_MESSAGE_REQUEST,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot`, data);\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\n\nfunction cancelMessageAPI(data) {\n  return axios.post(`${API_URL}bot/cancel`, data);\n}\nfunction* cancelMessage(action) {\n  try {\n    yield call(cancelMessageAPI, action.payload);\n    yield put({\n      type: CANCEL_MESSAGE_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CANCEL_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCancelMessage() {\n  yield takeLatest(CANCEL_MESSAGE_REQUEST, cancelMessage);\n}\n\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage), fork(watchCancelMessage)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n//import logger from \"redux-logger\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}