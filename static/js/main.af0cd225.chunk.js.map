{"version":3,"sources":["components/Loading.jsx","reducers/coin.js","components/CurrentExchangeBar.jsx","reducers/bot.js","components/ItemList.jsx","components/SettingTrade.jsx","components/SettingBar.jsx","components/NewListing.jsx","utills.js","socket.js","components/ExchangeList.jsx","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/index.js","index.js"],"names":["LoadingAni","keyframes","LoadingContainer","styled","div","LoadingBar","props","size","css","Loading","isLoading","loadCoinList","createAction","loadBithumbBitkrw","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","setKey","setBtc","upbitBid","upbitAsk","setTradeError","handleActions","state","action","produce","draft","btc","payload","coinInfo","length","tickers","coinList","map","coin","name","BTC","bithumbBitKrw","upbitBitKrw","isbitkrwLoading","isUsdToKrwLoading","target","data","filter","currency","pair","rate","usdToKrw","toFixed","usdToKrwError","error","binanceBitUsdt","isbitusdtLoading","isUpbitNewListingLoading","filteredList","v","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","tradeError","upbitBitKrwError","binanceBitUsdtError","ExchangeContainer","section","Info","p","CurrentExchangeBar","dispatch","useDispatch","useSelector","convertUsdToKrw","useMemo","parseFloat","useEffect","converted","percent1","percent2","symbol","last","thumb","sendMessage","cancelMessage","isSending","ItemListDiv","ItemListUl","ul","ItemListLi","li","ItemSpan","span","ItemInput","input","React","memo","coins","onChangePercent","type","min","max","step","placeholder","onChange","data-name","ApiContainer","Input","SecretInput","SettingBtn","button","TradeSettingDiv","withComponent","TradeBtn","timer","useRef","coinSymbol","percent","amount","check","current","startTrade","onClickKey","useCallback","e","innerHTML","value","alert","onClickTrade","onChangeCoin","onChangeAmount","blast","per","Math","abs","q","ref","onClick","SettingBarDiv","InputWrapper","SelectContainer","SelectBtn","wrapper","useState","setCoins","coinPer","setCoinPer","dataset","onSetting","Object","keys","onToggle","style","display","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","fontSize","NewListingDiv","hide","FontDiv","NewListingUl","NewListingli","selected","InfoContainer","UpbitInfoUl","UpbitInfoli","BinanceInfoUl","BinanceInfoli","NewListing","setSelected","isHide","setHide","container","onChangeSelect","id","parseInt","cur","checkSize","window","innerWidth","getNewListing","setTimeout","addEventListener","removeEventListener","faPlus","faMinus","data-id","key","v4","title","getPercent","x","y","coinTickers","socket","getCoinData","on","console","log","emit","disconnect","ExchangesWrapper","ExchangesContainer","ExchangeItem","ExchangeCoinsContainer","CoinHeadContainer","CoinContainer","Coin","head","up","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","info","sortType","getExchangeTickers","sort","undefined","per1","ticker","useLayoutEffect","onSort","convertedBinance","percentUP","percentBit","data-type","Header","header","Title","App","getCurrency","Boolean","location","hostname","match","combineReducers","bot","loadCurrency","watchCurrency","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","watchCoinList","watchUpbitBid","watchUpbitAsk","setBinanceKey","watchSetBinanceKey","setUpbitKey","watchSetUpbitKey","watchSetKey","loadTickers","watchLoadTickers","coinSaga","dotenv","config","API_URL","process","loadCurrencyAPI","axios","get","headers","withCredentials","call","result","put","throttle","loadUpbitNewListingAPI","takeLatest","loadBinanceNewListingAPI","upbitNewCoinAPI","post","binanceNewCoinAPI","coinListAPI","upbitBidAPI","upbitAskAPI","setBinanceKeyAPI","api","sec","setUpbitKeyAPI","setKeyAPI","uid","localStorage","setItem","getItem","removeItem","api1","sec1","api2","sec2","loadTickersAPI","all","fork","watchSendMessage","watchCancelMessage","botSaga","sendMessageAPI","cancelMessageAPI","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","socketIO","connect","transports","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.af0cd225.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\n\nexport const SETTING_BTC = \"SETTING_BTC\";\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\n\nexport const TICKERS_REQUEST = \"TICKERS_REQUEST\";\nexport const TICKERS_SUCCESS = \"TICKERS_SUCCESS\";\nexport const TICKERS_FAILUER = \"TICKERS_FAILURE\";\n\nexport const COIN_LIST_REQUEST = \"COIN_LIST_REQUEST\";\nexport const COIN_LIST_SUCCESS = \"COIN_LIST_SUCCESS\";\nexport const COIN_LIST_FAILURE = \"COIN_LIST_FAILURE\";\n\nexport const UPBIT_BITCOIN_KRW = \"UPBIT_BITCOIN_KRW\";\nexport const BITHUMB_BITCOIN_KRW = \"BITHUMB_BITCOIN_KRW\";\nexport const BINANCE_BITCOIN_USDT = \"BINANCE_BITCOIN_USDT\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\n/*export const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";*/\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const UPBIT_SETTING_SUCCESS = \"UPBIT_SETTING_SUCCESS\";\nexport const UPBIT_SETTING_FAILURE = \"UPBIT_SETTING_FAILURE\";\n\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\nexport const BINANCE_SETTING_SUCCESS = \"BINANCE_SETTING_SUCCESS\";\nexport const BINANCE_SETTING_FAILURE = \"BINANCE_SETTING_FAILURE\";\n\nexport const KEY_SETTING_REQUEST = \"KEY_SETTING_REQUEST\";\nexport const KEY_SETTING_SUCCESS = \"KEY_SETTING_SUCCESS\";\nexport const KEY_SETTING_FAILURE = \"KEY_SETTING_FAILURE\";\n\nexport const UPBIT_BID_REQUEST = \"UPBIT_BID_REQUEST\";\nexport const UPBIT_BID_SUCCESS = \"UPBIT_BID_SUCCESS\";\nexport const UPBIT_BID_FAILURE = \"UPBIT_BID_FAILURE\";\n\nexport const UPBIT_ASK_REQUEST = \"UPBIT_ASK_REQUEST\";\nexport const UPBIT_ASK_SUCCESS = \"UPBIT_ASK_SUCCESS\";\nexport const UPBIT_ASK_FAILURE = \"UPBIT_ASK_FAILURE\";\n\nexport const TRADE_ERROR_REQUEST = \"TRADE_ERROR_REQUEST\";\n\nexport const loadCoinInfo = createAction(COIN_INFO_REQUEST);\nexport const loadCoinList = createAction(COIN_LIST_REQUEST);\nexport const loadBithumbBitkrw = createAction(BITHUMB_BITCOIN_KRW);\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const loadTickers = createAction(TICKERS_REQUEST);\n\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\n\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\nexport const setKey = createAction(KEY_SETTING_REQUEST);\n\nexport const setBtc = createAction(SETTING_BTC);\n\nexport const upbitBid = createAction(UPBIT_BID_REQUEST);\nexport const upbitAsk = createAction(UPBIT_ASK_REQUEST);\n\nexport const setTradeError = createAction(TRADE_ERROR_REQUEST);\n\nconst initialState = {\n  tickers: [],\n  isbitkrwLoading: false,\n  bithumbBitKrw: 0.0,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: true,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: true,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  btc: {},\n  coinInfo: [],\n  coinList: [\n    \"ADA\",\n    \"ADX\",\n    \"ANKR\",\n    \"ARDR\",\n    \"ARK\",\n    \"ATOM\",\n    \"BAT\",\n    \"BCH\",\n    \"BTG\",\n    \"CVC\",\n    \"CHZ\",\n    \"DCR\",\n    \"ELF\",\n    \"ENJ\",\n    \"EOS\",\n    \"ETC\",\n    \"ETH\",\n    \"GAS\",\n    \"GNT\",\n    \"GRS\",\n    \"GTO\",\n    \"HBAR\",\n    \"ICX\",\n    \"IOST\",\n    \"IOTA\",\n    \"KMD\",\n    \"KNC\",\n    \"LOOM\",\n    \"LSK\",\n    \"LTC\",\n    \"MANA\",\n    \"MBL\",\n    \"MCO\",\n    \"MTL\",\n    \"NEO\",\n    \"OMG\",\n    \"ONG\",\n    \"ONT\",\n    \"OST\",\n    \"POLY\",\n    \"POWR\",\n    \"QKC\",\n    \"QTUM\",\n    \"REP\",\n    \"SC\",\n    \"SNT\",\n    \"STEEM\",\n    \"STORJ\",\n    \"STPT\",\n    \"STRAT\",\n    \"TFUEL\",\n    \"THETA\",\n    \"TRX\",\n    \"VET\",\n    \"WAVES\",\n    \"XEM\",\n    \"XLM\",\n    \"XRP\",\n    \"ZIL\",\n    \"ZRX\",\n  ],\n  tradeError: 0,\n};\nexport default handleActions(\n  {\n    [SETTING_BTC]: (state, action) =>\n      produce(state, (draft) => {\n        draft.btc = action.payload;\n      }),\n    [COIN_INFO_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        if (draft.coinInfo.length < action.payload.coinInfo.length)\n          draft.coinInfo = action.payload.coinInfo;\n      }),\n    [TICKERS_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [TICKERS_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tickers = action.payload;\n      }),\n    [TICKERS_FAILUER]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const coinList = action.payload.map((coin) => {\n          return coin.name;\n        });\n        draft.coinList = coinList;\n      }),\n    [COIN_LIST_FAILURE]: (state, action) => produce(state, (draft) => {}),\n    [BITHUMB_BITCOIN_KRW]: (state, action) =>\n      produce(state, (draft) => {\n        const { BTC } = action.payload;\n        draft.bithumbBitKrw = BTC;\n      }),\n    [UPBIT_BITCOIN_KRW]: (state, action) =>\n      produce(state, (draft) => {\n        const { BTC } = action.payload;\n        draft.upbitBitKrw = BTC;\n        draft.isbitkrwLoading = true;\n      }),\n\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const target = action.payload.data.filter(\n          (currency) => currency.pair === \"KRW_USD\"\n        )[0].rate;\n        //console.log(target);\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = target.toFixed(3);\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT]: (state, action) =>\n      produce(state, (draft) => {\n        const { BTC } = action.payload;\n        draft.binanceBitUsdt = BTC;\n        draft.isbitusdtLoading = false;\n      }),\n    /*[BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),*/\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const { payload } = action;\n        //console.log(payload);\n        const filteredList = payload.map((v) => {\n          if (\n            moment(v.created_at).format(\"YYYY-MM-DD\") ===\n            moment().format(\"YYYY-MM-DD\")\n          )\n            return { new: true, notice: v };\n          else return { new: false, notice: v };\n        });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [UPBIT_SETTING_SUCCESS]: (state, action) => {},\n    [UPBIT_SETTING_FAILURE]: (state, action) => {},\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [BINANCE_SETTING_SUCCESS]: (state, action) => {},\n    [BINANCE_SETTING_FAILURE]: (state, action) => {},\n    [KEY_SETTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [KEY_SETTING_SUCCESS]: (state, action) => {},\n    [KEY_SETTING_FAILURE]: (state, action) => {},\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [UPBIT_BID_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BID_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_BID_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [UPBIT_ASK_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_ASK_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_ASK_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [TRADE_ERROR_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 0;\n      }),\n  },\n  initialState\n);\n","import React, { useEffect, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setBtc } from \"../reducers/coin\";\nconst ExchangeContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n  height: 35px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 6vh;\n  }\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 1rem;\n  margin: 0;\n  padding: 4px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    word-break: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (max-width: 581px) {\n    font-size: 0.75rem;\n  }\n`;\nfunction CurrentExchangeBar() {\n  const dispatch = useDispatch();\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt, bithumbBitKrw } = useSelector(\n    (state) => state.coin\n  );\n  const convertUsdToKrw = useMemo(() => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  }, [binanceBitUsdt, usdToKrw]);\n  useEffect(() => {\n    const converted = convertUsdToKrw,\n      percent1 = (\n        ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw) / convertUsdToKrw) *\n        100\n      ).toFixed(2),\n      percent2 = (\n        ((parseFloat(bithumbBitKrw, 10) - convertUsdToKrw) / convertUsdToKrw) *\n        100\n      ).toFixed(2);\n    dispatch(\n      setBtc({\n        symbol: \"BTC\",\n        last: upbitBitKrw,\n        converted: parseFloat(converted, 10),\n        percent1: parseFloat(percent1, 10),\n        thumb: bithumbBitKrw,\n        percent2: parseFloat(percent2, 10),\n      })\n    );\n  }, [convertUsdToKrw, dispatch, upbitBitKrw, bithumbBitKrw]);\n  return (\n    <>\n      <ExchangeContainer>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw} BTC/KRW`}</Info>\n        <Info>{`차이: ${(\n          parseFloat(upbitBitKrw, 10) -\n          (convertUsdToKrw / convertUsdToKrw) * 100\n        ).toFixed(2)}%`}</Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\nexport const CANCEL_MESSAGE_REQUEST = \"CANCEL_MESSAGE_REQUEST\";\nexport const CANCEL_MESSAGE_SUCCESS = \"CANCEL_MESSAGE_SUCCESS\";\nexport const CANCEL_MESSAGE_FAILURE = \"CANCEL_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\nexport const cancelMessage = createAction(CANCEL_MESSAGE_REQUEST);\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [CANCEL_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nconst ItemListDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n`;\nconst ItemListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n  height: 200px;\n  padding: 0;\n  margin: 0;\n  background-color: white;\n  margin: 5px;\n  padding: 5px;\n  overflow-y: scroll;\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  /* Hide scrollbar for IE and Edge */\n  & {\n    -ms-overflow-style: none;\n  }\n`;\nconst ItemListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid #e3e3e3;\n  border-left: 0;\n  border-right: 0;\n  width: 100%;\n`;\nconst ItemSpan = styled.span`\n  font-size: 0.8rem;\n`;\nconst ItemInput = styled.input`\n  background-color: white;\n  border: 2px solid #e3e3e3;\n  width: 30%;\n  padding: 5px;\n`;\nfunction ItemList({ coins, onChangePercent }) {\n  return (\n    <ItemListDiv>\n      <ItemListUl>\n        <ItemListLi>\n          <ItemSpan>BTC</ItemSpan>\n          <ItemInput\n            type=\"number\"\n            min={0}\n            max={100}\n            step={0.1}\n            placeholder=\"N%\"\n            onChange={onChangePercent}\n            data-name={\"BTC\"}\n          />\n        </ItemListLi>\n        {coins &&\n          coins.map((coin) => {\n            return (\n              <ItemListLi>\n                <ItemSpan>{coin.symbol}</ItemSpan>\n                <ItemInput\n                  type=\"number\"\n                  min={0}\n                  max={100}\n                  step={0.1}\n                  placeholder=\"N%\"\n                  onChange={onChangePercent}\n                  data-name={coin.symbol}\n                />\n              </ItemListLi>\n            );\n          })}\n      </ItemListUl>\n    </ItemListDiv>\n  );\n}\nexport default React.memo(ItemList);\n","import React, { useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { upbitBid, upbitAsk, setTradeError, setKey } from \"../reducers/coin\";\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n  width: 100%;\n`;\nconst TradeSettingDiv = ApiContainer.withComponent(\"div\");\nconst TradeBtn = styled(SettingBtn.withComponent(\"button\"))`\n  border-radius: 10px;\n  width: 50%;\n`;\nfunction SettingTrade({ coinInfo }) {\n  const dispatch = useDispatch();\n  const timer = useRef(false);\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  const coinSymbol = useRef(\"\");\n  const percent = useRef(\"\");\n  const amount = useRef(0);\n  const check = useRef(null);\n  const {\n    upbitBitKrw,\n    tradeError,\n    upbitApi: api1,\n    upbitSec: sec1,\n    binanceApi: api2,\n    binanceSec: sec2,\n  } = useSelector((state) => state.coin);\n\n  useEffect(() => {\n    if (timer.current) {\n      if (tradeError === 0) {\n        startTrade();\n      } else {\n        timer.current = false;\n      }\n    }\n  });\n  const onClickKey = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          upbitApi.current.value === \"\" ||\n          upbitSec.current.value === \"\" ||\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API와 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setKey({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n            type: \"set\",\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setKey({\n            upbitApi: \"\",\n            upbitSec: \"\",\n            binanceApi: \"\",\n            binanceSec: \"\",\n            type: \"cancel\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const onClickTrade = useCallback((e) => {\n    setTradeError();\n    if (timer.current) {\n      timer.current = false;\n    } else {\n      if (\n        binanceApi.current.value === \"\" ||\n        binanceSec.current.value === \"\" ||\n        upbitApi.current.value === \"\" ||\n        upbitSec.current.value === \"\"\n      ) {\n        alert(\"API 와 Secret이 필요합니다\");\n      } else if (coinSymbol.current === \"\" || percent.current === \"\") {\n        alert(\"코인 & 차이(%) 설정이 필요합니다\");\n      } else {\n        timer.current = true;\n      }\n    }\n  }, []);\n  const onChangeCoin = useCallback((e) => {\n    const { target } = e;\n    coinSymbol.current = target.value;\n    //console.log(coinSymbol.current);\n  }, []);\n  const onChangePercent = useCallback((e) => {\n    const { target } = e;\n    percent.current = target.value;\n  }, []);\n  const onChangeAmount = useCallback((e) => {\n    const { target } = e;\n    amount.current = target.value;\n  }, []);\n  const startTrade = useCallback(() => {\n    const coin = coinInfo.filter((coin) => coin.symbol === coinSymbol.current);\n    const converted = (coin[0].blast * upbitBitKrw).toFixed(2);\n    const p = parseFloat(percent.current, 10);\n    const per = parseFloat(\n      (((coin[0].last - converted) / converted) * 100).toFixed(2),\n      10\n    );\n    if (Math.abs(per) >= p) {\n      if (per > 0) {\n        //console.log(\"업비트 매도, 바이낸스 매수\"); //ask  bid\n        dispatch(\n          upbitAsk({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      } else {\n        //console.log(\"업비트 매수, 바이낸스 매도\"); //bid ask\n        dispatch(\n          upbitBid({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      }\n      check.current = per;\n    }\n  }, [coinInfo, upbitBitKrw, dispatch]);\n  return (\n    <>\n      <ApiContainer>\n        <Input ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n        <SecretInput\n          ref={upbitSec}\n          type=\"password\"\n          placeholder=\"업비트 secret\"\n        />\n      </ApiContainer>\n      <ApiContainer>\n        <Input ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n        <SecretInput\n          ref={binanceSec}\n          type=\"password\"\n          placeholder=\"바이낸스 secret\"\n        />\n      </ApiContainer>\n      <SettingBtn onClick={onClickKey}>확인</SettingBtn>\n      <TradeSettingDiv>\n        <Input type=\"text\" placeholder=\"코인\" onChange={onChangeCoin} />\n        <Input\n          type=\"number\"\n          placeholder=\"차이%\"\n          min={0}\n          max={100}\n          step={0.1}\n          onChange={onChangePercent}\n        />\n        <Input\n          type=\"number\"\n          placeholder=\"코인 양\"\n          min={0}\n          step={0.1}\n          onChange={onChangeAmount}\n        />\n        <TradeBtn onClick={onClickTrade}>\n          {timer.current ? \"설정 취소\" : \"자전 설정\"}\n        </TradeBtn>\n      </TradeSettingDiv>\n    </>\n  );\n}\n\nexport default React.memo(SettingTrade);\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { sendMessage, cancelMessage } from \"../reducers/bot\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ItemList from \"./ItemList\";\nimport SettingTrade from \"./SettingTrade\";\nconst SettingBarDiv = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -1px 1px 3px 0px #696969;\n  z-index: 10;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n  width: 100%;\n`;\n\nfunction SettingBar({ coinInfo, upbitBitKrw }) {\n  const dispatch = useDispatch();\n  const wrapper = useRef();\n  const [coins, setCoins] = useState([]);\n  const [coinPer, setCoinPer] = useState({});\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  useEffect(() => {\n    if (coins.length === 0) {\n      setCoins(coinInfo);\n    }\n  }, [coinInfo, upbitBitKrw, coins]);\n  const onChangePercent = useCallback(\n    (e) => {\n      const {\n        target: { value, dataset },\n      } = e;\n      setCoinPer({\n        ...coinPer,\n        [dataset.name]: value,\n      });\n    },\n    [coinPer]\n  );\n\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      const percentsLength = Object.keys(coinPer).length;\n      if (percentsLength > 0) {\n        if (target.innerHTML === \"설정\") {\n          target.innerHTML = \"취소\";\n          dispatch(sendMessage({ coinPer }));\n        } else {\n          target.innerHTML = \"설정\";\n          dispatch(cancelMessage());\n        }\n      } else {\n        alert(\"최소 한개의 % 설정이 필요합니다\");\n      }\n    },\n    [coinPer, dispatch]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1.0rem\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <SettingTrade coinInfo={coinInfo} />\n        <ItemList coins={coins} onChangePercent={onChangePercent} />\n        <SelectContainer>\n          <SelectBtn onClick={onSetting}>설정</SelectBtn>\n        </SelectContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { loadUpbitNewListing, loadBianceNewListing } from \"../reducers/coin\";\nconst NewListingDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: ${(props) => (props.hide ? \"auto\" : \"45vh\")};\n  background: #c4cfd8;\n  margin-top: 5px;\n  position: fixed;\n  right: 10px;\n  bottom: 0;\n  border-radius: 4px;\n  border: 3px solid #d4d2d270;\n  box-shadow: 2px 2px 6px 1px;\n  overflow: scroll;\n  @media (min-width: 1025px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"270px\")};\n    height: ${(props) => (props.hide ? \"auto\" : \"65vh\")};\n  }\n  @media (max-width: 1024px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"250px\")};\n  }\n  @media (max-width: 768px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"200px\")};\n    opacity: ${(props) => (props.hide ? \"0.2\" : \"1.0\")};\n  }\n`;\nconst FontDiv = styled.div`\n  display: flex;\n  align-self: flex-start;\n  margin: 5px;\n  svg {\n    cursor: pointer;\n  }\n`;\nconst NewListingUl = styled.ul`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  padding: 0;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  border-bottom: 3px solid #ffffff;\n  cursor: pointer;\n`;\nconst NewListingli = styled.li`\n  list-style: none;\n  flex: 1;\n  padding: 5px;\n  color: ${(props) => (props.selected ? \"black\" : \"#ffffff\")};\n  font-weight: ${(props) => (props.selected ? \"400\" : \"200\")};\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  word-break: keep-all;\n`;\nconst InfoContainer = styled.div`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  border-top: 1px solid #0404043b;\n`;\nconst UpbitInfoUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 2px;\n`;\nconst UpbitInfoli = styled.li`\n  list-style: none;\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nconst BinanceInfoUl = UpbitInfoUl.withComponent(\"ul\");\nconst BinanceInfoli = styled(UpbitInfoli.withComponent(\"li\"))`\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\n\nfunction NewListing() {\n  const { upbitNewListing, binanceNewListing } = useSelector(\n    (state) => state.coin\n  );\n  const [selected, setSelected] = useState(0);\n  const [isHide, setHide] = useState(false);\n  const container = useRef();\n  const timer = useRef();\n  const dispatch = useDispatch();\n  const onChangeSelect = useCallback((e) => {\n    const {\n      target: {\n        dataset: { id },\n      },\n    } = e;\n    setSelected(parseInt(id, 10));\n  }, []);\n  const onToggle = useCallback(() => {\n    setHide((cur) => !cur);\n  }, []);\n  const checkSize = () => {\n    const innerWidth = window.innerWidth;\n    if (innerWidth <= 768) {\n      setHide(true);\n    }\n  };\n  const getNewListing = useCallback(() => {\n    if (!timer.current) {\n      dispatch(loadUpbitNewListing());\n      //dispatch(loadBianceNewListing());\n      setTimeout(() => {\n        timer.current = null;\n        getNewListing();\n      }, 10000);\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    checkSize();\n    getNewListing();\n    window.addEventListener(\"resize\", checkSize);\n    return () => {\n      window.removeEventListener(\"resize\", checkSize);\n    };\n  }, [getNewListing]);\n  return (\n    <NewListingDiv hide={isHide === true}>\n      <FontDiv>\n        {isHide ? (\n          <FontAwesomeIcon icon={faPlus} onClick={onToggle} />\n        ) : (\n          <FontAwesomeIcon icon={faMinus} onClick={onToggle} />\n        )}\n      </FontDiv>\n      <NewListingUl hide={isHide === true}>\n        <NewListingli\n          data-id={0}\n          onClick={onChangeSelect}\n          selected={selected === 0}\n        >\n          업비트 상장\n        </NewListingli>\n        <NewListingli\n          data-id={1}\n          onClick={onChangeSelect}\n          selected={selected === 1}\n        >\n          바이낸스 상장\n        </NewListingli>\n      </NewListingUl>\n      <InfoContainer ref={container} hide={isHide === true}>\n        {selected === 0 ? (\n          <UpbitInfoUl>\n            {upbitNewListing &&\n              upbitNewListing.map((notice) => {\n                return (\n                  <UpbitInfoli key={v4()}>{notice.notice.title}</UpbitInfoli>\n                );\n              })}\n          </UpbitInfoUl>\n        ) : (\n          <BinanceInfoUl>\n            {binanceNewListing &&\n              binanceNewListing.map((notice) => {\n                return <BinanceInfoli key={v4()}>{notice.title}</BinanceInfoli>;\n              })}\n          </BinanceInfoUl>\n        )}\n      </InfoContainer>\n    </NewListingDiv>\n  );\n}\nexport default NewListing;\n","export const getPercent = (x, y) => {\n  return ((x - y) / y) * 100;\n};\n","import socketIO from \"socket.io-client\";\nimport { v4 } from \"uuid\";\nexport let coinTickers = { tickers: [], id: -1 };\nexport let socket = null;\nexport const initSocket = () => {\n  socket = socketIO.connect(process.env.REACT_APP_API, {\n    transports: [\"websocket\"],\n  });\n  socket.emit(\"connect\");\n  getCoinData();\n};\nexport const getCoinData = () => {\n  if (socket !== null) {\n    socket.on(\"welcome\", () => {\n      console.log(\"welcome\");\n      socket.on(\"receive\", (data) => {\n        if (socket !== null) {\n          //console.log(data); //코인 데이터\n          coinTickers.tickers = data.length > 0 ? data : [];\n          coinTickers.id = v4();\n          socket.emit(\"send\");\n        }\n      });\n      socket.on(\"disconnected\", () => {\n        console.log(\"disconnected\");\n        socket.disconnect();\n        socket = null;\n      });\n    });\n  }\n};\n","import React, { useState, useLayoutEffect, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Loading from \"./Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadBithumbBitkrw,\n} from \"../reducers/coin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport NewListing from \"./NewListing\";\nimport { getPercent } from \"../utills\";\nimport { coinTickers } from \"../socket\";\nconst ExchangesWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nconst ExchangesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 5px;\n  border: 1px solid;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  font-size: 0.4rem;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    padding: 0px;\n  }\n`;\nconst ExchangeItem = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"black\" : \"black\")};\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  @media (min-width: 1025px) {\n    width: 65%;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinHeadContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n  @media (min-width: 1025px) {\n    width: 65%;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n`;\nconst Coin = styled.p`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.85rem;\n  color: black;\n  margin-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  white-space: pre;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n  }\n  &:nth-child(2),\n  &:nth-child(5) {\n    color: ${(props) => (props.head === true ? \"black\" : \"#27ae60\")};\n    font-weight: ${(props) => (props.head === true ? \"800\" : \"600\")};\n  }\n  &:nth-child(3) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    font-weight: ${(props) =>\n      props.head === true ? \"800\" : props.up === true ? \"600\" : \"600\"};\n    p {\n      font-size: 0.85rem;\n      margin-bottom: 0;\n      margin-top: 0;\n      @media (max-width: 768px) {\n        font-size: 0.7rem;\n      }\n      @media (max-width: 425px) {\n        align-self: flex-start;\n      }\n    }\n  }\n  &:nth-child(4),\n  &:nth-child(6) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#ff2e18\"\n        : \"#0012ff\"};\n    border-radius: 10px;\n    background-color: ${(props) =>\n      props.head === true\n        ? \"white\"\n        : props.up === true\n        ? \"#ff747363\"\n        : \"#007fff47\"};\n    border-radius: 10px;\n  }\n`;\n\nfunction ExchangeList() {\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  //const [sortType, setSortType] = useState(-1);\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw } = useSelector((state) => state.coin);\n  const info = useRef([]);\n  const sortType = useRef(-1);\n  const timer = useRef(null);\n  const getExchangeTickers = useCallback(() => {\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    if (coinTickers && coinTickers.tickers) {\n      let info = [...coinTickers.tickers]?.sort((x, y) => {\n        if (sortType.current === -1) return x.symbol > y.symbol ? 1 : -1;\n        else if (sortType.current === 1) return x.symbol < y.symbol ? 1 : -1;\n        else if (sortType.current === -2) return x.last > y.last ? 1 : -1;\n        else if (sortType.current === 2) return x.last < y.last ? 1 : -1;\n        else if (sortType.current === -3) return x.blast > y.blast ? 1 : -1;\n        else if (sortType.current === 3) return x.blast < y.blast ? 1 : -1;\n        else if (sortType.current === -4) {\n          if (x.per1 !== undefined && y.per1 !== undefined) {\n            return x.per1 > y.per1 ? 1 : -1;\n          } else {\n            if (x.per1 === undefined) {\n              return -1;\n            } else if (y.per1 === undefined) {\n              return 1;\n            }\n          }\n        } else if (sortType.current === 4) {\n          if (x.per1 !== undefined && y.per1 !== undefined) {\n            return x.per1 < y.per1 ? 1 : -1;\n          } else {\n            if (x.per1 === undefined) {\n              return 1;\n            } else if (y.per1 === undefined) {\n              return -1;\n            }\n          }\n        }\n      });\n      dispatch(\n        loadUpbitBitKrw({\n          BTC: info.filter((ticker) => ticker.symbol === \"BTC\")[0]?.last || 0,\n        })\n      );\n      dispatch(\n        loadBithumbBitkrw({\n          BTC: info.filter((ticker) => ticker.symbol === \"BTC\")[0]?.thumb || 0,\n        })\n      );\n      dispatch(\n        loadBinanceBitUsdt({\n          BTC: info.filter((ticker) => ticker.symbol === \"BTC\")[0]?.blast || 0,\n        })\n      );\n      if (loading === true) setLoading(false);\n      if (isFirstLoading === false) setIsFirstLoading(true);\n      setUpbitCoinInfo(info);\n      if (!timer.current) {\n        timer.current = setTimeout(() => {\n          timer.current = null;\n          getExchangeTickers();\n        }, 2000);\n      }\n    }\n  }, [loading, isFirstLoading, dispatch, sortType]);\n\n  useLayoutEffect(() => {\n    if (timer.current === null) getExchangeTickers();\n    return () => {\n      //clearTimeout(timer.current);\n    };\n  }, [getExchangeTickers, upbitBitKrw, coinList, info]);\n  const onSort = useCallback(\n    (coinInfo) => (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType.current === 1) {\n          coinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          sortType.current = -1;\n          //setSortType(-1);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          sortType.current = 1;\n          //setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType.current === 2) {\n          coinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          sortType.current = -2;\n          //setSortType(-2);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          sortType.current = 2;\n          //setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType.current === 3) {\n          coinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          sortType.current = -3;\n          //setSortType(-3);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          sortType.current = 3;\n          //setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType.current === 4) {\n          coinInfo.sort((x, y) => {\n            if (x.per1 !== undefined && y.per1 !== undefined) {\n              return x.per1 > y.per1 ? 1 : -1;\n            } else {\n              if (x.per1 === undefined) {\n                return -1;\n              } else if (y.per1 === undefined) {\n                return 1;\n              } else {\n                return -1;\n              }\n            }\n          });\n          sortType.current = -4;\n        } else {\n          coinInfo.sort((x, y) => {\n            if (x.per1 !== undefined && y.per1 !== undefined) {\n              return x.per1 < y.per1 ? 1 : -1;\n            } else {\n              if (x.per1 === undefined) {\n                return 1;\n              } else if (y.per1 === undefined) {\n                return -1;\n              } else {\n                return -1;\n              }\n            }\n          });\n          sortType.current = 4;\n          //setSortType(4);\n        }\n      }\n    },\n    [sortType]\n  );\n  return (\n    <main>\n      <ExchangesContainer>\n        <ExchangeItem>Upbit</ExchangeItem>\n        <ExchangeItem>Binance</ExchangeItem>\n        <ExchangeItem>Bithumb</ExchangeItem>\n      </ExchangesContainer>\n      <SettingBar coinInfo={upbitCoinInfo} upbitBitKrw={upbitBitKrw} />\n      <CurrentExchangeBar />\n      <ExchangesWrapper>\n        <CoinHeadContainer>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={1}>\n            코인\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={2}>\n            업비트(₩)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={3}>\n            바이낸스(BTC)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={4}>\n            차이(%)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={5}>\n            빗썸(₩)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={6}>\n            차이(%)\n          </Coin>\n        </CoinHeadContainer>\n        <ExchangeCoinsContainer>\n          {upbitCoinInfo\n            ?.filter((ticker) => ticker.symbol !== \"BTC\")\n            .map((v) => {\n              const convertedBinance = parseFloat(\n                (v.blast * upbitBitKrw).toFixed(2),\n                10\n              );\n              const percentUP = getPercent(v.last, convertedBinance).toFixed(2);\n              const percentBit = getPercent(v.thumb, convertedBinance).toFixed(\n                2\n              );\n              return (\n                <CoinContainer key={v4()}>\n                  <Coin>{v.symbol}</Coin>\n                  <Coin\n                    head={percentUP === \"-100.00\"}\n                    data-type={percentUP === \"-100.00\" ? \"unlist\" : \"list\"}\n                  >\n                    {v.last}₩\n                  </Coin>\n                  <Coin up={percentUP > 0}>\n                    {v.blast && v.blast.toFixed(8)}\n                    {\"\\n\"}\n                    {convertedBinance}₩\n                  </Coin>\n                  <Coin head={percentUP === \"-100.00\"} up={percentUP > 0}>\n                    {percentUP !== \"Infinity\"\n                      ? percentUP === \"-100.00\"\n                        ? \"미 상장\"\n                        : `${percentUP}%`\n                      : \"로딩중\"}\n                  </Coin>\n                  <Coin\n                    head={percentBit === \"-100.00\"}\n                    data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                  >\n                    {v.thumb}₩\n                  </Coin>\n                  <Coin\n                    head={percentBit === \"-100.00\"}\n                    up={percentBit > 0}\n                    data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                  >\n                    {percentBit !== \"Infinity\"\n                      ? percentBit === \"-100.00\"\n                        ? \"미 상장\"\n                        : `${percentBit}%`\n                      : \"로딩중\"}\n                  </Coin>\n                </CoinContainer>\n              );\n            })}\n        </ExchangeCoinsContainer>\n        <NewListing />\n      </ExchangesWrapper>\n      <Loading isLoading={loading} />\n    </main>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React, { useEffect, useRef, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport ExchangeList from \"./components/ExchangeList\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCoinList, loadUsdToKrw } from \"./reducers/coin\";\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-bottom: 0;\n  margin-top: 0;\n  height: 20px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n  }\n`;\nconst Title = styled.p`\n  font-family: 800;\n`;\nconst App = () => {\n  const dispatch = useDispatch();\n  let timer = useRef(null);\n  const getCurrency = useCallback(() => {\n    dispatch(loadUsdToKrw());\n    if (!timer.current) {\n      timer.current = setTimeout(() => {\n        timer.current = null;\n        getCurrency();\n      }, 8000);\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(loadCoinList());\n    getCurrency();\n  }, []);\n  return (\n    <>\n      <Header>\n        <Title>CoinAT</Title>\n      </Header>\n      <ExchangeList />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nexport default combineReducers({\n  coin,\n  bot,\n});\n","import { v4 } from \"uuid\";\nimport { all, takeLatest, fork, put, call, throttle } from \"redux-saga/effects\";\nimport {\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n  COIN_LIST_FAILURE,\n  COIN_LIST_SUCCESS,\n  COIN_LIST_REQUEST,\n  UPBIT_BID_REQUEST,\n  UPBIT_ASK_REQUEST,\n  UPBIT_BID_FAILURE,\n  UPBIT_BID_SUCCESS,\n  UPBIT_ASK_SUCCESS,\n  UPBIT_ASK_FAILURE,\n  BINANCE_SETTING,\n  BINANCE_SETTING_SUCCESS,\n  BINANCE_SETTING_FAILURE,\n  UPBIT_SETTING,\n  UPBIT_SETTING_SUCCESS,\n  UPBIT_SETTING_FAILURE,\n  KEY_SETTING_REQUEST,\n  KEY_SETTING_SUCCESS,\n  KEY_SETTING_FAILURE,\n  TICKERS_REQUEST,\n  TICKERS_SUCCESS,\n  TICKERS_FAILUER,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\n\nfunction loadCurrencyAPI() {\n  return axios.get(`${API_URL}coin/currency`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n  //https://www.freeforexapi.com/api/live?pairs=USDKRW\n  //return axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\");\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield throttle(1000, CURRENCY_REQUEST, loadCurrency);\n}\n\n/*function loadBitUsdtAPI() {\n  return axios.get(\n    \"https://www.binance.com/api/v1/aggTrades?limit=1&symbol=BTCUSDT\"\n  );\n}\nfunction* loadBitUsdt() {\n  try {\n    const result = yield call(loadBitUsdtAPI);\n    yield put({\n      type: BINANCE_BITCOIN_USDT_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_BITCOIN_USDT_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitUsdt() {\n  yield takeLatest(BINANCE_BITCOIN_USDT_REQUEST, loadBitUsdt);\n}*/\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice/upbit`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${API_URL}coin/notice/binance`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nfunction coinListAPI() {\n  return axios.get(`${API_URL}coin`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* coinList() {\n  try {\n    const result = yield call(coinListAPI);\n    yield put({\n      type: COIN_LIST_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: COIN_LIST_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCoinList() {\n  yield takeLatest(COIN_LIST_REQUEST, coinList);\n}\n\nfunction upbitBidAPI(data) {\n  return axios.post(`${API_URL}trade/bid`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* upbitBid(action) {\n  try {\n    //console.log(action.payload);\n    const result = yield call(upbitBidAPI, action.payload);\n    yield put({\n      type: UPBIT_BID_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BID_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitBid() {\n  yield throttle(1200, UPBIT_BID_REQUEST, upbitBid);\n}\n\nfunction upbitAskAPI(data) {\n  return axios.post(`${API_URL}trade/ask`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* upbitAsk(action) {\n  try {\n    const result = yield call(upbitAskAPI, action.payload);\n    yield put({\n      type: UPBIT_ASK_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_ASK_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitAsk() {\n  yield throttle(1200, UPBIT_ASK_REQUEST, upbitAsk);\n}\n\nfunction setBinanceKeyAPI(data) {\n  return axios.post(\n    `${API_URL}trade/binance_key`,\n    {\n      api: data.binanceApi,\n      sec: data.binanceSec,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* setBinanceKey(action) {\n  try {\n    yield call(setBinanceKeyAPI, action.payload);\n    yield put({\n      type: BINANCE_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetBinanceKey() {\n  yield takeLatest(BINANCE_SETTING, setBinanceKey);\n}\n\nfunction setUpbitKeyAPI(data) {\n  return axios.post(\n    `${API_URL}trade/upbit_key`,\n    {\n      api: data.upbitApi,\n      sec: data.upbitSec,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* setUpbitKey(action) {\n  try {\n    yield call(setUpbitKeyAPI, action.payload);\n    yield put({\n      type: UPBIT_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetUpbitKey() {\n  yield takeLatest(UPBIT_SETTING, setUpbitKey);\n}\n\nfunction setKeyAPI(data) {\n  let uid = undefined;\n  if (data.type !== \"cancel\") {\n    uid = v4();\n    localStorage.setItem(\"uid\", uid);\n  } else {\n    uid = localStorage.getItem(\"uid\");\n    localStorage.removeItem(\"uid\");\n  }\n  return axios.post(\n    `${API_URL}trade/key`,\n    {\n      api1: data.upbitApi,\n      sec1: data.upbitSec,\n      api2: data.binanceApi,\n      sec2: data.binanceSec,\n      type: data.type,\n      uid,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* setKey(action) {\n  try {\n    yield call(setKeyAPI, action.payload);\n    yield put({\n      type: KEY_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: KEY_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetKey() {\n  yield takeLatest(KEY_SETTING_REQUEST, setKey);\n}\n\nfunction loadTickersAPI() {\n  return axios.get(`${API_URL}coin/tickers`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* loadTickers() {\n  try {\n    const result = yield call(loadTickersAPI);\n    yield put({\n      type: TICKERS_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: TICKERS_FAILUER,\n      error: e,\n    });\n  }\n}\nfunction* watchLoadTickers() {\n  yield throttle(1000, TICKERS_REQUEST, loadTickers);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchCurrency),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n    fork(watchCoinList),\n    fork(watchUpbitBid),\n    fork(watchUpbitAsk),\n    fork(watchSetBinanceKey),\n    fork(watchSetUpbitKey),\n    fork(watchSetKey),\n    fork(watchLoadTickers),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_FAILURE,\n  CANCEL_MESSAGE_REQUEST,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot`, data, {\n    withCredentials: true,\n  });\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\n\nfunction cancelMessageAPI(data) {\n  return axios.post(`${API_URL}bot/cancel`, data, {\n    withCredentials: true,\n  });\n}\nfunction* cancelMessage(action) {\n  try {\n    yield call(cancelMessageAPI, action.payload);\n    yield put({\n      type: CANCEL_MESSAGE_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CANCEL_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCancelMessage() {\n  yield takeLatest(CANCEL_MESSAGE_REQUEST, cancelMessage);\n}\n\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage), fork(watchCancelMessage)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n//import logger from \"redux-logger\";\nimport rootSaga from \"./sagas\";\nimport dotenv from \"dotenv\";\nimport { initSocket } from \"./socket\";\ndotenv.config();\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\ninitSocket();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}