{"version":3,"sources":["components/Loading.jsx","reducers/coin.js","components/CurrentExchangeBar.jsx","reducers/bot.js","components/ItemList.jsx","components/SettingTrade.jsx","components/SettingBar.jsx","components/NewListing.jsx","utills.js","socket.js","components/ExchangeList.jsx","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/index.js","index.js"],"names":["LoadingAni","keyframes","LoadingContainer","styled","div","LoadingBar","props","size","css","Loading","isLoading","loadCoinList","createAction","loadBithumbBitkrw","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","setKey","setBtc","upbitBid","upbitAsk","setTradeError","handleActions","state","action","produce","draft","btc","payload","coinInfo","length","tickers","coinList","map","coin","name","BTC","bithumbBitKrw","upbitBitKrw","isbitkrwLoading","isUsdToKrwLoading","usdToKrw","rate","toFixed","usdToKrwError","error","binanceBitUsdt","isbitusdtLoading","isUpbitNewListingLoading","filteredList","v","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","tradeError","upbitBitKrwError","binanceBitUsdtError","ExchangeContainer","section","Info","p","CurrentExchangeBar","dispatch","useDispatch","useSelector","convertUsdToKrw","useMemo","parseFloat","useEffect","converted","percent1","percent2","symbol","last","thumb","sendMessage","cancelMessage","isSending","ItemListDiv","ItemListUl","ul","ItemListLi","li","ItemSpan","span","ItemInput","input","React","memo","coins","onChangePercent","type","min","max","step","placeholder","onChange","data-name","ApiContainer","Input","SecretInput","SettingBtn","button","TradeSettingDiv","withComponent","TradeBtn","timer","useRef","coinSymbol","percent","amount","check","current","startTrade","onClickKey","useCallback","e","target","innerHTML","value","alert","onClickTrade","onChangeCoin","onChangeAmount","filter","blast","per","Math","abs","q","ref","onClick","SettingBarDiv","InputWrapper","SelectContainer","SelectBtn","wrapper","useState","setCoins","coinPer","setCoinPer","dataset","onSetting","Object","keys","onToggle","style","display","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","fontSize","NewListingDiv","hide","FontDiv","NewListingUl","NewListingli","selected","InfoContainer","UpbitInfoUl","UpbitInfoli","BinanceInfoUl","BinanceInfoli","NewListing","setSelected","isHide","setHide","container","onChangeSelect","id","parseInt","cur","checkSize","window","innerWidth","getNewListing","setTimeout","addEventListener","removeEventListener","faPlus","faMinus","data-id","key","v4","title","getPercent","x","y","coinTickers","socket","getCoinData","on","console","log","data","emit","disconnect","ExchangesWrapper","ExchangesContainer","ExchangeItem","ExchangeCoinsContainer","CoinHeadContainer","CoinContainer","Coin","head","up","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","info","sortType","getExchangeTickers","sort","undefined","per1","ticker","useLayoutEffect","onSort","convertedBinance","percentUP","percentBit","data-type","Header","header","Title","App","getCurrency","Boolean","location","hostname","match","combineReducers","bot","loadCurrency","watchCurrency","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","watchCoinList","watchUpbitBid","watchUpbitAsk","setBinanceKey","watchSetBinanceKey","setUpbitKey","watchSetUpbitKey","watchSetKey","loadTickers","watchLoadTickers","coinSaga","dotenv","config","API_URL","process","HEROKU_URL","loadCurrencyAPI","axios","get","headers","call","result","put","throttle","loadUpbitNewListingAPI","takeLatest","loadBinanceNewListingAPI","withCredentials","upbitNewCoinAPI","post","binanceNewCoinAPI","coinListAPI","upbitBidAPI","upbitAskAPI","setBinanceKeyAPI","api","sec","setUpbitKeyAPI","setKeyAPI","uid","localStorage","setItem","getItem","removeItem","api1","sec1","api2","sec2","loadTickersAPI","all","fork","watchSendMessage","watchCancelMessage","botSaga","sendMessageAPI","cancelMessageAPI","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","socketIO","connect","transports","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.aa9420fb.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\n\nexport const SETTING_BTC = \"SETTING_BTC\";\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\n\nexport const TICKERS_REQUEST = \"TICKERS_REQUEST\";\nexport const TICKERS_SUCCESS = \"TICKERS_SUCCESS\";\nexport const TICKERS_FAILUER = \"TICKERS_FAILURE\";\n\nexport const COIN_LIST_REQUEST = \"COIN_LIST_REQUEST\";\nexport const COIN_LIST_SUCCESS = \"COIN_LIST_SUCCESS\";\nexport const COIN_LIST_FAILURE = \"COIN_LIST_FAILURE\";\n\nexport const UPBIT_BITCOIN_KRW = \"UPBIT_BITCOIN_KRW\";\nexport const BITHUMB_BITCOIN_KRW = \"BITHUMB_BITCOIN_KRW\";\nexport const BINANCE_BITCOIN_USDT = \"BINANCE_BITCOIN_USDT\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\n/*export const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";*/\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const UPBIT_SETTING_SUCCESS = \"UPBIT_SETTING_SUCCESS\";\nexport const UPBIT_SETTING_FAILURE = \"UPBIT_SETTING_FAILURE\";\n\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\nexport const BINANCE_SETTING_SUCCESS = \"BINANCE_SETTING_SUCCESS\";\nexport const BINANCE_SETTING_FAILURE = \"BINANCE_SETTING_FAILURE\";\n\nexport const KEY_SETTING_REQUEST = \"KEY_SETTING_REQUEST\";\nexport const KEY_SETTING_SUCCESS = \"KEY_SETTING_SUCCESS\";\nexport const KEY_SETTING_FAILURE = \"KEY_SETTING_FAILURE\";\n\nexport const UPBIT_BID_REQUEST = \"UPBIT_BID_REQUEST\";\nexport const UPBIT_BID_SUCCESS = \"UPBIT_BID_SUCCESS\";\nexport const UPBIT_BID_FAILURE = \"UPBIT_BID_FAILURE\";\n\nexport const UPBIT_ASK_REQUEST = \"UPBIT_ASK_REQUEST\";\nexport const UPBIT_ASK_SUCCESS = \"UPBIT_ASK_SUCCESS\";\nexport const UPBIT_ASK_FAILURE = \"UPBIT_ASK_FAILURE\";\n\nexport const TRADE_ERROR_REQUEST = \"TRADE_ERROR_REQUEST\";\n\nexport const loadCoinInfo = createAction(COIN_INFO_REQUEST);\nexport const loadCoinList = createAction(COIN_LIST_REQUEST);\nexport const loadBithumbBitkrw = createAction(BITHUMB_BITCOIN_KRW);\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const loadTickers = createAction(TICKERS_REQUEST);\n\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\n\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\nexport const setKey = createAction(KEY_SETTING_REQUEST);\n\nexport const setBtc = createAction(SETTING_BTC);\n\nexport const upbitBid = createAction(UPBIT_BID_REQUEST);\nexport const upbitAsk = createAction(UPBIT_ASK_REQUEST);\n\nexport const setTradeError = createAction(TRADE_ERROR_REQUEST);\n\nconst initialState = {\n  tickers: [],\n  isbitkrwLoading: false,\n  bithumbBitKrw: 0.0,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: true,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: true,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  btc: {},\n  coinInfo: [],\n  coinList: [\n    \"ADA\",\n    \"ADX\",\n    \"ANKR\",\n    \"ARDR\",\n    \"ARK\",\n    \"ATOM\",\n    \"BAT\",\n    \"BCH\",\n    \"BTG\",\n    \"CVC\",\n    \"CHZ\",\n    \"DCR\",\n    \"ELF\",\n    \"ENJ\",\n    \"EOS\",\n    \"ETC\",\n    \"ETH\",\n    \"GAS\",\n    \"GNT\",\n    \"GRS\",\n    \"GTO\",\n    \"HBAR\",\n    \"ICX\",\n    \"IOST\",\n    \"IOTA\",\n    \"KMD\",\n    \"KNC\",\n    \"LOOM\",\n    \"LSK\",\n    \"LTC\",\n    \"MANA\",\n    \"MBL\",\n    \"MCO\",\n    \"MTL\",\n    \"NEO\",\n    \"OMG\",\n    \"ONG\",\n    \"ONT\",\n    \"OST\",\n    \"POLY\",\n    \"POWR\",\n    \"QKC\",\n    \"QTUM\",\n    \"REP\",\n    \"SC\",\n    \"SNT\",\n    \"STEEM\",\n    \"STORJ\",\n    \"STPT\",\n    \"STRAT\",\n    \"TFUEL\",\n    \"THETA\",\n    \"TRX\",\n    \"VET\",\n    \"WAVES\",\n    \"XEM\",\n    \"XLM\",\n    \"XRP\",\n    \"ZIL\",\n    \"ZRX\",\n  ],\n  tradeError: 0,\n};\nexport default handleActions(\n  {\n    [SETTING_BTC]: (state, action) =>\n      produce(state, (draft) => {\n        draft.btc = action.payload;\n      }),\n    [COIN_INFO_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        if (draft.coinInfo.length < action.payload.coinInfo.length)\n          draft.coinInfo = action.payload.coinInfo;\n      }),\n    [TICKERS_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [TICKERS_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tickers = action.payload;\n      }),\n    [TICKERS_FAILUER]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const coinList = action.payload.map((coin) => {\n          return coin.name;\n        });\n        draft.coinList = coinList;\n      }),\n    [COIN_LIST_FAILURE]: (state, action) => produce(state, (draft) => {}),\n    [BITHUMB_BITCOIN_KRW]: (state, action) =>\n      produce(state, (draft) => {\n        const { BTC } = action.payload;\n        draft.bithumbBitKrw = BTC;\n      }),\n    [UPBIT_BITCOIN_KRW]: (state, action) =>\n      produce(state, (draft) => {\n        const { BTC } = action.payload;\n        draft.upbitBitKrw = BTC;\n        draft.isbitkrwLoading = true;\n      }),\n\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = action.payload.rate.toFixed(3);\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT]: (state, action) =>\n      produce(state, (draft) => {\n        const { BTC } = action.payload;\n        draft.binanceBitUsdt = BTC;\n        draft.isbitusdtLoading = false;\n      }),\n    /*[BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),*/\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const { payload } = action;\n        //console.log(payload);\n        const filteredList = payload.map((v) => {\n          if (\n            moment(v.created_at).format(\"YYYY-MM-DD\") ===\n            moment().format(\"YYYY-MM-DD\")\n          )\n            return { new: true, notice: v };\n          else return { new: false, notice: v };\n        });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [UPBIT_SETTING_SUCCESS]: (state, action) => {},\n    [UPBIT_SETTING_FAILURE]: (state, action) => {},\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [BINANCE_SETTING_SUCCESS]: (state, action) => {},\n    [BINANCE_SETTING_FAILURE]: (state, action) => {},\n    [KEY_SETTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [KEY_SETTING_SUCCESS]: (state, action) => {},\n    [KEY_SETTING_FAILURE]: (state, action) => {},\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [UPBIT_BID_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BID_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_BID_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [UPBIT_ASK_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_ASK_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_ASK_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [TRADE_ERROR_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 0;\n      }),\n  },\n  initialState\n);\n","import React, { useEffect, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setBtc } from \"../reducers/coin\";\nconst ExchangeContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n  height: 35px;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 6vh;\n  }\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 1rem;\n  margin: 0;\n  padding: 4px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    word-break: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (max-width: 581px) {\n    font-size: 0.75rem;\n  }\n`;\nfunction CurrentExchangeBar() {\n  const dispatch = useDispatch();\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt, bithumbBitKrw } = useSelector(\n    (state) => state.coin\n  );\n  const convertUsdToKrw = useMemo(() => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  }, [binanceBitUsdt, usdToKrw]);\n  useEffect(() => {\n    const converted = convertUsdToKrw,\n      percent1 = (\n        ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw) / convertUsdToKrw) *\n        100\n      ).toFixed(2),\n      percent2 = (\n        ((parseFloat(bithumbBitKrw, 10) - convertUsdToKrw) / convertUsdToKrw) *\n        100\n      ).toFixed(2);\n    dispatch(\n      setBtc({\n        symbol: \"BTC\",\n        last: upbitBitKrw,\n        converted: parseFloat(converted, 10),\n        percent1: parseFloat(percent1, 10),\n        thumb: bithumbBitKrw,\n        percent2: parseFloat(percent2, 10),\n      })\n    );\n  }, [convertUsdToKrw, dispatch, upbitBitKrw, bithumbBitKrw]);\n  return (\n    <>\n      <ExchangeContainer>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw} BTC/KRW`}</Info>\n        <Info>{`차이: ${(\n          ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw) / convertUsdToKrw) *\n          100\n        ).toFixed(2)}%`}</Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\nexport const CANCEL_MESSAGE_REQUEST = \"CANCEL_MESSAGE_REQUEST\";\nexport const CANCEL_MESSAGE_SUCCESS = \"CANCEL_MESSAGE_SUCCESS\";\nexport const CANCEL_MESSAGE_FAILURE = \"CANCEL_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\nexport const cancelMessage = createAction(CANCEL_MESSAGE_REQUEST);\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [CANCEL_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nconst ItemListDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n`;\nconst ItemListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n  height: 200px;\n  padding: 0;\n  margin: 0;\n  background-color: white;\n  margin: 5px;\n  padding: 5px;\n  overflow-y: scroll;\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  /* Hide scrollbar for IE and Edge */\n  & {\n    -ms-overflow-style: none;\n  }\n`;\nconst ItemListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid #e3e3e3;\n  border-left: 0;\n  border-right: 0;\n  width: 100%;\n`;\nconst ItemSpan = styled.span`\n  font-size: 0.8rem;\n`;\nconst ItemInput = styled.input`\n  background-color: white;\n  border: 2px solid #e3e3e3;\n  width: 30%;\n  padding: 5px;\n`;\nfunction ItemList({ coins, onChangePercent }) {\n  return (\n    <ItemListDiv>\n      <ItemListUl>\n        <ItemListLi>\n          <ItemSpan>BTC</ItemSpan>\n          <ItemInput\n            type=\"number\"\n            min={0}\n            max={100}\n            step={0.1}\n            placeholder=\"N%\"\n            onChange={onChangePercent}\n            data-name={\"BTC\"}\n          />\n        </ItemListLi>\n        {coins &&\n          coins.map((coin) => {\n            return (\n              <ItemListLi>\n                <ItemSpan>{coin.symbol}</ItemSpan>\n                <ItemInput\n                  type=\"number\"\n                  min={0}\n                  max={100}\n                  step={0.1}\n                  placeholder=\"N%\"\n                  onChange={onChangePercent}\n                  data-name={coin.symbol}\n                />\n              </ItemListLi>\n            );\n          })}\n      </ItemListUl>\n    </ItemListDiv>\n  );\n}\nexport default React.memo(ItemList);\n","import React, { useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { upbitBid, upbitAsk, setTradeError, setKey } from \"../reducers/coin\";\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n  width: 100%;\n`;\nconst TradeSettingDiv = ApiContainer.withComponent(\"div\");\nconst TradeBtn = styled(SettingBtn.withComponent(\"button\"))`\n  border-radius: 10px;\n  width: 50%;\n`;\nfunction SettingTrade({ coinInfo }) {\n  const dispatch = useDispatch();\n  const timer = useRef(false);\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  const coinSymbol = useRef(\"\");\n  const percent = useRef(\"\");\n  const amount = useRef(0);\n  const check = useRef(null);\n  const {\n    upbitBitKrw,\n    tradeError,\n    upbitApi: api1,\n    upbitSec: sec1,\n    binanceApi: api2,\n    binanceSec: sec2,\n  } = useSelector((state) => state.coin);\n\n  useEffect(() => {\n    if (timer.current) {\n      if (tradeError === 0) {\n        startTrade();\n      } else {\n        timer.current = false;\n      }\n    }\n  });\n  const onClickKey = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          upbitApi.current.value === \"\" ||\n          upbitSec.current.value === \"\" ||\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API와 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setKey({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n            type: \"set\",\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setKey({\n            upbitApi: \"\",\n            upbitSec: \"\",\n            binanceApi: \"\",\n            binanceSec: \"\",\n            type: \"cancel\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const onClickTrade = useCallback((e) => {\n    setTradeError();\n    if (timer.current) {\n      timer.current = false;\n    } else {\n      if (\n        binanceApi.current.value === \"\" ||\n        binanceSec.current.value === \"\" ||\n        upbitApi.current.value === \"\" ||\n        upbitSec.current.value === \"\"\n      ) {\n        alert(\"API 와 Secret이 필요합니다\");\n      } else if (coinSymbol.current === \"\" || percent.current === \"\") {\n        alert(\"코인 & 차이(%) 설정이 필요합니다\");\n      } else {\n        timer.current = true;\n      }\n    }\n  }, []);\n  const onChangeCoin = useCallback((e) => {\n    const { target } = e;\n    coinSymbol.current = target.value;\n    //console.log(coinSymbol.current);\n  }, []);\n  const onChangePercent = useCallback((e) => {\n    const { target } = e;\n    percent.current = target.value;\n  }, []);\n  const onChangeAmount = useCallback((e) => {\n    const { target } = e;\n    amount.current = target.value;\n  }, []);\n  const startTrade = useCallback(() => {\n    const coin = coinInfo.filter((coin) => coin.symbol === coinSymbol.current);\n    const converted = (coin[0].blast * upbitBitKrw).toFixed(2);\n    const p = parseFloat(percent.current, 10);\n    const per = parseFloat(\n      (((coin[0].last - converted) / converted) * 100).toFixed(2),\n      10\n    );\n    if (Math.abs(per) >= p) {\n      if (per > 0) {\n        //console.log(\"업비트 매도, 바이낸스 매수\"); //ask  bid\n        dispatch(\n          upbitAsk({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      } else {\n        //console.log(\"업비트 매수, 바이낸스 매도\"); //bid ask\n        dispatch(\n          upbitBid({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      }\n      check.current = per;\n    }\n  }, [coinInfo, upbitBitKrw, dispatch]);\n  return (\n    <>\n      <ApiContainer>\n        <Input ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n        <SecretInput\n          ref={upbitSec}\n          type=\"password\"\n          placeholder=\"업비트 secret\"\n        />\n      </ApiContainer>\n      <ApiContainer>\n        <Input ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n        <SecretInput\n          ref={binanceSec}\n          type=\"password\"\n          placeholder=\"바이낸스 secret\"\n        />\n      </ApiContainer>\n      <SettingBtn onClick={onClickKey}>확인</SettingBtn>\n      <TradeSettingDiv>\n        <Input type=\"text\" placeholder=\"코인\" onChange={onChangeCoin} />\n        <Input\n          type=\"number\"\n          placeholder=\"차이%\"\n          min={0}\n          max={100}\n          step={0.1}\n          onChange={onChangePercent}\n        />\n        <Input\n          type=\"number\"\n          placeholder=\"코인 양\"\n          min={0}\n          step={0.1}\n          onChange={onChangeAmount}\n        />\n        <TradeBtn onClick={onClickTrade}>\n          {timer.current ? \"설정 취소\" : \"자전 설정\"}\n        </TradeBtn>\n      </TradeSettingDiv>\n    </>\n  );\n}\n\nexport default React.memo(SettingTrade);\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { sendMessage, cancelMessage } from \"../reducers/bot\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ItemList from \"./ItemList\";\nimport SettingTrade from \"./SettingTrade\";\nconst SettingBarDiv = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: -1px 1px 3px 0px #696969;\n  z-index: 10;\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n  width: 100%;\n`;\n\nfunction SettingBar({ coinInfo, upbitBitKrw }) {\n  const dispatch = useDispatch();\n  const wrapper = useRef();\n  const [coins, setCoins] = useState([]);\n  const [coinPer, setCoinPer] = useState({});\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  useEffect(() => {\n    if (coins.length === 0) {\n      setCoins(coinInfo);\n    }\n  }, [coinInfo, upbitBitKrw, coins]);\n  const onChangePercent = useCallback(\n    (e) => {\n      const {\n        target: { value, dataset },\n      } = e;\n      setCoinPer({\n        ...coinPer,\n        [dataset.name]: value,\n      });\n    },\n    [coinPer]\n  );\n\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      const percentsLength = Object.keys(coinPer).length;\n      if (percentsLength > 0) {\n        if (target.innerHTML === \"설정\") {\n          target.innerHTML = \"취소\";\n          dispatch(sendMessage({ coinPer }));\n        } else {\n          target.innerHTML = \"설정\";\n          dispatch(cancelMessage());\n        }\n      } else {\n        alert(\"최소 한개의 % 설정이 필요합니다\");\n      }\n    },\n    [coinPer, dispatch]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1.0rem\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <SettingTrade coinInfo={coinInfo} />\n        <ItemList coins={coins} onChangePercent={onChangePercent} />\n        <SelectContainer>\n          <SelectBtn onClick={onSetting}>설정</SelectBtn>\n        </SelectContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { v4 } from \"uuid\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { loadUpbitNewListing, loadBianceNewListing } from \"../reducers/coin\";\nconst NewListingDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: ${(props) => (props.hide ? \"auto\" : \"45vh\")};\n  background: #c4cfd8;\n  margin-top: 5px;\n  position: fixed;\n  right: 10px;\n  bottom: 0;\n  border-radius: 4px;\n  border: 3px solid #d4d2d270;\n  box-shadow: 2px 2px 6px 1px;\n  overflow: scroll;\n  @media (min-width: 1025px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"270px\")};\n    height: ${(props) => (props.hide ? \"auto\" : \"65vh\")};\n  }\n  @media (max-width: 1024px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"250px\")};\n  }\n  @media (max-width: 768px) {\n    width: ${(props) => (props.hide ? \"auto\" : \"200px\")};\n    opacity: ${(props) => (props.hide ? \"0.2\" : \"1.0\")};\n  }\n`;\nconst FontDiv = styled.div`\n  display: flex;\n  align-self: flex-start;\n  margin: 5px;\n  svg {\n    cursor: pointer;\n  }\n`;\nconst NewListingUl = styled.ul`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  padding: 0;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin: 0;\n  border-bottom: 3px solid #ffffff;\n  cursor: pointer;\n`;\nconst NewListingli = styled.li`\n  list-style: none;\n  flex: 1;\n  padding: 5px;\n  color: ${(props) => (props.selected ? \"black\" : \"#ffffff\")};\n  font-weight: ${(props) => (props.selected ? \"400\" : \"200\")};\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  word-break: keep-all;\n`;\nconst InfoContainer = styled.div`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  border-top: 1px solid #0404043b;\n`;\nconst UpbitInfoUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 2px;\n`;\nconst UpbitInfoli = styled.li`\n  list-style: none;\n  font-size: 0.8rem;\n  margin-bottom: 5px;\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\nconst BinanceInfoUl = UpbitInfoUl.withComponent(\"ul\");\nconst BinanceInfoli = styled(UpbitInfoli.withComponent(\"li\"))`\n  font-weight: ${(props) => (props.new ? \"600\" : \"300\")};\n`;\n\nfunction NewListing() {\n  const { upbitNewListing, binanceNewListing } = useSelector(\n    (state) => state.coin\n  );\n  const [selected, setSelected] = useState(0);\n  const [isHide, setHide] = useState(false);\n  const container = useRef();\n  const timer = useRef();\n  const dispatch = useDispatch();\n  const onChangeSelect = useCallback((e) => {\n    const {\n      target: {\n        dataset: { id },\n      },\n    } = e;\n    setSelected(parseInt(id, 10));\n  }, []);\n  const onToggle = useCallback(() => {\n    setHide((cur) => !cur);\n  }, []);\n  const checkSize = () => {\n    const innerWidth = window.innerWidth;\n    if (innerWidth <= 768) {\n      setHide(true);\n    }\n  };\n  const getNewListing = useCallback(() => {\n    if (!timer.current) {\n      dispatch(loadUpbitNewListing());\n      //dispatch(loadBianceNewListing());\n      setTimeout(() => {\n        timer.current = null;\n        getNewListing();\n      }, 10000);\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    checkSize();\n    getNewListing();\n    window.addEventListener(\"resize\", checkSize);\n    return () => {\n      window.removeEventListener(\"resize\", checkSize);\n    };\n  }, [getNewListing]);\n  return (\n    <NewListingDiv hide={isHide === true}>\n      <FontDiv>\n        {isHide ? (\n          <FontAwesomeIcon icon={faPlus} onClick={onToggle} />\n        ) : (\n          <FontAwesomeIcon icon={faMinus} onClick={onToggle} />\n        )}\n      </FontDiv>\n      <NewListingUl hide={isHide === true}>\n        <NewListingli\n          data-id={0}\n          onClick={onChangeSelect}\n          selected={selected === 0}\n        >\n          업비트 상장\n        </NewListingli>\n      </NewListingUl>\n      <InfoContainer ref={container} hide={isHide === true}>\n        {selected === 0 ? (\n          <UpbitInfoUl>\n            {upbitNewListing &&\n              upbitNewListing.map((notice) => {\n                return (\n                  <UpbitInfoli key={v4()}>{notice.notice.title}</UpbitInfoli>\n                );\n              })}\n          </UpbitInfoUl>\n        ) : (\n          <BinanceInfoUl>\n            {binanceNewListing &&\n              binanceNewListing.map((notice) => {\n                return <BinanceInfoli key={v4()}>{notice.title}</BinanceInfoli>;\n              })}\n          </BinanceInfoUl>\n        )}\n      </InfoContainer>\n    </NewListingDiv>\n  );\n}\nexport default NewListing;\n","export const getPercent = (x, y) => {\n  return ((x - y) / y) * 100;\n};\n","import socketIO from \"socket.io-client\";\nimport { v4 } from \"uuid\";\nexport let coinTickers = { tickers: [], id: -1 };\nexport let socket = null;\nexport const initSocket = () => {\n  socket = socketIO.connect(process.env.REACT_APP_API, {\n    transports: [\"websocket\"],\n  });\n  socket.emit(\"connect\");\n  getCoinData();\n};\nexport const getCoinData = () => {\n  if (socket !== null) {\n    socket.on(\"welcome\", () => {\n      console.log(\"welcome\");\n      socket.on(\"receive\", (data) => {\n        if (socket !== null) {\n          //console.log(data); //코인 데이터\n          coinTickers.tickers = data.length > 0 ? data : [];\n          coinTickers.id = v4();\n          socket.emit(\"send\");\n        }\n      });\n      socket.on(\"disconnected\", () => {\n        console.log(\"disconnected\");\n        socket.disconnect();\n        socket = null;\n      });\n    });\n  }\n};\n","import React, { useState, useLayoutEffect, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Loading from \"./Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadBithumbBitkrw,\n} from \"../reducers/coin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport NewListing from \"./NewListing\";\nimport { getPercent } from \"../utills\";\nimport { coinTickers } from \"../socket\";\nconst ExchangesWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nconst ExchangesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 5px;\n  border: 1px solid;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  font-size: 0.4rem;\n  @media (max-width: 768px) {\n    margin-top: 0px;\n    padding: 0px;\n  }\n`;\nconst ExchangeItem = styled.li`\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"black\" : \"black\")};\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 1025px) {\n    width: 65%;\n    padding: 4px;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n    padding: 2px;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0px;\n  }\n`;\nconst CoinHeadContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n  @media (min-width: 1025px) {\n    width: 65%;\n    padding-right: 4px;\n  }\n  @media (max-width: 1024px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n`;\nconst Coin = styled.p`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.85rem;\n  color: black;\n  margin-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  white-space: pre;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n  }\n  &:nth-child(2),\n  &:nth-child(5) {\n    color: ${(props) => (props.head === true ? \"black\" : \"#27ae60\")};\n    font-weight: ${(props) => (props.head === true ? \"800\" : \"600\")};\n  }\n  &:nth-child(3) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    font-weight: ${(props) =>\n      props.head === true ? \"800\" : props.up === true ? \"600\" : \"600\"};\n    p {\n      font-size: 0.85rem;\n      margin-bottom: 0;\n      margin-top: 0;\n      @media (max-width: 768px) {\n        font-size: 0.7rem;\n      }\n      @media (max-width: 425px) {\n        align-self: flex-start;\n      }\n    }\n  }\n  &:nth-child(4),\n  &:nth-child(6) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#ff2e18\"\n        : \"#0012ff\"};\n    border-radius: 10px;\n    background-color: ${(props) =>\n      props.head === true\n        ? \"white\"\n        : props.up === true\n        ? \"#ff747363\"\n        : \"#007fff47\"};\n    border-radius: 10px;\n  }\n`;\n\nfunction ExchangeList() {\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  //const [sortType, setSortType] = useState(-1);\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw } = useSelector((state) => state.coin);\n  const info = useRef([]);\n  const sortType = useRef(-1);\n  const timer = useRef(null);\n  const getExchangeTickers = useCallback(() => {\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    if (coinTickers && coinTickers.tickers) {\n      let info = [...coinTickers.tickers]?.sort((x, y) => {\n        if (sortType.current === -1) return x.symbol > y.symbol ? 1 : -1;\n        else if (sortType.current === 1) return x.symbol < y.symbol ? 1 : -1;\n        else if (sortType.current === -2) return x.last > y.last ? 1 : -1;\n        else if (sortType.current === 2) return x.last < y.last ? 1 : -1;\n        else if (sortType.current === -3) return x.blast > y.blast ? 1 : -1;\n        else if (sortType.current === 3) return x.blast < y.blast ? 1 : -1;\n        else if (sortType.current === -4) {\n          if (x.per1 !== undefined && y.per1 !== undefined) {\n            return x.per1 > y.per1 ? 1 : -1;\n          } else {\n            if (x.per1 === undefined) {\n              return -1;\n            } else if (y.per1 === undefined) {\n              return 1;\n            }\n          }\n        } else if (sortType.current === 4) {\n          if (x.per1 !== undefined && y.per1 !== undefined) {\n            return x.per1 < y.per1 ? 1 : -1;\n          } else {\n            if (x.per1 === undefined) {\n              return 1;\n            } else if (y.per1 === undefined) {\n              return -1;\n            }\n          }\n        }\n      });\n      dispatch(\n        loadUpbitBitKrw({\n          BTC: info.filter((ticker) => ticker.symbol === \"BTC\")[0]?.last || 0,\n        })\n      );\n      dispatch(\n        loadBithumbBitkrw({\n          BTC: info.filter((ticker) => ticker.symbol === \"BTC\")[0]?.thumb || 0,\n        })\n      );\n      dispatch(\n        loadBinanceBitUsdt({\n          BTC: info.filter((ticker) => ticker.symbol === \"BTC\")[0]?.blast || 0,\n        })\n      );\n      if (loading === true) setLoading(false);\n      if (isFirstLoading === false) setIsFirstLoading(true);\n      setUpbitCoinInfo(info);\n      if (!timer.current) {\n        timer.current = setTimeout(() => {\n          timer.current = null;\n          getExchangeTickers();\n        }, 2000);\n      }\n    }\n  }, [loading, isFirstLoading, dispatch, sortType]);\n\n  useLayoutEffect(() => {\n    if (timer.current === null) getExchangeTickers();\n    return () => {\n      //clearTimeout(timer.current);\n    };\n  }, [getExchangeTickers, upbitBitKrw, coinList, info]);\n  const onSort = useCallback(\n    (coinInfo) => (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType.current === 1) {\n          coinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          sortType.current = -1;\n          //setSortType(-1);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          sortType.current = 1;\n          //setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType.current === 2) {\n          coinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          sortType.current = -2;\n          //setSortType(-2);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          sortType.current = 2;\n          //setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType.current === 3) {\n          coinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          sortType.current = -3;\n          //setSortType(-3);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          sortType.current = 3;\n          //setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType.current === 4) {\n          coinInfo.sort((x, y) => {\n            if (x.per1 !== undefined && y.per1 !== undefined) {\n              return x.per1 > y.per1 ? 1 : -1;\n            } else {\n              if (x.per1 === undefined) {\n                return -1;\n              } else if (y.per1 === undefined) {\n                return 1;\n              } else {\n                return -1;\n              }\n            }\n          });\n          sortType.current = -4;\n        } else {\n          coinInfo.sort((x, y) => {\n            if (x.per1 !== undefined && y.per1 !== undefined) {\n              return x.per1 < y.per1 ? 1 : -1;\n            } else {\n              if (x.per1 === undefined) {\n                return 1;\n              } else if (y.per1 === undefined) {\n                return -1;\n              } else {\n                return -1;\n              }\n            }\n          });\n          sortType.current = 4;\n          //setSortType(4);\n        }\n      }\n    },\n    [sortType]\n  );\n  return (\n    <main>\n      <ExchangesContainer>\n        <ExchangeItem>Upbit</ExchangeItem>\n        <ExchangeItem>Binance</ExchangeItem>\n        <ExchangeItem>Bithumb</ExchangeItem>\n      </ExchangesContainer>\n      <SettingBar coinInfo={upbitCoinInfo} upbitBitKrw={upbitBitKrw} />\n      <CurrentExchangeBar />\n      <ExchangesWrapper>\n        <CoinHeadContainer>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={1}>\n            코인\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={2}>\n            업비트(₩)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={3}>\n            바이낸스(BTC)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={4}>\n            차이(%)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={5}>\n            빗썸(₩)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={6}>\n            차이(%)\n          </Coin>\n        </CoinHeadContainer>\n        <ExchangeCoinsContainer>\n          {upbitCoinInfo\n            ?.filter((ticker) => ticker.symbol !== \"BTC\")\n            .map((v) => {\n              const convertedBinance = parseFloat(\n                (v.blast * upbitBitKrw).toFixed(2),\n                10\n              );\n              const percentUP = getPercent(v.last, convertedBinance).toFixed(2);\n              const percentBit = getPercent(v.thumb, convertedBinance).toFixed(\n                2\n              );\n              return (\n                <CoinContainer key={v4()}>\n                  <Coin>{v.symbol}</Coin>\n                  <Coin\n                    head={percentUP === \"-100.00\"}\n                    data-type={percentUP === \"-100.00\" ? \"unlist\" : \"list\"}\n                  >\n                    {v.last}₩\n                  </Coin>\n                  <Coin up={percentUP > 0}>\n                    {v.blast && v.blast.toFixed(8)}\n                    {\"\\n\"}\n                    {convertedBinance}₩\n                  </Coin>\n                  <Coin head={percentUP === \"-100.00\"} up={percentUP > 0}>\n                    {percentUP !== \"Infinity\"\n                      ? percentUP === \"-100.00\"\n                        ? \"미 상장\"\n                        : `${percentUP}%`\n                      : \"로딩중\"}\n                  </Coin>\n                  <Coin\n                    head={percentBit === \"-100.00\"}\n                    data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                  >\n                    {v.thumb}₩\n                  </Coin>\n                  <Coin\n                    head={percentBit === \"-100.00\"}\n                    up={percentBit > 0}\n                    data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                  >\n                    {percentBit !== \"Infinity\"\n                      ? percentBit === \"-100.00\"\n                        ? \"미 상장\"\n                        : `${percentBit}%`\n                      : \"로딩중\"}\n                  </Coin>\n                </CoinContainer>\n              );\n            })}\n        </ExchangeCoinsContainer>\n        <NewListing />\n      </ExchangesWrapper>\n      <Loading isLoading={loading} />\n    </main>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React, { useEffect, useRef, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport ExchangeList from \"./components/ExchangeList\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCoinList, loadUsdToKrw } from \"./reducers/coin\";\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n  margin-bottom: 0;\n  margin-top: 0;\n  height: 20px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n  }\n`;\nconst Title = styled.p`\n  font-family: 800;\n`;\nconst App = () => {\n  const dispatch = useDispatch();\n  let timer = useRef(null);\n  const getCurrency = useCallback(() => {\n    dispatch(loadUsdToKrw());\n    if (!timer.current) {\n      timer.current = setTimeout(() => {\n        timer.current = null;\n        getCurrency();\n      }, 8000);\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(loadCoinList());\n    getCurrency();\n  }, []);\n  return (\n    <>\n      <Header>\n        <Title>CoinAT</Title>\n      </Header>\n      <ExchangeList />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nexport default combineReducers({\n  coin,\n  bot,\n});\n","import { v4 } from \"uuid\";\nimport { all, takeLatest, fork, put, call, throttle } from \"redux-saga/effects\";\nimport {\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n  COIN_LIST_FAILURE,\n  COIN_LIST_SUCCESS,\n  COIN_LIST_REQUEST,\n  UPBIT_BID_REQUEST,\n  UPBIT_ASK_REQUEST,\n  UPBIT_BID_FAILURE,\n  UPBIT_BID_SUCCESS,\n  UPBIT_ASK_SUCCESS,\n  UPBIT_ASK_FAILURE,\n  BINANCE_SETTING,\n  BINANCE_SETTING_SUCCESS,\n  BINANCE_SETTING_FAILURE,\n  UPBIT_SETTING,\n  UPBIT_SETTING_SUCCESS,\n  UPBIT_SETTING_FAILURE,\n  KEY_SETTING_REQUEST,\n  KEY_SETTING_SUCCESS,\n  KEY_SETTING_FAILURE,\n  TICKERS_REQUEST,\n  TICKERS_SUCCESS,\n  TICKERS_FAILUER,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = process.env.REACT_APP_API;\nconst HEROKU_URL = \"https://secure-waters-04189.herokuapp.com/\";\nfunction loadCurrencyAPI() {\n  return axios.get(`${HEROKU_URL}currency`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n  //https://www.freeforexapi.com/api/live?pairs=USDKRW\n  //return axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\");\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield throttle(1000, CURRENCY_REQUEST, loadCurrency);\n}\n\n/*function loadBitUsdtAPI() {\n  return axios.get(\n    \"https://www.binance.com/api/v1/aggTrades?limit=1&symbol=BTCUSDT\"\n  );\n}\nfunction* loadBitUsdt() {\n  try {\n    const result = yield call(loadBitUsdtAPI);\n    yield put({\n      type: BINANCE_BITCOIN_USDT_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_BITCOIN_USDT_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBitUsdt() {\n  yield takeLatest(BINANCE_BITCOIN_USDT_REQUEST, loadBitUsdt);\n}*/\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(`${HEROKU_URL}notice/upbit`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${HEROKU_URL}notice/binance`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nfunction coinListAPI() {\n  return axios.get(`${HEROKU_URL}coins`);\n}\nfunction* coinList() {\n  try {\n    const result = yield call(coinListAPI);\n    yield put({\n      type: COIN_LIST_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: COIN_LIST_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCoinList() {\n  yield takeLatest(COIN_LIST_REQUEST, coinList);\n}\n\nfunction upbitBidAPI(data) {\n  return axios.post(`${API_URL}trade/bid`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* upbitBid(action) {\n  try {\n    //console.log(action.payload);\n    const result = yield call(upbitBidAPI, action.payload);\n    yield put({\n      type: UPBIT_BID_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BID_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitBid() {\n  yield throttle(1200, UPBIT_BID_REQUEST, upbitBid);\n}\n\nfunction upbitAskAPI(data) {\n  return axios.post(`${API_URL}trade/ask`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* upbitAsk(action) {\n  try {\n    const result = yield call(upbitAskAPI, action.payload);\n    yield put({\n      type: UPBIT_ASK_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_ASK_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitAsk() {\n  yield throttle(1200, UPBIT_ASK_REQUEST, upbitAsk);\n}\n\nfunction setBinanceKeyAPI(data) {\n  return axios.post(\n    `${API_URL}trade/binance_key`,\n    {\n      api: data.binanceApi,\n      sec: data.binanceSec,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* setBinanceKey(action) {\n  try {\n    yield call(setBinanceKeyAPI, action.payload);\n    yield put({\n      type: BINANCE_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetBinanceKey() {\n  yield takeLatest(BINANCE_SETTING, setBinanceKey);\n}\n\nfunction setUpbitKeyAPI(data) {\n  return axios.post(\n    `${API_URL}trade/upbit_key`,\n    {\n      api: data.upbitApi,\n      sec: data.upbitSec,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* setUpbitKey(action) {\n  try {\n    yield call(setUpbitKeyAPI, action.payload);\n    yield put({\n      type: UPBIT_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetUpbitKey() {\n  yield takeLatest(UPBIT_SETTING, setUpbitKey);\n}\n\nfunction setKeyAPI(data) {\n  let uid = undefined;\n  if (data.type !== \"cancel\") {\n    uid = v4();\n    localStorage.setItem(\"uid\", uid);\n  } else {\n    uid = localStorage.getItem(\"uid\");\n    localStorage.removeItem(\"uid\");\n  }\n  return axios.post(\n    `${API_URL}trade/key`,\n    {\n      api1: data.upbitApi,\n      sec1: data.upbitSec,\n      api2: data.binanceApi,\n      sec2: data.binanceSec,\n      type: data.type,\n      uid,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* setKey(action) {\n  try {\n    yield call(setKeyAPI, action.payload);\n    yield put({\n      type: KEY_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: KEY_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetKey() {\n  yield takeLatest(KEY_SETTING_REQUEST, setKey);\n}\n\nfunction loadTickersAPI() {\n  return axios.get(`${API_URL}coin/tickers`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* loadTickers() {\n  try {\n    const result = yield call(loadTickersAPI);\n    yield put({\n      type: TICKERS_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: TICKERS_FAILUER,\n      error: e,\n    });\n  }\n}\nfunction* watchLoadTickers() {\n  yield throttle(1000, TICKERS_REQUEST, loadTickers);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchCurrency),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n    fork(watchCoinList),\n    fork(watchUpbitBid),\n    fork(watchUpbitAsk),\n    fork(watchSetBinanceKey),\n    fork(watchSetUpbitKey),\n    fork(watchSetKey),\n    fork(watchLoadTickers),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_FAILURE,\n  CANCEL_MESSAGE_REQUEST,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = \"https://secure-waters-04189.herokuapp.com/\";\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot/start`, data);\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\n\nfunction cancelMessageAPI(data) {\n  return axios.post(`${API_URL}bot/cancel`, data);\n}\nfunction* cancelMessage(action) {\n  try {\n    yield call(cancelMessageAPI, action.payload);\n    yield put({\n      type: CANCEL_MESSAGE_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CANCEL_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCancelMessage() {\n  yield takeLatest(CANCEL_MESSAGE_REQUEST, cancelMessage);\n}\n\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage), fork(watchCancelMessage)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n//import logger from \"redux-logger\";\nimport rootSaga from \"./sagas\";\nimport dotenv from \"dotenv\";\nimport { initSocket } from \"./socket\";\ndotenv.config();\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\ninitSocket();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}