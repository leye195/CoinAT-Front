{"version":3,"sources":["utills/utills.js","reducers/coin.js","styles/_variables.js","components/Footer.jsx","components/Header.jsx","components/Layout.jsx","components/Event/EventContainer.jsx","components/Event/EventSidebar.jsx","styles/_mixin.js","components/Event/NoticeItem.jsx","components/Event/NoticeTable.jsx","components/Loading.jsx","components/Event/LoadMore.jsx","reducers/notice.js","pages/Event.jsx","components/Home/CurrentExchangeBar.jsx","components/ItemList.jsx","components/SettingTrade.jsx","reducers/bot.js","components/Home/SettingBar.jsx","components/Home/ExchangeList.jsx","pages/Home.jsx","Routes.js","App.js","serviceWorker.js","reducers/index.js","sagas/coin.js","sagas/bot.js","sagas/notice.js","sagas/index.js","index.js"],"names":["upbitBTCKrw","wsBinance","wsUpbit","wsBithumb","tickers1","tickers2","tickers3","coinTickers","tickers","id","getPercent","x","y","upbitWS","coinList","a","axios","get","upbitList","data","filter","coin","market","includes","slice","WebSocket","binaryType","onopen","console","log","readyState","ticket","type","codes","map","send","JSON","stringify","onmessage","e","enc","TextDecoder","arr","Uint8Array","parse","decode","code","trade_price","symbol","indexOf","length","onclose","close","setTimeout","onerror","binanceWS","streams","i","toLowerCase","s","c","parseFloat","bithumbWS","bithumbList","bithumb","symbols","name","tickTypes","info","content","closePrice","loadCoinList","createAction","loadBithumbBitkrw","loadUpbitBitKrw","loadUsdToKrw","loadBinanceBitUsdt","loadUpbitNewListing","setKey","setBtc","upbitBid","upbitAsk","setTradeError","handleActions","state","action","produce","draft","btc","payload","coinInfo","coinNames","getList","BTC","bithumbBitKrw","upbitBitKrw","isbitkrwLoading","isUsdToKrwLoading","usdToKrw","rate","toFixed","usdToKrwError","error","binanceBitUsdt","isbitusdtLoading","isUpbitNewListingLoading","filteredList","v","moment","created_at","format","new","notice","upbitNewListing","isBinanceNewListingLoading","binanceNewListing","upbitApi","upbitSec","binanceApi","binanceSec","dratf","tradeError","upbitBitKrwError","binanceBitUsdtError","breakpoints","xs","sm","md","lg","colors","Container","styled","footer","Footer","header","Title","p","Header","title","to","Layout","children","div","EventContainer","Section","section","Aside","aside","MenuListContainer","MenuList","ul","Menu","li","isActive","EventSideBar","location","useLocation","match","qs","search","activeClassName","Object","keys","reduce","accumulator","label","css","breakDown","TableRow","tr","TableCell","td","NoticeTitle","NoticeDate","NoticeItem","updatedAt","Table","table","TableHead","thead","TableBody","tbody","TableHeadCell","th","NoticeTable","items","item","idx","key","LoadingAni","keyframes","LoadingContainer","LoadingBar","props","size","Loading","isLoading","Button","button","LoadMore","React","forwardRef","ref","isMore","handleLoadMore","onClick","disabled","loadNotice","notices","more","page","convertTitle","NoticeSection","NoticeArticle","article","NoticeHeader","LoadMoreContainer","Event","useState","setType","currentPage","setCurrentPage","history","useHistory","dispatch","useDispatch","useSelector","useEffect","replace","ExchangeContainer","isFixed","Info","CurrentExchangeBar","nav","differene","setDifference","usdtRate","setUsdtRate","convertUsdToKrw","useMemo","converted","percent1","percent2","difference","last","thumb","ItemListDiv","ItemListUl","ItemListLi","ItemSpan","span","ItemInput","input","memo","coins","onChangePercent","min","max","step","placeholder","onChange","data-name","ApiContainer","Input","SecretInput","SettingBtn","TradeSettingDiv","withComponent","TradeBtn","timer","useRef","coinSymbol","percent","amount","check","current","startTrade","onClickKey","useCallback","target","innerHTML","value","alert","onClickTrade","onChangeCoin","onChangeAmount","blast","per","Math","abs","q","sendMessage","cancelMessage","isSending","SettingBarDiv","InputWrapper","SelectContainer","SelectBtn","wrapper","setCoins","coinPer","setCoinPer","dataset","onSetting","onToggle","style","display","icon","faCog","alignSelf","marginLeft","marginRight","marginTop","cursor","fontSize","main","ExchangesWrapper","offsetHeight","ExchangeCoinsContainer","CoinHeadContainer","CoinContainer","CoinImage","img","Coin","head","up","upbitCoinInfo","setUpbitCoinInfo","isFirstLoading","setIsFirstLoading","loading","setLoading","setIsFixed","navTop","setNavTop","sortType","getExchangeTickers","currency","undefined","convertedBlast","per1","per2","v4","combineTickers","sort","ticker","navFix","window","scrollY","offsetTop","addEventListener","removeEventListener","useLayoutEffect","onSort","parseInt","data-id","convertedBinance","percentUP","percentBit","src","data-type","isNaN","Home","path","exact","component","App","getCurrency","Routes","Boolean","hostname","combineReducers","bot","loadCurrency","watchCurrency","watchUpbitNewListing","loadBinanceNewListing","watchBinanceNewListing","upbitNewCoin","watchUpbitNewCoin","binanceNewCoin","watchBinanceNewCoin","watchCoinList","watchUpbitBid","watchUpbitAsk","setBinanceKey","watchSetBinanceKey","setUpbitKey","watchSetUpbitKey","watchSetKey","loadTickers","watchLoadTickers","coinSaga","API_URL","process","HEROKU_URL","loadCurrencyAPI","headers","call","result","put","throttle","loadUpbitNewListingAPI","takeLatest","loadBinanceNewListingAPI","withCredentials","upbitNewCoinAPI","post","binanceNewCoinAPI","coinListAPI","upbitBidAPI","upbitAskAPI","setBinanceKeyAPI","api","sec","setUpbitKeyAPI","setKeyAPI","uid","localStorage","setItem","getItem","removeItem","api1","sec1","api2","sec2","loadTickersAPI","all","fork","watchSendMessage","watchCancelMessage","botSaga","dotenv","config","sendMessageAPI","cancelMessageAPI","loadNotices","watchLoadNotice","loadNoticesAPI","params","posts","text","start_date","totalPage","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.de135a8d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { v4 } from \"uuid\";\n\nlet binanceBTC = 0;\nlet thumbBTCKrw = 0;\nlet upbitBTCKrw = 0;\nlet wsBinance = null;\nlet wsUpbit = null;\nlet wsBithumb = null;\nlet tickers1 = {};\nlet tickers2 = {};\nlet tickers3 = {};\nexport let coinTickers = { tickers: [], id: -1 };\n\nexport const getPercent = (x, y) => {\n  return ((x - y) / y) * 100;\n};\n\nexport const getList = (coinList) => {\n  if (coinList.length > 0) {\n    const coinNames = coinList.map((coin) => coin.name);\n    //console.log(\"connedted\");\n    if (wsUpbit === null) upbitWS(coinNames);\n    if (wsBinance === null) binanceWS(coinNames);\n    if (wsBithumb === null) bithumbWS(coinList);\n  }\n};\n//업비트 소켓 연결\nconst upbitWS = async (coinList) => {\n  if (wsUpbit === null) {\n    const upbitList = (\n      await axios.get(\"https://api.upbit.com/v1/market/all\")\n    ).data.filter(\n      (coin) =>\n        coin.market.includes(\"KRW\") && coinList.includes(coin.market.slice(4))\n    );\n    wsUpbit = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n    wsUpbit.binaryType = \"arraybuffer\";\n    wsUpbit.onopen = () => {\n      console.log(\"u connected\");\n      if (wsUpbit !== null && wsUpbit.readyState === 1) {\n        const data = [\n          { ticket: \"test\" },\n          {\n            type: \"ticker\",\n            codes: [\"KRW-BTC\", ...upbitList.map((coin) => `${coin.market}`)],\n          },\n        ];\n        wsUpbit.send(JSON.stringify(data));\n      }\n    };\n    wsUpbit.onmessage = (e) => {\n      //if (wsUpbit !== null && wsUpbit.readyState === 1) {\n      const enc = new TextDecoder(\"utf-8\");\n      const arr = new Uint8Array(e.data);\n      const { code, trade_price } = JSON.parse(enc.decode(arr));\n      const symbol = code.slice(code.indexOf(\"-\") + 1, code.length);\n      if (symbol === \"BTC\") upbitBTCKrw = trade_price;\n      tickers1[symbol] = trade_price;\n    };\n    wsUpbit.onclose = () => {\n      if (wsUpbit !== null) {\n        wsUpbit.close();\n        wsUpbit = null;\n        console.log(\"u disconnected\");\n        setTimeout(() => {\n          upbitWS(coinList);\n        }, 5000);\n      }\n    };\n    wsUpbit.onerror = (e) => {\n      console.log(e);\n    };\n  }\n};\n//바이낸스 소켓 연결\nconst binanceWS = async (coinList) => {\n  if (wsBinance === null) {\n    let streams = \"\";\n    for (let i = 0; i < coinList.length; i++) {\n      if (i < coinList.length - 1) {\n        streams += `${coinList[i].toLowerCase()}btc@ticker/`;\n      } else streams += `${coinList[i].toLowerCase()}btc@ticker/`;\n    }\n    streams += `btcusdt@ticker`;\n    wsBinance = new WebSocket(\n      `wss://stream.binance.com:9443/stream?streams=${streams}` //ethbtc@ticker\" //\"\n    );\n    wsBinance.onopen = () => {\n      if (wsBinance !== null && wsBinance.readyState === 1) {\n        console.log(\"b connected\");\n      }\n    };\n    wsBinance.onmessage = (e) => {\n      if (wsBinance.readyState === 1) {\n        const {\n          data: { s, c },\n        } = JSON.parse(e.data);\n        //console.log(e.data);\n        const symbol = s.slice(0, s.length - 3);\n        if (symbol === \"BTCU\") {\n          binanceBTC = parseFloat(c);\n          tickers2[s.slice(0, s.length - 4)] = parseFloat(c);\n        } else {\n          tickers2[symbol] = parseFloat(c);\n        }\n      }\n    };\n    wsBinance.onclose = () => {\n      if (wsBinance !== null) {\n        wsBinance.close();\n        wsBinance = null;\n        console.log(\"b disconnected\");\n        setTimeout(() => {\n          binanceWS(coinList);\n        }, 5000);\n      }\n    };\n    wsBinance.onerror = (e) => {\n      console.log(e);\n    };\n  }\n};\n\n//빗썸 소켓 연결\nconst bithumbWS = async (coinList) => {\n  if (wsBithumb === null) {\n    wsBithumb = new WebSocket(`wss://pubwss.bithumb.com/pub/ws`);\n    wsBithumb.onopen = async () => {\n      const bithumbList = coinList.filter((coin) => coin.bithumb);\n      if (wsBithumb !== null && wsBithumb.readyState === 1) {\n        console.log(\"t connected\");\n        const data = {\n          type: \"ticker\",\n          symbols: [\n            \"BTC_KRW\",\n            ...bithumbList.map((coin) => `${coin.name}_KRW`),\n          ],\n          tickTypes: [\"30M\", \"1H\"],\n        };\n        wsBithumb.send(JSON.stringify(data));\n      }\n    };\n    wsBithumb.onmessage = (e) => {\n      const { data } = e;\n      if (data) {\n        const info = JSON.parse(data);\n        if (info.content) {\n          const symbol = info.content.symbol.slice(\n            0,\n            info.content.symbol.length - 4\n          );\n          tickers3[symbol] = parseFloat(info.content.closePrice);\n          if (symbol === \"BTC\")\n            thumbBTCKrw = parseFloat(info.content.closePrice);\n        }\n      }\n    };\n    wsBithumb.onclose = () => {\n      if (wsBithumb !== null) {\n        wsBithumb.close();\n        wsBithumb = null;\n        console.log(\"t disconnected\");\n        setTimeout(() => {\n          bithumbWS(coinList);\n        }, 5000);\n      }\n    };\n    wsBithumb.onerror = (e) => {\n      console.log(e);\n    };\n  }\n};\n\nexport const combineTickers = (currency, coinList) => {\n  const tickers = [\"BTC\", ...coinList].map((v) => {\n    return {\n      symbol: v, //tickers1[`${v}/KRW`].symbol.slice(0, tickers1[v].symbol.indexOf(\"/\")),\n      last: tickers1[`${v}`] === undefined ? 0 : tickers1[`${v}`],\n      blast: tickers2[`${v}`] === undefined ? 0 : tickers2[`${v}`],\n      convertedBlast:\n        tickers2[`${v}`] === undefined\n          ? 0\n          : parseFloat((tickers2[`${v}`] * upbitBTCKrw).toFixed(2), 10),\n      thumb: tickers3[`${v}`] === undefined ? 0 : tickers3[`${v}`],\n      per1:\n        tickers1[`${v}`] === undefined || tickers2[`${v}`] === undefined\n          ? undefined\n          : getPercent(\n              tickers1[`${v}`],\n              parseFloat((tickers2[`${v}`] * upbitBTCKrw).toFixed(2), 10)\n            ),\n      per2:\n        tickers3[`${v}`] === undefined || tickers2[`${v}`] === undefined\n          ? undefined\n          : getPercent(\n              tickers3[`${v}`],\n              parseFloat((tickers2[`${v}`] * upbitBTCKrw).toFixed(2), 10)\n            ),\n    };\n  });\n  coinTickers.tickers = tickers.length > 0 ? tickers : [];\n  coinTickers.id = v4();\n  return coinTickers;\n};\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport moment from \"moment\";\nimport { getList } from \"../utills/utills\";\n\nexport const SETTING_BTC = \"SETTING_BTC\";\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\n\nexport const TICKERS_REQUEST = \"TICKERS_REQUEST\";\nexport const TICKERS_SUCCESS = \"TICKERS_SUCCESS\";\nexport const TICKERS_FAILUER = \"TICKERS_FAILURE\";\n\nexport const COIN_LIST_REQUEST = \"COIN_LIST_REQUEST\";\nexport const COIN_LIST_SUCCESS = \"COIN_LIST_SUCCESS\";\nexport const COIN_LIST_FAILURE = \"COIN_LIST_FAILURE\";\n\nexport const UPBIT_BITCOIN_KRW = \"UPBIT_BITCOIN_KRW\";\nexport const BITHUMB_BITCOIN_KRW = \"BITHUMB_BITCOIN_KRW\";\nexport const BINANCE_BITCOIN_USDT = \"BINANCE_BITCOIN_USDT\";\n\nexport const CURRENCY_REQUEST = \"CURRENCY_REQUEST\";\nexport const CURRENCY_SUCCESS = \"CURRENCY_SUCCESS\";\nexport const CURRENCY_FAILURE = \"CURRENCY_FAILURE\";\n\n/*export const BINANCE_BITCOIN_USDT_REQUEST = \"BINANCE_BITCOIN_USDT_REQUEST\";\nexport const BINANCE_BITCOIN_USDT_SUCCESS = \"BINANCE_BITCOIN_USDT_SUCCESS\";\nexport const BINANCE_BITCOIN_USDT_FAILURE = \"BINANCE_BITCOIN_USDT_FAILURE\";*/\n\nexport const UPBIT_BTC_NEWLISTING_REQUEST = \"UPBIT_BTC_NEWLISTING_REQUEST\";\nexport const UPBIT_BTC_NEWLISTING_SUCCESS = \"UPBIT_BTC_NEWLISTING_SUCCESS\";\nexport const UPBIT_BTC_NEWLISTING_FAILURE = \"UPBIT_BTC_NEWLISTING_FAILURE\";\n\nexport const BINANCE_NEWLISTING_REQUEST = \"BINANCE_NEWLISTING_REQUEST\";\nexport const BINANCE_NEWLISTING_SUCCESS = \"BINANCE_NEWLISTING_SUCCESS\";\nexport const BINANCE_NEWLISTING_FAILURE = \"BINANCE_NEWLISTING_FAILURE\";\n\nexport const UPBIT_CHECK_COIN_REQUEST = \"UPBIT_CHECK_COIN_REQUEST\";\nexport const UPBIT_CHECK_COIN_SUCCESS = \"UPBIT_CHECK_COIN_SUCCESS\";\nexport const UPBIT_CHECK_COIN_FAILURE = \"UPBIT_CHECK_COIN_FAILURE\";\n\nexport const BINANCE_CHECK_COIN_REQUEST = \"BINANCE_CHECK_COIN_REQUEST\";\nexport const BINANCE_CHECK_COIN_SUCCESS = \"BINANCE_CHECK_COIN_SUCCESS\";\nexport const BINANCE_CHECK_COIN_FAILURE = \"BINANCE_CHECK_COIN_FAILURE\";\n\nexport const UPBIT_SETTING = \"UPBIT_SETTING\";\nexport const UPBIT_SETTING_SUCCESS = \"UPBIT_SETTING_SUCCESS\";\nexport const UPBIT_SETTING_FAILURE = \"UPBIT_SETTING_FAILURE\";\n\nexport const BINANCE_SETTING = \"BINANCE_SETTING\";\nexport const BINANCE_SETTING_SUCCESS = \"BINANCE_SETTING_SUCCESS\";\nexport const BINANCE_SETTING_FAILURE = \"BINANCE_SETTING_FAILURE\";\n\nexport const KEY_SETTING_REQUEST = \"KEY_SETTING_REQUEST\";\nexport const KEY_SETTING_SUCCESS = \"KEY_SETTING_SUCCESS\";\nexport const KEY_SETTING_FAILURE = \"KEY_SETTING_FAILURE\";\n\nexport const UPBIT_BID_REQUEST = \"UPBIT_BID_REQUEST\";\nexport const UPBIT_BID_SUCCESS = \"UPBIT_BID_SUCCESS\";\nexport const UPBIT_BID_FAILURE = \"UPBIT_BID_FAILURE\";\n\nexport const UPBIT_ASK_REQUEST = \"UPBIT_ASK_REQUEST\";\nexport const UPBIT_ASK_SUCCESS = \"UPBIT_ASK_SUCCESS\";\nexport const UPBIT_ASK_FAILURE = \"UPBIT_ASK_FAILURE\";\n\nexport const TRADE_ERROR_REQUEST = \"TRADE_ERROR_REQUEST\";\n\nexport const loadCoinInfo = createAction(COIN_INFO_REQUEST);\nexport const loadCoinList = createAction(COIN_LIST_REQUEST);\nexport const loadBithumbBitkrw = createAction(BITHUMB_BITCOIN_KRW);\nexport const loadUpbitBitKrw = createAction(UPBIT_BITCOIN_KRW);\nexport const loadUsdToKrw = createAction(CURRENCY_REQUEST);\nexport const loadBinanceBitUsdt = createAction(BINANCE_BITCOIN_USDT);\nexport const loadUpbitNewListing = createAction(UPBIT_BTC_NEWLISTING_REQUEST);\nexport const loadBianceNewListing = createAction(BINANCE_NEWLISTING_REQUEST);\nexport const loadTickers = createAction(TICKERS_REQUEST);\n\nexport const checkUpbitCoin = createAction(UPBIT_CHECK_COIN_REQUEST);\nexport const checkBinanceCoin = createAction(BINANCE_CHECK_COIN_REQUEST);\n\nexport const setUpbit = createAction(UPBIT_SETTING);\nexport const setBinance = createAction(BINANCE_SETTING);\nexport const setKey = createAction(KEY_SETTING_REQUEST);\n\nexport const setBtc = createAction(SETTING_BTC);\n\nexport const upbitBid = createAction(UPBIT_BID_REQUEST);\nexport const upbitAsk = createAction(UPBIT_ASK_REQUEST);\n\nexport const setTradeError = createAction(TRADE_ERROR_REQUEST);\n\nconst initialState = {\n  tickers: [],\n  isbitkrwLoading: false,\n  bithumbBitKrw: 0.0,\n  upbitBitKrw: 0.0,\n  upbitBitKrwError: \"\",\n  isUsdToKrwLoading: true,\n  usdToKrw: 0.0,\n  usdToKrwError: \"\",\n  isbitusdtLoading: true,\n  binanceBitUsdt: 0.0,\n  binanceBitUsdtError: \"\",\n  isUpbitNewListingLoading: false,\n  upbitNewListing: [],\n  isBinanceNewListingLoading: false,\n  binanceNewListing: [],\n  upbitApi: \"\",\n  upbitSec: \"\",\n  binanceApi: \"\",\n  binanceSec: \"\",\n  btc: {},\n  coinInfo: [],\n  coinList: [],\n  tradeError: 0,\n};\nexport default handleActions(\n  {\n    [SETTING_BTC]: (state, action) =>\n      produce(state, (draft) => {\n        draft.btc = action.payload;\n      }),\n    [COIN_INFO_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        if (draft.coinInfo.length < action.payload.coinInfo.length)\n          draft.coinInfo = action.payload.coinInfo;\n      }),\n    [TICKERS_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [TICKERS_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tickers = action.payload;\n      }),\n    [TICKERS_FAILUER]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [COIN_LIST_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const coinNames = action.payload.map((coin) => {\n          return coin.name;\n        });\n        const coinList = action.payload.map((coin) => {\n          return coin;\n        });\n        getList(coinList);\n        draft.coinList = coinNames;\n      }),\n    [COIN_LIST_FAILURE]: (state, action) => produce(state, (draft) => {}),\n    [BITHUMB_BITCOIN_KRW]: (state, action) =>\n      produce(state, (draft) => {\n        const { BTC } = action.payload;\n        draft.bithumbBitKrw = BTC;\n      }),\n    [UPBIT_BITCOIN_KRW]: (state, action) =>\n      produce(state, (draft) => {\n        const { BTC } = action.payload;\n        draft.upbitBitKrw = BTC;\n        draft.isbitkrwLoading = true;\n      }),\n\n    [CURRENCY_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = true;\n      }),\n    [CURRENCY_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrw = action.payload.rate.toFixed(3);\n      }),\n    [CURRENCY_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUsdToKrwLoading = false;\n        draft.usdToKrwError = action.error;\n      }),\n    [BINANCE_BITCOIN_USDT]: (state, action) =>\n      produce(state, (draft) => {\n        const { BTC } = action.payload;\n        draft.binanceBitUsdt = BTC;\n        draft.isbitusdtLoading = false;\n      }),\n    /*[BINANCE_BITCOIN_USDT_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = true;\n      }),\n    [BINANCE_BITCOIN_USDT_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceBitUsdt = action.payload[0].p;\n        draft.isbitusdtLoading = false;\n      }),\n    [BINANCE_BITCOIN_USDT_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isbitusdtLoading = false;\n        draft.binanceBitUsdtError = action.error;\n      }),*/\n    [UPBIT_BTC_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = true;\n      }),\n    [UPBIT_BTC_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const { payload } = action;\n        //console.log(payload);\n        const filteredList = payload.map((v) => {\n          if (\n            moment(v.created_at).format(\"YYYY-MM-DD\") ===\n            moment().format(\"YYYY-MM-DD\")\n          )\n            return { new: true, notice: v };\n          else return { new: false, notice: v };\n        });\n        draft.upbitNewListing = filteredList;\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [UPBIT_BTC_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isUpbitNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = true;\n      }),\n    [BINANCE_NEWLISTING_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceNewListing = action.payload;\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [BINANCE_NEWLISTING_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isBinanceNewListingLoading = false;\n      }),\n    [UPBIT_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n      }),\n    [UPBIT_SETTING_SUCCESS]: (state, action) => {},\n    [UPBIT_SETTING_FAILURE]: (state, action) => {},\n    [BINANCE_SETTING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [BINANCE_SETTING_SUCCESS]: (state, action) => {},\n    [BINANCE_SETTING_FAILURE]: (state, action) => {},\n    [KEY_SETTING_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.upbitApi = action.payload.upbitApi;\n        draft.upbitSec = action.payload.upbitSec;\n        draft.binanceApi = action.payload.binanceApi;\n        draft.binanceSec = action.payload.binanceSec;\n      }),\n    [KEY_SETTING_SUCCESS]: (state, action) => {},\n    [KEY_SETTING_FAILURE]: (state, action) => {},\n    [UPBIT_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [UPBIT_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [BINANCE_CHECK_COIN_REQUEST]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_SUCCESS]: (state, action) =>\n      produce(state, (dratf) => {}),\n    [BINANCE_CHECK_COIN_FAILURE]: (state, action) =>\n      produce(state, (draft) => {}),\n    [UPBIT_BID_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_BID_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_BID_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [UPBIT_ASK_REQUEST]: (state, action) => produce(state, (draft) => {}),\n    [UPBIT_ASK_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        const {\n          payload: { error },\n        } = action;\n        draft.tradeError = error;\n      }),\n    [UPBIT_ASK_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 1;\n      }),\n    [TRADE_ERROR_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.tradeError = 0;\n      }),\n  },\n  initialState\n);\n","//breakpoints\nexport const breakpoints = {\n    xs: '428px',\n    sm: '640px',\n    md: '768px',\n    lg: '1024px'\n};\n\n//colors\nexport const colors = {\n  'white': '#ffffff',\n  'black': '#000000',\n  'blueSky': '#90abbf',\n  'blue-gray-50': '#f8fafc',\n  'blue-gray-100': '#f1f5f9',\n  'blue-gray-200': '#e2e8f0',\n  'blue-gray-300': '#cbd5e1',\n  'blue-gray-400': '#94a3b8',\n  'blue-gray-500': '#64748b',\n  'blue-gray-600': '#475569',\n  'blue-gray-700': '#334155',\n  'gray-50': '#fafafa',\n  'gray-100': '#f3f4f6',\n  'gray-200': '#e4e4e7',\n  'gray-300': '#d1d5db',\n  'gray-400': '#9ca3af',\n  'gray-500': '#6b7280',\n  'gray-600': '#4b5563',\n  'gray-700': '#374151',\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../styles/_variables';\n\nconst Container = styled.footer`\n    min-height: 2.5rem;\n    width: 100%;\n    margin-top: 1.2rem;\n    border-top: 1px solid ${colors['gray-100']};\n    background-color: ${colors['gray-50']};\n`;\n\nconst Footer = () => {\n    return <Container></Container>\n};\n\nexport default Footer;","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport { colors } from '../styles/_variables';\n\nconst Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 3px 10px 3px 10px;\n  height: 50px;\n  border-bottom: 1px solid ${colors['gray-100']};\n  background-color: #525f6e;\n  font-weight: bold;\n  & a {\n    text-decoration: none;\n    color: white;\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n  }\n`;\n\nconst Title = styled.p`\n  font-family: 800;\n  font-size: 1.2rem;\n`;\n\n\nconst Header = ({title}) => (\n    <Container>\n      <Title>\n        <Link to={'/'}>\n          {title}\n        </Link>\n      </Title>\n      {/*<NavLink activeClassName={''} to={`/event`}>소식</NavLink>*/}\n    </Container>\n);\nexport default Header;\n","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Layout = ({children}) => {\n  return <>\n    <Header title='CoinAT'/>\n    {children}\n    <Footer/>\n  </>\n};\nexport default Layout;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    width: 90vw;\n    @media (min-width:992px){\n      flex-direction: row;\n      width:970px;\n    }\n`;\n\nconst EventContainer = ({children}) => {\n    return (\n      <Container>\n        {children}\n      </Container>\n    );\n};\nexport default EventContainer;\n","import React from 'react';\nimport {NavLink, useLocation} from 'react-router-dom';\nimport styled from 'styled-components';\nimport qs from 'qs';\nimport { colors } from '../../styles/_variables';\n\nconst Section = styled.section`\n  width: 200px;\n  height: fit-content;\n  margin-right: 50px;\n  box-shadow: rgb(0 0 0 / 16%) 0px 0px 4px, rgb(0 0 0 / 23%) 0px 0px 4px;\n\n  @media (max-width:991px){\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Aside = styled.aside`\n  min-height: auto;\n`;\n\nconst MenuListContainer = styled.div`\n  padding: 0;\n`;\n\nconst MenuList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nconst Menu = styled.li`\n  padding: 10px;\n  background-color: ${({isActive})=>isActive===true?`${colors['gray-50']};`:'inherit'};\n\n  & a {\n    color: ${colors['black']};\n    text-decoration: none;\n\n    &.event-active {\n      color: #525f6e;\n      font-weight: bold;\n    }\n  }\n`;\n\nconst EventSideBar = () => {\n  const location = useLocation();\n  const isActive = (type) => (match,location) => {\n    return type === qs.parse(location.search)['?type']? true : false;\n  }\n\n  return (\n    <Section>\n      <Aside>\n        <MenuListContainer>\n            <MenuList>\n              <Menu isActive={isActive('notice')('',location)}>\n                <NavLink isActive={isActive('notice')} activeClassName={'event-active'} to={'event?type=notice'}>공지사항</NavLink>\n              </Menu>\n              <Menu isActive={isActive('disclosure')('',location)}>\n                <NavLink isActive={isActive('disclosure')} activeClassName={'event-active'} to={'event?type=disclosure'}>프로젝트 공시</NavLink>\n              </Menu>\n            </MenuList>\n        </MenuListContainer>\n      </Aside>\n    </Section>\n  );\n}\n\nexport default EventSideBar;","import {css} from 'styled-components';\nimport { breakpoints } from './_variables';\n\nexport const breakUp = Object.keys(breakpoints).reduce(\n    (accumulator, label) => {\n      accumulator[label] = (...args) => css`\n        @media (min-width: ${breakpoints[label]}) {\n          ${css(...args)};\n        }\n      `;\n      return accumulator;\n    },\n    {}\n);\n\nexport const breakDown = Object.keys(breakpoints).reduce(\n    (accumulator, label) => {\n      accumulator[label] = (...args) => css`\n        @media (max-width: ${breakpoints[label]}) {\n          ${css(...args)};\n        }\n      `;\n      return accumulator;\n    },\n    {}\n);","import React from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport {breakDown} from '../../styles/_mixin';\nimport { colors } from '../../styles/_variables';\n\nconst TableRow = styled.tr`\n\n`;\nconst TableCell = styled.td`\n  border-bottom: 1px solid ${colors['gray-100']};\n  ${breakDown.sm`\n    &:firstchild{\n      width: 60%;\n      word-break: keep-all;\n    }\n\n    &:nth-child(2){\n      width: 40%;\n    }\n  `}\n`;\nconst NoticeTitle = styled.p`\n  padding: 0.8rem 0.4rem;\n  margin: 0;\n  font-weight: bold;\n  word-break: break-word;\n  cursor: pointer;\n  ${breakDown.lg`\n    font-size:0.8rem;\n  `}\n`;\nconst NoticeDate = styled.p`\n  padding: 0.8rem 0.4rem;\n  margin: 0;\n  text-align: center;\n  font-weight: 400;\n  ${breakDown.lg`\n    font-size:0.8rem;\n  `}\n`;\nconst NoticeItem = ({title,updatedAt}) => {\n    return <>\n        <TableRow>\n            <TableCell>\n                <NoticeTitle>{title}</NoticeTitle>\n            </TableCell>\n            <TableCell>\n                <NoticeDate>{moment(updatedAt).format('YYYY-MM-DD')}</NoticeDate>\n            </TableCell>\n        </TableRow>\n    </>\n};\n\nexport default NoticeItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../styles/_variables';\nimport NoticeItem from './NoticeItem';\n\nconst Table = styled.table`\n  width: 100%;\n  margin: 0 auto;\n  border-spacing: 0;\n  background: ${colors['white']};\n`;\nconst TableHead = styled.thead`\n  background-color: ${colors['gray-100']};\n`;\nconst TableBody = styled.tbody`\n  height: 588px;\n`;\nconst TableRow = styled.tr`\n`;\nconst TableHeadCell = styled.th`\n  padding: 10px 0;\n  border-bottom: 1px solid ${colors['gray-100']};\n`; \n\nconst NoticeTable = ({items=[]}) => {\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableHeadCell>제목</TableHeadCell>\n            <TableHeadCell>등록일</TableHeadCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {items.map((item,idx)=><NoticeItem key={idx} {...item} />)}\n        </TableBody>\n      </Table>\n    );\n};\n\nexport default NoticeTable;\n","import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nconst LoadingAni = keyframes`\n    from{\n        opacity:0.3;\n    }to{\n        opacity:0.9;\n    }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #00000070;\n`;\nconst LoadingBar = styled.div`\n  position: absolute;\n  border: 3px solid white;\n  border-color: white transparent transparent;\n  width: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  height: ${(props) =>\n    props.size === \"l\" ? \"50px\" : props.size === \"m\" ? \"30px\" : \"10px\"};\n  border-radius: 50%;\n  ${(props) =>\n    props.size === \"l\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : props.size === \"m\"\n      ? css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `\n      : css`\n          animation: ${LoadingAni} 1.5s ease-out infinite;\n        `}\n`;\nfunction Loading({ isLoading }) {\n  return (\n    <>\n      {isLoading ? (\n        <LoadingContainer>\n          <LoadingBar size={\"l\"} />\n          <LoadingBar size={\"m\"} />\n          <LoadingBar size={\"s\"} />\n        </LoadingContainer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\nexport default Loading;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {colors} from '../../styles/_variables';\n\nconst Button = styled.button`\n  padding: 10px;\n  width: 100%;\n  border: none;\n  background: ${colors['gray-100']};\n  font-size: 1.05rem;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nconst LoadMore = React.forwardRef(({isMore, handleLoadMore},ref) => {\n  return <Button onClick={handleLoadMore} disabled={!isMore} ref={ref}>더 보기</Button>\n})\n\nexport default LoadMore;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const GET_NOTICE_REQUEST = \"NOTICE_REQUEST\";\nexport const GET_NOTICE_FAILURE = \"GET_NOTICE_FAILURE\";\nexport const GET_NOTICE_SUCCESS = \"GET_NOTICE_SUCCESS\";\n\nexport const loadNotice = createAction(GET_NOTICE_REQUEST);\n\nconst initialState = {\n  notices:[],\n  more:false,\n  isLoading: false,\n};\nexport default handleActions(\n  {\n    [GET_NOTICE_REQUEST]: (state, action) => produce(state, (draft) => {\n        draft.isLoading = true;\n    }),\n    [GET_NOTICE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n     \n        const {notices, more, page, type} = action.payload;\n        \n        draft.notices = type===\"notice\"?(page>1?[...draft.notices,...notices]:notices):notices;\n        draft.more = more;\n        draft.isLoading = false;\n      }),\n    [GET_NOTICE_FAILURE]: (state, action) => produce(state, (draft) => {\n        draft.isLoading = false;\n    }),\n  },\n  initialState\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport qs from 'qs'\nimport EventContainer from '../components/Event/EventContainer';\nimport EventSideBar from '../components/Event/EventSidebar';\nimport NoticeTable from '../components/Event/NoticeTable';\nimport Loading from '../components/Loading';\nimport LoadMore from '../components/Event/LoadMore';\nimport { loadNotice } from '../reducers/notice';\nimport { colors } from '../styles/_variables';\n\nconst convertTitle = {\n  'notice': '공지사항',\n  'disclosure': '프로젝트 공시'  \n};\n\nconst Container = styled.div`\n  padding-top: 2.5rem;\n  padding-bottom: 2.5rem;\n  min-height: 744px;\n`;\n\nconst NoticeSection= styled.section`\n  width:100%;\n  box-shadow: rgb(0 0 0 / 16%) 0px 0px 4px, rgb(0 0 0 / 23%) 0px 0px 4px;\n`;\n\nconst NoticeArticle = styled.article`\n  position: relative;\n  min-height: 600px;\n  margin-bottom: 10px;\n`;\n\nconst NoticeHeader = styled.header`\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  font-weight: bold;\n  background:${colors['blueSky']};\n  color:${colors['white']};\n`; \n\nconst LoadMoreContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 5px 5px 0 5px;\n  width: auto;\n`;\n\nconst Event = () => {\n    const [type, setType] = useState('notice');\n    const [currentPage, setCurrentPage] = useState(1);\n    const location = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const {notices = [], isLoading = true, more} = useSelector((state)=>state.notice);\n    \n\n    const handleLoadMore = () =>{\n      dispatch(loadNotice({page: currentPage+1,type}));\n      setCurrentPage(currentPage+1);\n    }\n    \n    useEffect(() => {\n      const type = qs.parse(location.search)['?type'];\n      if(!type){\n        history.replace('/event?type=notice');\n        return;\n      }\n      setType(type);\n    },[location, history]);\n\n    useEffect(()=>{\n      dispatch(loadNotice({page:1,type: type? type:'notice'}));\n    },[dispatch,type]);\n\n    return <Container>\n        <EventContainer>\n            <EventSideBar/>\n            <NoticeSection>\n                <NoticeArticle>\n                  <NoticeHeader>{convertTitle[type]}</NoticeHeader>\n                  {notices?.length>0&&(\n                    <>\n                      <NoticeTable items={notices}/>\n                      <LoadMoreContainer>\n                        <LoadMore isMore={more} handleLoadMore={handleLoadMore}/>\n                      </LoadMoreContainer>\n                    </>\n                   )\n                  }\n                </NoticeArticle>\n            </NoticeSection>\n        </EventContainer>\n        {isLoading&&<Loading isLoading={true}/>}\n    </Container>\n};\nexport default Event;","import React, { useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setBtc } from \"../../reducers/coin\";\nconst ExchangeContainer = styled.section`\n  ${(props) =>\n    props.isFixed\n      ? css`\n          top: 0;\n          position: fixed;\n          opacity: 0.9;\n          box-shadow: 0px 2px 7px 1px rgb(0 0 0 / 0.12);\n          width: 100%;\n        `\n      : css`\n          position: relative;\n        `}\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #90abbf;\n  font-weight: 800;\n  color: white;\n  text-shadow: 1px 1px 5px #545454;\n  height: 35px;\n  transition: all 0.5;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 6vh;\n  }\n`;\nconst Info = styled.p`\n  padding-left: 5px;\n  padding-right: 2px;\n  font-size: 1rem;\n  margin: 0;\n  padding: 4px;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    word-break: inherit;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (max-width: 581px) {\n    font-size: 0.75rem;\n  }\n`;\n\nfunction CurrentExchangeBar({ nav, isFixed }) {\n  const dispatch = useDispatch();\n  const { upbitBitKrw, usdToKrw, binanceBitUsdt, bithumbBitKrw } = useSelector(\n    (state) => state.coin\n  );\n  const [differene,setDifference] = useState(0);\n  const [usdtRate,setUsdtRate] = useState(0); \n\n\n  const convertUsdToKrw = useMemo(() => {\n    const converted = parseFloat(binanceBitUsdt, 10) * usdToKrw;\n    return converted.toFixed(2);\n  }, [binanceBitUsdt, usdToKrw]);\n\n  useEffect(() => {\n    const converted = convertUsdToKrw,\n      percent1 = (\n        ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw) / convertUsdToKrw) *\n        100\n      ).toFixed(2),\n      percent2 = (\n        ((parseFloat(bithumbBitKrw, 10) - convertUsdToKrw) / convertUsdToKrw) *\n        100\n      ).toFixed(2);\n    if(converted&&upbitBitKrw) {\n      const difference = ((parseFloat(upbitBitKrw, 10) - convertUsdToKrw) / convertUsdToKrw) *100;\n      setDifference(difference)\n      setUsdtRate((usdToKrw * (1+(difference/100))))\n    }\n    dispatch(\n      setBtc({\n        symbol: \"BTC\",\n        last: upbitBitKrw,\n        converted: parseFloat(converted, 10),\n        percent1: parseFloat(percent1, 10),\n        thumb: bithumbBitKrw,\n        percent2: parseFloat(percent2, 10),\n      })\n    );\n  }, [convertUsdToKrw, dispatch, upbitBitKrw, bithumbBitKrw, usdToKrw]);\n  return (\n    <>\n      <ExchangeContainer ref={nav} isFixed={isFixed}>\n        <Info>{`1$: ${usdToKrw}₩`}</Info>\n        <Info>{`업비트: ${upbitBitKrw} BTC/KRW`}</Info>\n        <Info>{`바이낸스: ${convertUsdToKrw} BTC/KRW`}</Info>\n        <Info>{`차이: ${differene.toFixed(2)}%`}</Info>\n        <Info>\n          {`1USDT: ${usdtRate.toFixed(3)}₩`}\n        </Info>\n      </ExchangeContainer>\n    </>\n  );\n}\nexport default CurrentExchangeBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../styles/_variables\";\n\nconst ItemListDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 5px;\n`;\n\nconst ItemListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n  height: 200px;\n  padding: 0;\n  margin: 0;\n  background-color: ${colors['white']};\n  margin: 5px;\n  padding: 5px;\n  overflow-y: scroll;\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  /* Hide scrollbar for IE and Edge */\n  & {\n    -ms-overflow-style: none;\n  }\n`;\n\nconst ItemListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid ${colors['gray-100']};\n  border-left: 0;\n  border-right: 0;\n  width: 100%;\n`;\n\nconst ItemSpan = styled.span`\n  font-size: 0.8rem;\n`;\n\nconst ItemInput = styled.input`\n  background-color: white;\n  border: 2px solid ${colors['gray-100']};\n  width: 30%;\n  padding: 5px;\n`;\n\nfunction ItemList({ coins, onChangePercent }) {\n  return (\n    <ItemListDiv>\n      <ItemListUl>\n        <ItemListLi>\n          <ItemSpan>BTC</ItemSpan>\n          <ItemInput\n            type=\"number\"\n            min={0}\n            max={100}\n            step={0.1}\n            placeholder=\"N%\"\n            onChange={onChangePercent}\n            data-name={\"BTC\"}\n          />\n        </ItemListLi>\n        {coins &&\n          coins.map((coin) => {\n            return (\n              <ItemListLi key={coin}>\n                <ItemSpan>{coin}</ItemSpan>\n                <ItemInput\n                  type=\"number\"\n                  min={0}\n                  max={100}\n                  step={0.1}\n                  placeholder=\"N%\"\n                  onChange={onChangePercent}\n                  data-name={coin}\n                />\n              </ItemListLi>\n            );\n          })}\n      </ItemListUl>\n    </ItemListDiv>\n  );\n}\nexport default React.memo(ItemList);\n","import React, { useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { upbitBid, upbitAsk, setTradeError, setKey } from \"../reducers/coin\";\nconst ApiContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: \"center\";\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n`;\nconst Input = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n  @media (max-width: 425px) {\n    width: 95%;\n  }\n`;\n\nconst SecretInput = styled.input`\n  height: 20px;\n  border: none;\n  margin: 3px;\n  flex: 1;\n  border-radius: 5px;\n  padding: 2px;\n`;\nconst SettingBtn = styled.button`\n  font-size: 0.6rem;\n  color: white;\n  background-color: #bdc3c7;\n  border: none;\n  cursor: pointer;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 5px;\n  width: 100%;\n`;\nconst TradeSettingDiv = styled(ApiContainer.withComponent(\"div\"))`\n  @media (max-width: 425px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nconst TradeBtn = styled(SettingBtn.withComponent(\"button\"))`\n  border-radius: 10px;\n  width: 50%;\n  @media (max-width: 425px) {\n    width: 95%;\n  }\n`;\nfunction SettingTrade({ coinInfo }) {\n  const dispatch = useDispatch();\n  const timer = useRef(false);\n  const upbitApi = useRef();\n  const upbitSec = useRef();\n  const binanceApi = useRef();\n  const binanceSec = useRef();\n  const coinSymbol = useRef(\"\");\n  const percent = useRef(\"\");\n  const amount = useRef(0);\n  const check = useRef(null);\n  const {\n    upbitBitKrw,\n    tradeError,\n    upbitApi: api1,\n    upbitSec: sec1,\n    binanceApi: api2,\n    binanceSec: sec2,\n  } = useSelector((state) => state.coin);\n\n  useEffect(() => {\n    if (timer.current) {\n      if (tradeError === 0) {\n        startTrade();\n      } else {\n        timer.current = false;\n      }\n    }\n  });\n  const onClickKey = useCallback(\n    (e) => {\n      const { target } = e;\n      if (target.innerHTML === \"확인\") {\n        if (\n          upbitApi.current.value === \"\" ||\n          upbitSec.current.value === \"\" ||\n          binanceApi.current.value === \"\" ||\n          binanceSec.current.value === \"\"\n        ) {\n          alert(\"API와 Secret키를 입력해주세요\");\n          return;\n        }\n        dispatch(\n          setKey({\n            upbitApi: upbitApi.current.value,\n            upbitSec: upbitSec.current.value,\n            binanceApi: binanceApi.current.value,\n            binanceSec: binanceSec.current.value,\n            type: \"set\",\n          })\n        );\n        target.innerHTML = \"취소\";\n      } else {\n        upbitApi.current.value = \"\";\n        upbitSec.current.value = \"\";\n        binanceApi.current.value = \"\";\n        binanceSec.current.value = \"\";\n        dispatch(\n          setKey({\n            upbitApi: \"\",\n            upbitSec: \"\",\n            binanceApi: \"\",\n            binanceSec: \"\",\n            type: \"cancel\",\n          })\n        );\n        target.innerHTML = \"확인\";\n      }\n    },\n    [dispatch]\n  );\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  const onClickTrade = useCallback((e) => {\n    setTradeError();\n    if (timer.current) {\n      timer.current = false;\n    } else {\n      if (\n        binanceApi.current.value === \"\" ||\n        binanceSec.current.value === \"\" ||\n        upbitApi.current.value === \"\" ||\n        upbitSec.current.value === \"\"\n      ) {\n        alert(\"API 와 Secret이 필요합니다\");\n      } else if (coinSymbol.current === \"\" || percent.current === \"\") {\n        alert(\"코인 & 차이(%) 설정이 필요합니다\");\n      } else {\n        timer.current = true;\n      }\n    }\n  }, []);\n  const onChangeCoin = useCallback((e) => {\n    const { target } = e;\n    coinSymbol.current = target.value;\n    //console.log(coinSymbol.current);\n  }, []);\n  const onChangePercent = useCallback((e) => {\n    const { target } = e;\n    percent.current = target.value;\n  }, []);\n  const onChangeAmount = useCallback((e) => {\n    const { target } = e;\n    amount.current = target.value;\n  }, []);\n  const startTrade = useCallback(() => {\n    const coin = coinInfo.filter((coin) => coin.symbol === coinSymbol.current);\n    const converted = (coin[0].blast * upbitBitKrw).toFixed(2);\n    const p = parseFloat(percent.current, 10);\n    const per = parseFloat(\n      (((coin[0].last - converted) / converted) * 100).toFixed(2),\n      10\n    );\n    if (Math.abs(per) >= p) {\n      if (per > 0) {\n        //console.log(\"업비트 매도, 바이낸스 매수\"); //ask  bid\n        dispatch(\n          upbitAsk({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      } else {\n        //console.log(\"업비트 매수, 바이낸스 매도\"); //bid ask\n        dispatch(\n          upbitBid({\n            symbol: coin[0].symbol,\n            q: amount.current,\n          })\n        );\n      }\n      check.current = per;\n    }\n  }, [coinInfo, upbitBitKrw, dispatch]);\n  return (\n    <>\n      <ApiContainer>\n        <Input ref={upbitApi} type=\"text\" placeholder=\"업비트 api\" />\n        <SecretInput\n          ref={upbitSec}\n          type=\"password\"\n          placeholder=\"업비트 secret\"\n        />\n      </ApiContainer>\n      <ApiContainer>\n        <Input ref={binanceApi} type=\"text\" placeholder=\"바이낸스 api\" />\n        <SecretInput\n          ref={binanceSec}\n          type=\"password\"\n          placeholder=\"바이낸스 secret\"\n        />\n      </ApiContainer>\n      <SettingBtn onClick={onClickKey}>확인</SettingBtn>\n      <TradeSettingDiv>\n        <Input type=\"text\" placeholder=\"코인\" onChange={onChangeCoin} />\n        <Input\n          type=\"number\"\n          placeholder=\"차이%\"\n          min={0}\n          max={100}\n          step={0.1}\n          onChange={onChangePercent}\n        />\n        <Input\n          type=\"number\"\n          placeholder=\"코인 양\"\n          min={0}\n          step={0.1}\n          onChange={onChangeAmount}\n        />\n        <TradeBtn onClick={onClickTrade}>\n          {timer.current ? \"설정 취소\" : \"자전 설정\"}\n        </TradeBtn>\n      </TradeSettingDiv>\n    </>\n  );\n}\n\nexport default React.memo(SettingTrade);\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\nexport const CANCEL_MESSAGE_REQUEST = \"CANCEL_MESSAGE_REQUEST\";\nexport const CANCEL_MESSAGE_SUCCESS = \"CANCEL_MESSAGE_SUCCESS\";\nexport const CANCEL_MESSAGE_FAILURE = \"CANCEL_MESSAGE_FAILURE\";\n\nexport const sendMessage = createAction(SEND_MESSAGE_REQUEST);\nexport const cancelMessage = createAction(CANCEL_MESSAGE_REQUEST);\nconst initialState = {\n  isSending: false,\n};\n\nexport default handleActions(\n  {\n    [SEND_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [SEND_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [SEND_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_REQUEST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = true;\n      }),\n    [CANCEL_MESSAGE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n    [CANCEL_MESSAGE_FAILURE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isSending = false;\n      }),\n  },\n  initialState\n);\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ItemList from \"../ItemList\";\nimport SettingTrade from \"../SettingTrade\";\nimport { sendMessage, cancelMessage } from \"../../reducers/bot\";\n\n\nconst SettingBarDiv = styled.div`\n  display: none;\n  position: fixed;\n  top: 0;\n  right: 10px;\n  padding-bottom: 10px;\n  background: #c4cfd8;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  box-shadow: -1px 1px 3px 0px #696969;\n  z-index: 10;\n  @media (max-width: 425px) {\n    font-size: 0.8rem;\n    right: 0px;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 5px;\n  & div:first-child {\n    flex: 1;\n  }\n`;\n\nconst SelectBtn = styled.button`\n  color: white;\n  background-color: #bdc3c7;\n  padding: 6px;\n  cursor: pointer;\n  font-weight: 800;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  box-shadow: 1px 0px 3px 0px #949494;\n  width: 100%;\n`;\n\nfunction SettingBar({ coinInfo, upbitBitKrw }) {\n  const dispatch = useDispatch();\n  const { coinList } = useSelector((state) => state.coin);\n  const wrapper = useRef();\n  const [coins, setCoins] = useState([]);\n  const [coinPer, setCoinPer] = useState({});\n  /**\n   * coinPer: 현재 프리미엄 %\n   * percent: 설정된 %\n   * currentPer: 변화 값 저장, 비교용으로 사용\n   */\n  useEffect(() => {\n    if (coinList.length > 0 && coins.length === 0) {\n      setCoins(coinList);\n    }\n  }, [coins, coinList]);\n  const onChangePercent = useCallback(\n    (e) => {\n      const {\n        target: { value, dataset },\n      } = e;\n      setCoinPer({\n        ...coinPer,\n        [dataset.name]: value,\n      });\n    },\n    [coinPer]\n  );\n\n  const onSetting = useCallback(\n    (e) => {\n      const { target } = e;\n      const percentsLength = Object.keys(coinPer).length;\n      if (percentsLength > 0) {\n        if (target.innerHTML === \"설정\") {\n          target.innerHTML = \"취소\";\n          dispatch(sendMessage({ coinPer }));\n        } else {\n          target.innerHTML = \"설정\";\n          dispatch(cancelMessage());\n        }\n      } else {\n        alert(\"최소 한개의 % 설정이 필요합니다\");\n      }\n    },\n    [coinPer, dispatch]\n  );\n  const onToggle = useCallback(() => {\n    if (\n      wrapper.current.style.display === \"flex\" ||\n      wrapper.current.style.display === \"\"\n    )\n      wrapper.current.style.display = \"none\";\n    else wrapper.current.style.display = \"flex\";\n  }, []);\n  return (\n    <SettingBarDiv>\n      <FontAwesomeIcon\n        icon={faCog}\n        style={{\n          alignSelf: \"flex-end\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1.0rem\",\n        }}\n        onClick={onToggle}\n      />\n      <InputWrapper ref={wrapper} style={{ display: \"none\" }}>\n        <SettingTrade coinInfo={coinInfo} />\n        <ItemList coins={coins} onChangePercent={onChangePercent} />\n        <SelectContainer>\n          <SelectBtn onClick={onSetting}>설정</SelectBtn>\n        </SelectContainer>\n      </InputWrapper>\n    </SettingBarDiv>\n  );\n}\n\nexport default React.memo(SettingBar);\n","import React, { useState, useLayoutEffect, useCallback, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\nimport styled, { css } from \"styled-components\";\nimport Loading from \"../Loading\";\nimport CurrentExchangeBar from \"./CurrentExchangeBar\";\nimport SettingBar from \"./SettingBar\";\nimport {\n  loadUpbitBitKrw,\n  loadBinanceBitUsdt,\n  loadBithumbBitkrw,\n  loadUsdToKrw,\n  loadUpbitNewListing,\n} from \"../../reducers/coin\";\nimport { getPercent, combineTickers } from \"../../utills/utills\";\n\n\nconst Container = styled.main`\n  min-height: 100vh;\n`;\n\nconst ExchangesWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  ${(props) =>\n    props.isFixed &&\n    css`\n      padding-top: ${props.offsetHeight + 10}px;\n    `}\n`;\nconst ExchangeCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 1025px) {\n    width: 80%;\n    margin: 0 auto;\n  }\n  @media (max-width: 1024px) {\n    width: 90%;\n    padding: 2px;\n    margin: 0 auto;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0px;\n  }\n`;\nconst CoinHeadContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  border-bottom: 1px solid #e3e3e3;\n  &:first-child {\n    font-weight: 800;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n  @media (min-width: 1025px) {\n    width: 80%;\n    margin: 0 auto;\n  }\n  @media (max-width: 1024px) {\n    width: 90%;\n    margin: 0 auto;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst CoinContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  padding: 2px;\n  border-bottom: 1px solid #e3e3e3;\n`;\nconst CoinImage = styled.img`\n  height: 20px;\n  width: 20px;\n  margin-right: 2px;\n  border: 1px solid #e3e3e3;\n  border-radius: 50%;\n  @media (max-width: 768px) {\n    height: 10px;\n    width: 10px;\n  }\n`;\nconst Coin = styled.p`\n  cursor: ${(props) => (props.head ? \"pointer\" : \"normal\")};\n  width: 30%;\n  word-break: break-all;\n  font-size: 0.85rem;\n  color: black;\n  margin-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  white-space: pre;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n  }\n  &:first-child {\n    flex-direction: row;\n  }\n  &:nth-child(2),\n  &:nth-child(5) {\n    color: ${(props) => (props.head === true ? \"black\" : \"#27ae60\")};\n    font-weight: ${(props) => (props.head === true ? \"800\" : \"600\")};\n  }\n  &:nth-child(3) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    font-weight: ${(props) =>\n      props.head === true ? \"800\" : props.up === true ? \"600\" : \"600\"};\n    p {\n      font-size: 0.85rem;\n      margin-bottom: 0;\n      margin-top: 0;\n      @media (max-width: 768px) {\n        font-size: 0.7rem;\n      }\n      @media (max-width: 425px) {\n        align-self: flex-start;\n      }\n    }\n  }\n  &:nth-child(4),\n  &:nth-child(6) {\n    color: ${(props) =>\n      props.head === true\n        ? \"black\"\n        : props.up === true\n        ? \"#e74c3c\"\n        : \"#0984e3\"};\n    border-radius: 10px;\n  }\n`;\n\nfunction ExchangeList() {\n  const [upbitCoinInfo, setUpbitCoinInfo] = useState([]);\n  const [isFirstLoading, setIsFirstLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [isFixed, setIsFixed] = useState(false);\n  const [navTop, setNavTop] = useState(null);\n  \n  const nav = useRef(null);\n  const info = useRef([]);\n  const sortType = useRef(-1);\n  const timer = useRef(null);\n\n  const dispatch = useDispatch();\n  const { coinList, upbitBitKrw } = useSelector((state) => state.coin);\n\n  const getExchangeTickers = useCallback(() => {\n    if (isFirstLoading === false && loading === false) setLoading(true);\n    const coinTickers = combineTickers(upbitBitKrw, coinList);\n    //console.log(coinTickers);\n    if (coinTickers && coinTickers.tickers) {\n      let info = [...coinTickers.tickers]?.sort((x, y) => {\n        if (sortType.current === -1) return x.symbol > y.symbol ? 1 : -1;\n        else if (sortType.current === 1) return x.symbol < y.symbol ? 1 : -1;\n        else if (sortType.current === -2) return x.last > y.last ? 1 : -1;\n        else if (sortType.current === 2) return x.last < y.last ? 1 : -1;\n        else if (sortType.current === -3) return x.blast > y.blast ? 1 : -1;\n        else if (sortType.current === 3) return x.blast < y.blast ? 1 : -1;\n        else if (sortType.current === -4) {\n          if (x.per1 !== undefined && y.per1 !== undefined) {\n            return x.per1 > y.per1 ? 1 : -1;\n          } else {\n            if (x.per1 === undefined) {\n              return -1;\n            } else if (y.per1 === undefined) {\n              return 1;\n            }\n          }\n        } else if (sortType.current === 4) {\n          if (x.per1 !== undefined && y.per1 !== undefined) {\n            return x.per1 < y.per1 ? 1 : -1;\n          } else {\n            if (x.per1 === undefined) {\n              return 1;\n            } else if (y.per1 === undefined) {\n              return -1;\n            }\n          }\n        }\n      });\n      dispatch(\n        loadUpbitBitKrw({\n          BTC: info.filter((ticker) => ticker.symbol === \"BTC\")[0]?.last || 0,\n        })\n      );\n      dispatch(\n        loadBithumbBitkrw({\n          BTC: info.filter((ticker) => ticker.symbol === \"BTC\")[0]?.thumb || 0,\n        })\n      );\n      dispatch(\n        loadBinanceBitUsdt({\n          BTC: info.filter((ticker) => ticker.symbol === \"BTC\")[0]?.blast || 0,\n        })\n      );\n      if (loading === true) setLoading(false);\n      if (isFirstLoading === false) setIsFirstLoading(true);\n      setUpbitCoinInfo(info);\n      dispatch(loadUsdToKrw());\n      dispatch(loadUpbitNewListing());\n      if (!timer.current) {\n        timer.current = setTimeout(() => {\n          timer.current = null;\n          getExchangeTickers();\n        }, 1300);\n      }\n    }\n  }, [loading, isFirstLoading, dispatch, sortType, coinList, upbitBitKrw]);\n\n  const navFix = () => {\n    if (window.scrollY >= navTop) {\n      //console.log(\"fixed\");\n      setIsFixed(true);\n    } else {\n      //console.log(\"normal\");\n      setIsFixed(false);\n    }\n  };\n\n  useEffect(() => {\n    if (navTop === null) setNavTop(nav.current.offsetTop);\n    window.addEventListener(\"scroll\", navFix);\n    return () => {\n      window.removeEventListener(\"scroll\", navFix);\n    };\n  }, [navTop]);\n  \n  useLayoutEffect(() => {\n    if (timer.current === null) getExchangeTickers();\n    return () => {\n      //clearTimeout(timer.current);\n    };\n  }, [getExchangeTickers, upbitBitKrw, coinList, info]);\n\n  const onSort = useCallback(\n    (coinInfo) => (e) => {\n      const {\n        target: {\n          dataset: { id },\n        },\n      } = e;\n      if (parseInt(id, 10) === 1) {\n        if (sortType.current === 1) {\n          coinInfo.sort((x, y) => {\n            return x.symbol > y.symbol ? 1 : -1;\n          });\n          sortType.current = -1;\n          //setSortType(-1);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.symbol < y.symbol ? 1 : -1;\n          });\n          sortType.current = 1;\n          //setSortType(1);\n        }\n      } else if (parseInt(id, 10) === 2) {\n        if (sortType.current === 2) {\n          coinInfo.sort((x, y) => {\n            return x.last > y.last ? 1 : -1;\n          });\n          sortType.current = -2;\n          //setSortType(-2);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.last < y.last ? 1 : -1;\n          });\n          sortType.current = 2;\n          //setSortType(2);\n        }\n      } else if (parseInt(id, 10) === 3) {\n        if (sortType.current === 3) {\n          coinInfo.sort((x, y) => {\n            return x.blast > y.blast ? 1 : -1;\n          });\n          sortType.current = -3;\n          //setSortType(-3);\n        } else {\n          coinInfo.sort((x, y) => {\n            return x.blast < y.blast ? 1 : -1;\n          });\n          sortType.current = 3;\n          //setSortType(3);\n        }\n      } else if (parseInt(id, 10) === 4) {\n        if (sortType.current === 4) {\n          coinInfo.sort((x, y) => {\n            if (x.per1 !== undefined && y.per1 !== undefined) {\n              return x.per1 > y.per1 ? 1 : -1;\n            } else {\n              if (x.per1 === undefined) {\n                return -1;\n              } else if (y.per1 === undefined) {\n                return 1;\n              } else {\n                return -1;\n              }\n            }\n          });\n          sortType.current = -4;\n        } else {\n          coinInfo.sort((x, y) => {\n            if (x.per1 !== undefined && y.per1 !== undefined) {\n              return x.per1 < y.per1 ? 1 : -1;\n            } else {\n              if (x.per1 === undefined) {\n                return 1;\n              } else if (y.per1 === undefined) {\n                return -1;\n              } else {\n                return -1;\n              }\n            }\n          });\n          sortType.current = 4;\n          //setSortType(4);\n        }\n      }\n    },\n    [sortType]\n  );\n  \n  return (\n    <Container>\n      <SettingBar coinInfo={upbitCoinInfo} upbitBitKrw={upbitBitKrw} />\n      <CurrentExchangeBar nav={nav} isFixed={isFixed} />\n      <ExchangesWrapper\n        isFixed={isFixed}\n        offsetHeight={nav.current !== null && nav.current.offsetHeight}\n      >\n        <CoinHeadContainer>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={1}>\n            코인\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={2}>\n            업비트(₩)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={3}>\n            바이낸스(BTC)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={4}>\n            차이(%)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={5}>\n            빗썸(₩)\n          </Coin>\n          <Coin head={true} onClick={onSort(upbitCoinInfo)} data-id={6}>\n            차이(%)\n          </Coin>\n        </CoinHeadContainer>\n        <ExchangeCoinsContainer>\n          {upbitCoinInfo\n            ?.filter((ticker) => ticker.symbol !== \"BTC\")\n            .map((v) => {\n              const convertedBinance = parseFloat(\n                (v.blast * upbitBitKrw).toFixed(2),\n                10\n              );\n              const percentUP = getPercent(v.last, convertedBinance).toFixed(2);\n              const percentBit = getPercent(v.thumb, convertedBinance).toFixed(\n                2\n              );\n              return (\n                <CoinContainer key={v4()}>\n                  <Coin>\n                    {v.last !== 0 && (\n                      <CoinImage\n                        src={`https://static.upbit.com/logos/${v.symbol}.png`}\n                      />\n                    )}\n                    {v.symbol}\n                  </Coin>\n                  <Coin\n                    head={percentUP === \"-100.00\"}\n                    data-type={percentUP === \"-100.00\" ? \"unlist\" : \"list\"}\n                  >\n                    {v.last}₩\n                  </Coin>\n                  <Coin up={percentUP > 0}>\n                    {v.blast && v.blast.toFixed(8)}\n                    {\"\\n\"}\n                    {convertedBinance}₩\n                  </Coin>\n                  <Coin head={percentUP === \"-100.00\"} up={percentUP > 0}>\n                    {percentUP !== \"Infinity\"\n                      ? percentUP === \"-100.00\"||isNaN(percentUP)\n                        ? \"미 상장\"\n                        : `${percentUP}%`\n                      : \"로딩중\"}\n                  </Coin>\n                  <Coin\n                    head={percentBit === \"-100.00\"}\n                    data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                  >\n                    {v.thumb}₩\n                  </Coin>\n                  <Coin\n                    head={percentBit === \"-100.00\"}\n                    up={percentBit > 0}\n                    data-type={percentBit === \"-100.00\" ? \"unlist\" : \"list\"}\n                  >\n                    {percentBit !== \"Infinity\"\n                      ? percentBit === \"-100.00\"||isNaN(percentUP)\n                        ? \"미 상장\"\n                        : `${percentBit}%`\n                      : \"로딩중\"}\n                  </Coin>\n                </CoinContainer>\n              );\n            })}\n        </ExchangeCoinsContainer>\n      </ExchangesWrapper>\n      {(loading || upbitCoinInfo.length < coinList.length) && (\n        <Loading isLoading={true} />\n      )}\n    </Container>\n  );\n}\nexport default React.memo(ExchangeList);\n","import React from 'react';\nimport ExchangeList from '../components/Home/ExchangeList';\n\nconst Home = () => {\n  return <ExchangeList />\n};\n\nexport default Home;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n  } from \"react-router-dom\";\nimport Layout from './components/Layout';\nimport Event from './pages/Event';\nimport Home from './pages/Home';\n\nexport default () => (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/event\" exact component={Event}/>\n        </Switch>\n      </Layout>\n    </Router>\n);","import React, { useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCoinList, loadUsdToKrw } from \"./reducers/coin\";\nimport Routes from \"./Routes\";\n\nconst App = () => {\n  let timer = useRef(null);\n  const dispatch = useDispatch();\n\n  const getCurrency = useCallback(() => {\n    dispatch(loadUsdToKrw());\n    if (!timer.current) {\n      timer.current = setTimeout(() => {\n        timer.current = null;\n        getCurrency();\n      }, 8000);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(loadCoinList());\n  }, [dispatch]);\n\n  return <Routes/>;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nimport notice from \"./notice\";\nexport default combineReducers({\n  coin,\n  bot,\n  notice,\n});\n","import { v4 } from \"uuid\";\nimport { all, takeLatest, fork, put, call, throttle } from \"redux-saga/effects\";\nimport {\n  CURRENCY_REQUEST,\n  CURRENCY_FAILURE,\n  CURRENCY_SUCCESS,\n  UPBIT_BTC_NEWLISTING_REQUEST,\n  UPBIT_BTC_NEWLISTING_SUCCESS,\n  UPBIT_BTC_NEWLISTING_FAILURE,\n  BINANCE_NEWLISTING_REQUEST,\n  BINANCE_NEWLISTING_SUCCESS,\n  BINANCE_NEWLISTING_FAILURE,\n  UPBIT_CHECK_COIN_REQUEST,\n  UPBIT_CHECK_COIN_SUCCESS,\n  UPBIT_CHECK_COIN_FAILURE,\n  BINANCE_CHECK_COIN_REQUEST,\n  BINANCE_CHECK_COIN_SUCCESS,\n  BINANCE_CHECK_COIN_FAILURE,\n  COIN_LIST_FAILURE,\n  COIN_LIST_SUCCESS,\n  COIN_LIST_REQUEST,\n  UPBIT_BID_REQUEST,\n  UPBIT_ASK_REQUEST,\n  UPBIT_BID_FAILURE,\n  UPBIT_BID_SUCCESS,\n  UPBIT_ASK_SUCCESS,\n  UPBIT_ASK_FAILURE,\n  BINANCE_SETTING,\n  BINANCE_SETTING_SUCCESS,\n  BINANCE_SETTING_FAILURE,\n  UPBIT_SETTING,\n  UPBIT_SETTING_SUCCESS,\n  UPBIT_SETTING_FAILURE,\n  KEY_SETTING_REQUEST,\n  KEY_SETTING_SUCCESS,\n  KEY_SETTING_FAILURE,\n  TICKERS_REQUEST,\n  TICKERS_SUCCESS,\n  TICKERS_FAILUER,\n} from \"../reducers/coin\";\nimport axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API;\nconst HEROKU_URL = \"https://secure-waters-04189.herokuapp.com/\";\n\nfunction loadCurrencyAPI() {\n  return axios.get(`${HEROKU_URL}currency`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n  //https://www.freeforexapi.com/api/live?pairs=USDKRW\n}\nfunction* loadCurrency() {\n  try {\n    const result = yield call(loadCurrencyAPI);\n    yield put({\n      type: CURRENCY_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CURRENCY_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCurrency() {\n  yield throttle(1000, CURRENCY_REQUEST, loadCurrency);\n}\n\nfunction loadUpbitNewListingAPI() {\n  return axios.get(`${HEROKU_URL}notice/upbit`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n}\nfunction* loadUpbitNewListing() {\n  try {\n    const result = yield call(loadUpbitNewListingAPI);\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BTC_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewListing() {\n  yield takeLatest(UPBIT_BTC_NEWLISTING_REQUEST, loadUpbitNewListing);\n}\n\nfunction loadBinanceNewListingAPI() {\n  return axios.get(`${HEROKU_URL}notice/binance`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* loadBinanceNewListing() {\n  try {\n    const result = yield call(loadBinanceNewListingAPI);\n    yield put({\n      type: BINANCE_NEWLISTING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_NEWLISTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewListing() {\n  yield takeLatest(BINANCE_NEWLISTING_REQUEST, loadBinanceNewListing);\n}\n\nfunction upbitNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/upbit`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* upbitNewCoin(action) {\n  try {\n    const result = yield call(upbitNewCoinAPI, action.payload);\n    yield put({\n      type: UPBIT_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitNewCoin() {\n  yield takeLatest(UPBIT_CHECK_COIN_REQUEST, upbitNewCoin);\n}\n\nfunction binanceNewCoinAPI(data) {\n  return axios.post(`${API_URL}coin/notice/binance`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* binanceNewCoin(action) {\n  try {\n    const result = yield call(binanceNewCoinAPI, action.payload);\n    yield put({\n      type: BINANCE_CHECK_COIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_CHECK_COIN_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchBinanceNewCoin() {\n  yield takeLatest(BINANCE_CHECK_COIN_REQUEST, binanceNewCoin);\n}\n\nfunction coinListAPI() {\n  return axios.get(`${HEROKU_URL}coins`);\n}\nfunction* coinList() {\n  try {\n    const result = yield call(coinListAPI);\n    yield put({\n      type: COIN_LIST_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: COIN_LIST_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCoinList() {\n  yield takeLatest(COIN_LIST_REQUEST, coinList);\n}\n\nfunction upbitBidAPI(data) {\n  return axios.post(`${API_URL}trade/bid`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* upbitBid(action) {\n  try {\n    //console.log(action.payload);\n    const result = yield call(upbitBidAPI, action.payload);\n    yield put({\n      type: UPBIT_BID_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_BID_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitBid() {\n  yield throttle(1200, UPBIT_BID_REQUEST, upbitBid);\n}\n\nfunction upbitAskAPI(data) {\n  return axios.post(`${API_URL}trade/ask`, data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* upbitAsk(action) {\n  try {\n    const result = yield call(upbitAskAPI, action.payload);\n    yield put({\n      type: UPBIT_ASK_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_ASK_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchUpbitAsk() {\n  yield throttle(1200, UPBIT_ASK_REQUEST, upbitAsk);\n}\n\nfunction setBinanceKeyAPI(data) {\n  return axios.post(\n    `${API_URL}trade/binance_key`,\n    {\n      api: data.binanceApi,\n      sec: data.binanceSec,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* setBinanceKey(action) {\n  try {\n    yield call(setBinanceKeyAPI, action.payload);\n    yield put({\n      type: BINANCE_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: BINANCE_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetBinanceKey() {\n  yield takeLatest(BINANCE_SETTING, setBinanceKey);\n}\n\nfunction setUpbitKeyAPI(data) {\n  return axios.post(\n    `${API_URL}trade/upbit_key`,\n    {\n      api: data.upbitApi,\n      sec: data.upbitSec,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* setUpbitKey(action) {\n  try {\n    yield call(setUpbitKeyAPI, action.payload);\n    yield put({\n      type: UPBIT_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: UPBIT_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetUpbitKey() {\n  yield takeLatest(UPBIT_SETTING, setUpbitKey);\n}\n\nfunction setKeyAPI(data) {\n  let uid = undefined;\n  if (data.type !== \"cancel\") {\n    uid = v4();\n    localStorage.setItem(\"uid\", uid);\n  } else {\n    uid = localStorage.getItem(\"uid\");\n    localStorage.removeItem(\"uid\");\n  }\n  return axios.post(\n    `${API_URL}trade/key`,\n    {\n      api1: data.upbitApi,\n      sec1: data.upbitSec,\n      api2: data.binanceApi,\n      sec2: data.binanceSec,\n      type: data.type,\n      uid,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* setKey(action) {\n  try {\n    yield call(setKeyAPI, action.payload);\n    yield put({\n      type: KEY_SETTING_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: KEY_SETTING_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSetKey() {\n  yield takeLatest(KEY_SETTING_REQUEST, setKey);\n}\n\nfunction loadTickersAPI() {\n  return axios.get(`${API_URL}coin/tickers`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    withCredentials: true,\n  });\n}\nfunction* loadTickers() {\n  try {\n    const result = yield call(loadTickersAPI);\n    yield put({\n      type: TICKERS_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: TICKERS_FAILUER,\n      error: e,\n    });\n  }\n}\nfunction* watchLoadTickers() {\n  yield throttle(1000, TICKERS_REQUEST, loadTickers);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchCurrency),\n    fork(watchUpbitNewListing),\n    fork(watchBinanceNewListing),\n    fork(watchUpbitNewCoin),\n    fork(watchBinanceNewCoin),\n    fork(watchCoinList),\n    fork(watchUpbitBid),\n    fork(watchUpbitAsk),\n    fork(watchSetBinanceKey),\n    fork(watchSetUpbitKey),\n    fork(watchSetKey),\n    fork(watchLoadTickers),\n  ]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SEND_MESSAGE_REQUEST,\n  SEND_MESSAGE_FAILURE,\n  SEND_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_SUCCESS,\n  CANCEL_MESSAGE_FAILURE,\n  CANCEL_MESSAGE_REQUEST,\n} from \"../reducers/bot\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst API_URL = \"https://secure-waters-04189.herokuapp.com/\";\nfunction sendMessageAPI(data) {\n  return axios.post(`${API_URL}bot/start`, data);\n}\nfunction* sendMessage(action) {\n  try {\n    const result = yield call(sendMessageAPI, action.payload);\n    yield put({\n      type: SEND_MESSAGE_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: SEND_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchSendMessage() {\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n}\n\nfunction cancelMessageAPI(data) {\n  return axios.post(`${API_URL}bot/cancel`, data);\n}\nfunction* cancelMessage(action) {\n  try {\n    yield call(cancelMessageAPI, action.payload);\n    yield put({\n      type: CANCEL_MESSAGE_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CANCEL_MESSAGE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchCancelMessage() {\n  yield takeLatest(CANCEL_MESSAGE_REQUEST, cancelMessage);\n}\n\nexport default function* botSaga() {\n  yield all([fork(watchSendMessage), fork(watchCancelMessage)]);\n}\n","import { all, takeLatest, fork, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { GET_NOTICE_REQUEST, GET_NOTICE_SUCCESS, GET_NOTICE_FAILURE } from \"../reducers/notice\";\n\nconst HEROKU_URL =  \"https://secure-waters-04189.herokuapp.com/\"; //process.env.REACT_APP_HERO;\n\nfunction loadNoticesAPI({page=1,type=\"notice\"}) {\n  return type===\"notice\"?axios.get(`${HEROKU_URL}notice/upbit`,{\n      params:{\n        page\n      }\n  }): axios.get(`https://project-team.upbit.com/api/v1/disclosure?region=kr&per_page=${12*page}`);\n}\nfunction* loadNotices(action) {\n  try {\n    const {type,page} = action.payload;\n    const {data} = yield call(loadNoticesAPI,action.payload);\n    const notices = type===\"notice\"? data.notices.map((notice)=>notice):data.data.posts.map((post)=>({title:post.text,updatedAt:post.start_date}));  \n    type===\"notice\"?    \n      yield put({\n        type: GET_NOTICE_SUCCESS,\n        payload: {notices,more:page<data.totalPage?true:false, page, type},\n      }) : \n      yield put({\n        type: GET_NOTICE_SUCCESS,\n        payload: {notices,more: data.data.more, page, type}\n      });\n  } catch (e) {\n    yield put({\n      type: GET_NOTICE_FAILURE,\n      error: e,\n    });\n  }\n}\nfunction* watchLoadNotice() {\n  yield takeLatest(GET_NOTICE_REQUEST, loadNotices);\n}\n\nexport default function* coinSaga() {\n  yield all([\n    fork(watchLoadNotice),\n  ]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport coin from \"./coin\";\nimport bot from \"./bot\";\nimport notice from \"./notice\";\n\nexport default function* rootSaga() {\n  yield all([call(coin), call(bot), call(notice)]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n//initSocket();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}